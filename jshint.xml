<?xml version="1.0" encoding="utf-8"?>
<testsuite name="jshint" tests="374" failures="5107" errors="0">
	<testcase name="client/app_config/app.config.js">
		<failure message="4 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 36, char 15: Missing semicolon.
3. line 3, char 1: &apos;angular&apos; is not defined.
4. line 9, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/app_config/common/stateService.js">
		<failure message="3 JSHint Failures">
1. line 2, char 1: Use the function form of &quot;use strict&quot;.
2. line 8, char 13: Expected an assignment or function call and instead saw an expression.
3. line 4, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/app_config/firstPage/firstPageCtrl.js">
		<failure message="5 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 2, char 1: &apos;angular&apos; is not defined.
3. line 19, char 17: &apos;console&apos; is not defined.
4. line 32, char 13: &apos;console&apos; is not defined.
5. line 37, char 9: &apos;console&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/app_config/layout/app.layout.js">
		<failure message="3 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 11, char 1: &apos;angular&apos; is not defined.
3. line 14, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/app_config/layout/layoutCtrl.js">
		<failure message="3 JSHint Failures">
1. line 44, char 14: Missing semicolon.
2. line 45, char 10: Unnecessary semicolon.
3. line 80, char 25: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/app_config/layout/layoutService.js">
		<failure message="14 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 9, char 13: Expected an assignment or function call and instead saw an expression.
3. line 10, char 13: Expected an assignment or function call and instead saw an expression.
4. line 38, char 14: Unnecessary semicolon.
5. line 43, char 18: Unnecessary semicolon.
6. line 46, char 21: &apos;i&apos; is already defined.
7. line 60, char 18: Unnecessary semicolon.
8. line 66, char 25: &apos;page&apos; is already defined.
9. line 76, char 18: Unnecessary semicolon.
10. line 77, char 14: Unnecessary semicolon.
11. line 91, char 64: Expected an assignment or function call and instead saw an expression.
12. line 103, char 10: Unnecessary semicolon.
13. line 3, char 1: &apos;angular&apos; is not defined.
14. line 91, char 41: &apos;$location&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/app_config/main/app.ctrl.js">
		<failure message="4 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 11, char 1: &apos;angular&apos; is not defined.
3. line 19, char 26: &apos;document&apos; is not defined.
4. line 20, char 32: &apos;document&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/app_config/main/app.service.js">
		<failure message="9 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 8, char 17: Expected an assignment or function call and instead saw an expression.
3. line 17, char 18: Unnecessary semicolon.
4. line 52, char 14: Unnecessary semicolon.
5. line 76, char 53: Missing semicolon.
6. line 4, char 1: &apos;angular&apos; is not defined.
7. line 38, char 50: &apos;$&apos; is not defined.
8. line 39, char 21: &apos;console&apos; is not defined.
9. line 47, char 21: &apos;console&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/app_config/theme/app.theme.js">
		<failure message="3 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
3. line 5, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-animate/angular-animate.js">
		<failure message="31 JSHint Failures">
1. line 92, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
2. line 94, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
3. line 803, char 27: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 856, char 9: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
5. line 950, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
6. line 972, char 11: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
7. line 973, char 11: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
8. line 997, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
9. line 1041, char 12: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
10. line 1042, char 12: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
11. line 1088, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
12. line 1089, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
13. line 1116, char 42: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
14. line 1143, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
15. line 1163, char 28: Use &apos;===&apos; to compare with &apos;null&apos;.
16. line 1373, char 26: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
17. line 1375, char 26: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
18. line 1429, char 19: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
19. line 1551, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
20. line 1704, char 32: [&apos;out&apos;] is better written in dot notation.
21. line 2301, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
22. line 2387, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
23. line 2600, char 29: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
24. line 2637, char 33: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
25. line 2638, char 37: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
26. line 2639, char 37: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
27. line 2672, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
28. line 2848, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
29. line 2949, char 34: Don&apos;t make functions within a loop.
30. line 3050, char 19: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
31. line 3085, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-animate/angular-animate.min.js">
		<failure message="51 JSHint Failures">
1. line 6, char 100: Missing semicolon.
2. line 6, char 187: Expected an assignment or function call and instead saw an expression.
3. line 6, char 209: Expected an assignment or function call and instead saw an expression.
4. line 6, char 225: Missing semicolon.
5. line 6, char 293: Expected an assignment or function call and instead saw an expression.
6. line 6, char 303: Missing semicolon.
7. line 6, char 436: Expected an assignment or function call and instead saw an expression.
8. line 6, char 437: Missing semicolon.
9. line 6, char 448: Missing semicolon.
10. line 7, char 67: Missing semicolon.
11. line 7, char 97: Missing semicolon.
12. line 7, char 196: Missing semicolon.
13. line 7, char 248: Missing semicolon.
14. line 7, char 250: Missing semicolon.
15. line 7, char 304: Missing semicolon.
16. line 7, char 306: Missing semicolon.
17. line 7, char 389: Expected an assignment or function call and instead saw an expression.
18. line 7, char 447: Expected an assignment or function call and instead saw an expression.
19. line 7, char 448: Missing semicolon.
20. line 7, char 449: Missing semicolon.
21. line 8, char 61: Missing semicolon.
22. line 8, char 78: Missing semicolon.
23. line 8, char 87: Missing semicolon.
24. line 8, char 120: Missing semicolon.
25. line 8, char 172: Expected an assignment or function call and instead saw an expression.
26. line 8, char 173: Missing semicolon.
27. line 8, char 219: Expected an assignment or function call and instead saw an expression.
28. line 8, char 220: Missing semicolon.
29. line 8, char 507: Expected an assignment or function call and instead saw an expression.
30. line 9, char 70: Expected an assignment or function call and instead saw an expression.
31. line 9, char 215: Missing semicolon.
32. line 9, char 270: Expected an assignment or function call and instead saw an expression.
33. line 9, char 315: Expected an assignment or function call and instead saw an expression.
34. line 9, char 316: Missing semicolon.
35. line 9, char 327: Missing semicolon.
36. line 9, char 375: Missing semicolon.
37. line 9, char 424: Missing semicolon.
38. line 10, char 70: Expected an assignment or function call and instead saw an expression.
39. line 10, char 108: Expected an assignment or function call and instead saw an expression.
40. line 10, char 109: Missing semicolon.
41. line 10, char 120: Missing semicolon.
42. line 10, char 163: Missing semicolon.
43. line 10, char 211: Expected an assignment or function call and instead saw an expression.
44. line 10, char 253: Expected an assignment or function call and instead saw an expression.
45. line 10, char 304: Expected an assignment or function call and instead saw an expression.
46. line 10, char 353: Expected an assignment or function call and instead saw an expression.
47. line 10, char 354: Missing semicolon.
48. line 10, char 418: Missing semicolon.
49. line 10, char 495: Missing semicolon.
50. line 11, char 22: Missing semicolon.
51. line 11, char 22: Too many errors. (18% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-animate/index.js" />
	<testcase name="client/bower_components/angular-aria/angular-aria.js">
		<failure message="2 JSHint Failures">
1. line 327, char 13: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
2. line 330, char 48: [&apos;required&apos;] is better written in dot notation.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-aria/angular-aria.min.js">
		<failure message="51 JSHint Failures">
1. line 6, char 152: Missing semicolon.
2. line 6, char 373: Missing semicolon.
3. line 6, char 374: Expected an assignment or function call and instead saw an expression.
4. line 6, char 375: Missing semicolon.
5. line 6, char 376: Missing semicolon.
6. line 7, char 61: Missing semicolon.
7. line 7, char 121: Missing semicolon.
8. line 7, char 137: Missing semicolon.
9. line 7, char 138: Missing semicolon.
10. line 7, char 231: Missing semicolon.
11. line 7, char 325: Missing semicolon.
12. line 7, char 421: Missing semicolon.
13. line 8, char 6: Missing semicolon.
14. line 8, char 109: Missing semicolon.
15. line 8, char 212: Missing semicolon.
16. line 8, char 321: Missing semicolon.
17. line 8, char 388: Missing semicolon.
18. line 9, char 88: Missing semicolon.
19. line 9, char 238: Missing semicolon.
20. line 9, char 297: Missing semicolon.
21. line 9, char 359: Missing semicolon.
22. line 9, char 458: Expected an assignment or function call and instead saw an expression.
23. line 10, char 16: Expected an assignment or function call and instead saw an expression.
24. line 10, char 40: Expected an assignment or function call and instead saw an expression.
25. line 10, char 91: Expected an assignment or function call and instead saw an expression.
26. line 10, char 369: Missing semicolon.
27. line 10, char 370: Expected an assignment or function call and instead saw an expression.
28. line 10, char 429: Missing semicolon.
29. line 10, char 430: Expected an assignment or function call and instead saw an expression.
30. line 10, char 483: Missing semicolon.
31. line 10, char 484: Expected an assignment or function call and instead saw an expression.
32. line 10, char 485: Missing semicolon.
33. line 11, char 2: Expected an assignment or function call and instead saw an expression.
34. line 11, char 3: Missing semicolon.
35. line 11, char 170: Missing semicolon.
36. line 11, char 171: Expected an assignment or function call and instead saw an expression.
37. line 11, char 248: Missing semicolon.
38. line 11, char 288: Missing semicolon.
39. line 11, char 289: Expected an assignment or function call and instead saw an expression.
40. line 11, char 290: Missing semicolon.
41. line 11, char 292: Missing semicolon.
42. line 11, char 294: Missing semicolon.
43. line 11, char 397: Missing semicolon.
44. line 12, char 31: Expected an assignment or function call and instead saw an expression.
45. line 12, char 32: Missing semicolon.
46. line 12, char 34: Missing semicolon.
47. line 12, char 442: Missing semicolon.
48. line 12, char 494: Expected an assignment or function call and instead saw an expression.
49. line 12, char 495: Missing semicolon.
50. line 12, char 497: Missing semicolon.
51. line 12, char 497: Too many errors. (80% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-aria/index.js" />
	<testcase name="client/bower_components/angular-loading-bar/Gruntfile.js" />
	<testcase name="client/bower_components/angular-loading-bar/build/loading-bar.js" />
	<testcase name="client/bower_components/angular-loading-bar/build/loading-bar.min.js">
		<failure message="41 JSHint Failures">
1. line 7, char 409: Expected an assignment or function call and instead saw an expression.
2. line 7, char 410: Missing semicolon.
3. line 7, char 491: Confusing use of &apos;!&apos;.
4. line 7, char 605: Expected an assignment or function call and instead saw an expression.
5. line 7, char 711: Missing semicolon.
6. line 7, char 890: Missing semicolon.
7. line 7, char 913: Missing semicolon.
8. line 7, char 1238: Missing semicolon.
9. line 7, char 1589: Missing semicolon.
10. line 7, char 1591: Missing semicolon.
11. line 7, char 1616: Missing semicolon.
12. line 7, char 1800: A leading decimal point can be confused with a dot: &apos;.02&apos;.
13. line 7, char 2563: A leading decimal point can be confused with a dot: &apos;.25&apos;.
14. line 7, char 2596: A leading decimal point can be confused with a dot: &apos;.25&apos;.
15. line 7, char 2601: A leading decimal point can be confused with a dot: &apos;.65&apos;.
16. line 7, char 2630: A leading decimal point can be confused with a dot: &apos;.65&apos;.
17. line 7, char 2634: A leading decimal point can be confused with a dot: &apos;.9&apos;.
18. line 7, char 2662: A leading decimal point can be confused with a dot: &apos;.9&apos;.
19. line 7, char 2667: A leading decimal point can be confused with a dot: &apos;.99&apos;.
20. line 7, char 2674: A leading decimal point can be confused with a dot: &apos;.005&apos;.
21. line 7, char 2255: Expected an assignment or function call and instead saw an expression.
22. line 7, char 2408: Expected an assignment or function call and instead saw an expression.
23. line 7, char 2409: Missing semicolon.
24. line 7, char 2502: Missing semicolon.
25. line 7, char 2508: Expected an assignment or function call and instead saw an expression.
26. line 7, char 2509: Missing semicolon.
27. line 7, char 2527: Confusing use of &apos;!&apos;.
28. line 7, char 2693: Missing semicolon.
29. line 7, char 2716: Missing semicolon.
30. line 7, char 2737: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2738: Missing semicolon.
32. line 7, char 2898: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2899: Missing semicolon.
34. line 7, char 2904: Expected an assignment or function call and instead saw an expression.
35. line 7, char 2905: Missing semicolon.
36. line 7, char 3344: Missing semicolon.
37. line 7, char 3345: Expected an assignment or function call and instead saw an expression.
38. line 7, char 3346: Missing semicolon.
39. line 7, char 3347: Expected an assignment or function call and instead saw an expression.
40. line 7, char 3348: Missing semicolon.
41. line 7, char 3350: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-loading-bar/index.js" />
	<testcase name="client/bower_components/angular-loading-bar/src/loading-bar.js" />
	<testcase name="client/bower_components/angular-local-storage/demo/demo-app.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 2, char 1: &apos;window&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-local-storage/dist/angular-local-storage.js" />
	<testcase name="client/bower_components/angular-local-storage/dist/angular-local-storage.min.js">
		<failure message="51 JSHint Failures">
1. line 8, char 359: Missing semicolon.
2. line 8, char 423: Missing semicolon.
3. line 8, char 512: Missing semicolon.
4. line 8, char 586: Missing semicolon.
5. line 8, char 665: Missing semicolon.
6. line 8, char 863: Expected an assignment or function call and instead saw an expression.
7. line 8, char 893: Missing semicolon.
8. line 8, char 1030: Missing semicolon.
9. line 8, char 1124: Missing semicolon.
10. line 8, char 1539: Expected an assignment or function call and instead saw an expression.
11. line 8, char 1540: Missing semicolon.
12. line 8, char 1627: Missing semicolon.
13. line 8, char 1636: Missing semicolon.
14. line 8, char 1868: Missing semicolon.
15. line 8, char 1886: Missing semicolon.
16. line 8, char 2115: Expected an assignment or function call and instead saw an expression.
17. line 8, char 2116: Missing semicolon.
18. line 8, char 2193: Expected an assignment or function call and instead saw an expression.
19. line 8, char 2194: Missing semicolon.
20. line 8, char 2394: Expected an assignment or function call and instead saw an expression.
21. line 8, char 2395: Missing semicolon.
22. line 8, char 2591: Missing semicolon.
23. line 8, char 2678: Missing semicolon.
24. line 8, char 2687: Missing semicolon.
25. line 8, char 2733: Missing &apos;()&apos; invoking a constructor.
26. line 8, char 2762: Missing &apos;()&apos; invoking a constructor.
27. line 8, char 2983: Missing semicolon.
28. line 8, char 3067: Missing semicolon.
29. line 8, char 3076: Missing semicolon.
30. line 8, char 3214: Missing semicolon.
31. line 8, char 3297: Missing semicolon.
32. line 8, char 3473: Missing &apos;()&apos; invoking a constructor.
33. line 8, char 3843: Expected an assignment or function call and instead saw an expression.
34. line 8, char 3844: Missing semicolon.
35. line 8, char 3928: Missing semicolon.
36. line 8, char 3937: Missing semicolon.
37. line 8, char 4291: Missing semicolon.
38. line 8, char 4309: Missing semicolon.
39. line 8, char 4323: Missing semicolon.
40. line 8, char 4348: Missing semicolon.
41. line 8, char 4527: Missing semicolon.
42. line 8, char 4551: Missing semicolon.
43. line 8, char 4686: Missing semicolon.
44. line 8, char 4696: Missing semicolon.
45. line 8, char 4775: Expected an assignment or function call and instead saw an expression.
46. line 8, char 4786: Missing semicolon.
47. line 8, char 4960: Missing semicolon.
48. line 8, char 4961: Expected an assignment or function call and instead saw an expression.
49. line 8, char 4962: Missing semicolon.
50. line 8, char 4964: Missing semicolon.
51. line 8, char 4964: Too many errors. (88% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-local-storage/index.js" />
	<testcase name="client/bower_components/angular-material/angular-material-mocks.js">
		<failure message="1 JSHINT Failure">
1. line 81, char 20: Unnecessary semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/angular-material.js">
		<failure message="51 JSHint Failures">
1. line 11, char 1: Unnecessary directive &quot;use strict&quot;.
2. line 16, char 1: Unnecessary directive &quot;use strict&quot;.
3. line 102, char 1: Unnecessary directive &quot;use strict&quot;.
4. line 201, char 4: Missing semicolon.
5. line 215, char 1: Unnecessary directive &quot;use strict&quot;.
6. line 279, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
7. line 288, char 4: Missing semicolon.
8. line 292, char 1: Unnecessary directive &quot;use strict&quot;.
9. line 406, char 1: Unnecessary directive &quot;use strict&quot;.
10. line 638, char 1: Unnecessary directive &quot;use strict&quot;.
11. line 824, char 49: Missing semicolon.
12. line 838, char 1: Unnecessary directive &quot;use strict&quot;.
13. line 884, char 32: Missing semicolon.
14. line 905, char 1: Unnecessary directive &quot;use strict&quot;.
15. line 967, char 29: Use &apos;===&apos; to compare with &apos;0&apos;.
16. line 1076, char 12: Expected an assignment or function call and instead saw an expression.
17. line 1096, char 60: Did you mean to return a conditional instead of an assignment?
18. line 1165, char 24: Expected an assignment or function call and instead saw an expression.
19. line 1393, char 34: Expected a conditional expression and instead saw an assignment.
20. line 1404, char 78: Missing semicolon.
21. line 1500, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
22. line 1624, char 1: Unnecessary directive &quot;use strict&quot;.
23. line 1695, char 36: Expected a conditional expression and instead saw an assignment.
24. line 1740, char 1: Unnecessary directive &quot;use strict&quot;.
25. line 1850, char 28: Did you mean to return a conditional instead of an assignment?
26. line 1885, char 1: Unnecessary directive &quot;use strict&quot;.
27. line 1940, char 34: Did you mean to return a conditional instead of an assignment?
28. line 2377, char 4: Expected an assignment or function call and instead saw an expression.
29. line 2402, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
30. line 2411, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
31. line 2556, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
32. line 2557, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
33. line 2596, char 1: Unnecessary directive &quot;use strict&quot;.
34. line 2864, char 23: Did you mean to return a conditional instead of an assignment?
35. line 3016, char 22: Did you mean to return a conditional instead of an assignment?
36. line 3061, char 60: Expected an assignment or function call and instead saw an expression.
37. line 3067, char 74: Expected an assignment or function call and instead saw an expression.
38. line 3076, char 80: Expected an assignment or function call and instead saw an expression.
39. line 3210, char 14: Missing semicolon.
40. line 3217, char 12: Missing semicolon.
41. line 3261, char 37: Use &apos;===&apos; to compare with &apos;true&apos;.
42. line 3295, char 1: Unnecessary directive &quot;use strict&quot;.
43. line 3298, char 3: Unnecessary directive &quot;use strict&quot;.
44. line 3555, char 51: Missing semicolon.
45. line 3768, char 33: Use &apos;===&apos; to compare with &apos;0&apos;.
46. line 3768, char 64: Use &apos;===&apos; to compare with &apos;0&apos;.
47. line 3793, char 1: Unnecessary directive &quot;use strict&quot;.
48. line 3819, char 18: Did you mean to return a conditional instead of an assignment?
49. line 3923, char 1: Unnecessary directive &quot;use strict&quot;.
50. line 3926, char 3: Unnecessary directive &quot;use strict&quot;.
51. line 3926, char 3: Too many errors. (12% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/angular-material.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 1527: Missing semicolon.
2. line 7, char 1750: Missing semicolon.
3. line 7, char 1922: Expected an assignment or function call and instead saw an expression.
4. line 7, char 1923: Missing semicolon.
5. line 7, char 2087: Expected an assignment or function call and instead saw an expression.
6. line 7, char 2088: Missing semicolon.
7. line 7, char 2090: Expected an assignment or function call and instead saw an expression.
8. line 7, char 2091: Missing semicolon.
9. line 7, char 2092: Missing semicolon.
10. line 7, char 2095: Missing semicolon.
11. line 7, char 2346: Expected an assignment or function call and instead saw an expression.
12. line 7, char 2347: Missing semicolon.
13. line 7, char 2402: Missing semicolon.
14. line 7, char 2529: Missing semicolon.
15. line 7, char 2531: Missing semicolon.
16. line 7, char 2641: Missing semicolon.
17. line 7, char 2874: Missing semicolon.
18. line 7, char 3163: Missing semicolon.
19. line 7, char 3226: Missing semicolon.
20. line 7, char 3312: Missing semicolon.
21. line 7, char 3368: Missing semicolon.
22. line 7, char 3420: Missing semicolon.
23. line 7, char 3556: Missing semicolon.
24. line 7, char 3601: Missing semicolon.
25. line 7, char 3679: Missing semicolon.
26. line 7, char 3681: Missing semicolon.
27. line 7, char 4943: Missing semicolon.
28. line 7, char 5016: Expected an assignment or function call and instead saw an expression.
29. line 7, char 5017: Missing semicolon.
30. line 7, char 5079: Missing semicolon.
31. line 7, char 5108: Missing semicolon.
32. line 7, char 5156: Missing semicolon.
33. line 7, char 5192: Missing semicolon.
34. line 7, char 5228: Missing semicolon.
35. line 7, char 5264: Missing semicolon.
36. line 7, char 5324: Missing semicolon.
37. line 7, char 5326: Missing semicolon.
38. line 7, char 5405: Missing semicolon.
39. line 7, char 5441: Expected an assignment or function call and instead saw an expression.
40. line 7, char 5442: Missing semicolon.
41. line 7, char 5476: Missing semicolon.
42. line 7, char 5508: Missing semicolon.
43. line 7, char 5547: Missing semicolon.
44. line 7, char 5595: Missing semicolon.
45. line 7, char 5796: Expected an assignment or function call and instead saw an expression.
46. line 7, char 5797: Missing semicolon.
47. line 7, char 5824: Missing semicolon.
48. line 7, char 5882: Expected an assignment or function call and instead saw an expression.
49. line 7, char 6072: Missing semicolon.
50. line 7, char 6198: Missing semicolon.
51. line 7, char 6198: Too many errors. (41% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/index.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/autocomplete/autocomplete.js">
		<failure message="51 JSHint Failures">
1. line 304, char 6: Missing semicolon.
2. line 350, char 101: Expected an assignment or function call and instead saw an expression.
3. line 357, char 64: Expected an assignment or function call and instead saw an expression.
4. line 1009, char 17: Bad escaping of EOL. Use option multistr if needed.
5. line 1010, char 32: Bad escaping of EOL. Use option multistr if needed.
6. line 1011, char 27: Bad escaping of EOL. Use option multistr if needed.
7. line 1012, char 117: Bad escaping of EOL. Use option multistr if needed.
8. line 1013, char 38: Bad escaping of EOL. Use option multistr if needed.
9. line 1014, char 32: Bad escaping of EOL. Use option multistr if needed.
10. line 1015, char 74: Bad escaping of EOL. Use option multistr if needed.
11. line 1016, char 63: Bad escaping of EOL. Use option multistr if needed.
12. line 1017, char 62: Bad escaping of EOL. Use option multistr if needed.
13. line 1018, char 41: Bad escaping of EOL. Use option multistr if needed.
14. line 1019, char 31: Bad escaping of EOL. Use option multistr if needed.
15. line 1020, char 39: Bad escaping of EOL. Use option multistr if needed.
16. line 1021, char 64: Bad escaping of EOL. Use option multistr if needed.
17. line 1022, char 64: Bad escaping of EOL. Use option multistr if needed.
18. line 1023, char 59: Bad escaping of EOL. Use option multistr if needed.
19. line 1024, char 53: Bad escaping of EOL. Use option multistr if needed.
20. line 1025, char 79: Bad escaping of EOL. Use option multistr if needed.
21. line 1026, char 87: Bad escaping of EOL. Use option multistr if needed.
22. line 1027, char 37: Bad escaping of EOL. Use option multistr if needed.
23. line 1028, char 54: Bad escaping of EOL. Use option multistr if needed.
24. line 1029, char 41: Bad escaping of EOL. Use option multistr if needed.
25. line 1030, char 54: Bad escaping of EOL. Use option multistr if needed.
26. line 1031, char 76: Bad escaping of EOL. Use option multistr if needed.
27. line 1032, char 82: Bad escaping of EOL. Use option multistr if needed.
28. line 1033, char 66: Bad escaping of EOL. Use option multistr if needed.
29. line 1034, char 66: Bad escaping of EOL. Use option multistr if needed.
30. line 1035, char 41: Bad escaping of EOL. Use option multistr if needed.
31. line 1036, char 49: Bad escaping of EOL. Use option multistr if needed.
32. line 1037, char 20: Bad escaping of EOL. Use option multistr if needed.
33. line 1038, char 43: Bad escaping of EOL. Use option multistr if needed.
34. line 1039, char 34: Bad escaping of EOL. Use option multistr if needed.
35. line 1040, char 23: Bad escaping of EOL. Use option multistr if needed.
36. line 1041, char 42: Bad escaping of EOL. Use option multistr if needed.
37. line 1042, char 28: Bad escaping of EOL. Use option multistr if needed.
38. line 1043, char 37: Bad escaping of EOL. Use option multistr if needed.
39. line 1044, char 115: Bad escaping of EOL. Use option multistr if needed.
40. line 1058, char 67: Bad escaping of EOL. Use option multistr if needed.
41. line 1058, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
42. line 1066, char 21: Bad escaping of EOL. Use option multistr if needed.
43. line 1067, char 62: Bad escaping of EOL. Use option multistr if needed.
44. line 1068, char 49: Bad escaping of EOL. Use option multistr if needed.
45. line 1069, char 37: Bad escaping of EOL. Use option multistr if needed.
46. line 1070, char 33: Use &apos;!==&apos; to compare with &apos;null&apos;.
47. line 1070, char 84: Bad escaping of EOL. Use option multistr if needed.
48. line 1071, char 81: Bad escaping of EOL. Use option multistr if needed.
49. line 1072, char 41: Bad escaping of EOL. Use option multistr if needed.
50. line 1073, char 39: Bad escaping of EOL. Use option multistr if needed.
51. line 1073, char 39: Too many errors. (82% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/autocomplete/autocomplete.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 186: Expected an assignment or function call and instead saw an expression.
2. line 7, char 187: Missing semicolon.
3. line 7, char 188: Expected an assignment or function call and instead saw an expression.
4. line 7, char 189: Missing semicolon.
5. line 7, char 385: Expected an assignment or function call and instead saw an expression.
6. line 7, char 386: Missing semicolon.
7. line 7, char 395: Missing semicolon.
8. line 7, char 549: Expected an assignment or function call and instead saw an expression.
9. line 7, char 550: Missing semicolon.
10. line 7, char 1214: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1215: Missing semicolon.
12. line 7, char 1377: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1378: Missing semicolon.
14. line 7, char 1420: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1421: Missing semicolon.
16. line 7, char 1542: Missing semicolon.
17. line 7, char 1622: Missing semicolon.
18. line 7, char 1702: Missing semicolon.
19. line 7, char 1827: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1828: Missing semicolon.
21. line 7, char 2014: Missing semicolon.
22. line 7, char 2016: Missing semicolon.
23. line 7, char 2356: Expected an assignment or function call and instead saw an expression.
24. line 7, char 2357: Missing semicolon.
25. line 7, char 2484: Missing semicolon.
26. line 7, char 2571: Expected an assignment or function call and instead saw an expression.
27. line 7, char 2581: Missing semicolon.
28. line 7, char 2693: Expected an assignment or function call and instead saw an expression.
29. line 7, char 2694: Missing semicolon.
30. line 7, char 2769: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2770: Missing semicolon.
32. line 7, char 2776: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2777: Missing semicolon.
34. line 7, char 2824: Missing semicolon.
35. line 7, char 2915: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2916: Missing semicolon.
37. line 7, char 2917: Missing semicolon.
38. line 7, char 2936: Missing semicolon.
39. line 7, char 2989: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2990: Missing semicolon.
41. line 7, char 3020: Missing semicolon.
42. line 7, char 3082: Expected an assignment or function call and instead saw an expression.
43. line 7, char 3083: Missing semicolon.
44. line 7, char 3095: Expected an assignment or function call and instead saw an expression.
45. line 7, char 3096: Missing semicolon.
46. line 7, char 3174: Expected an assignment or function call and instead saw an expression.
47. line 7, char 3175: Missing semicolon.
48. line 7, char 3236: Expected an assignment or function call and instead saw an expression.
49. line 7, char 3237: Missing semicolon.
50. line 7, char 3283: Missing semicolon.
51. line 7, char 3283: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/backdrop/backdrop.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/backdrop/backdrop.min.js">
		<failure message="10 JSHint Failures">
1. line 7, char 471: Missing semicolon.
2. line 7, char 542: Expected an assignment or function call and instead saw an expression.
3. line 7, char 602: Expected an assignment or function call and instead saw an expression.
4. line 7, char 603: Missing semicolon.
5. line 7, char 645: Expected an assignment or function call and instead saw an expression.
6. line 7, char 646: Missing semicolon.
7. line 7, char 647: Expected an assignment or function call and instead saw an expression.
8. line 7, char 648: Missing semicolon.
9. line 7, char 771: Missing semicolon.
10. line 7, char 852: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/bottomSheet/bottomSheet.js">
		<failure message="1 JSHINT Failure">
1. line 220, char 42: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/bottomSheet/bottomSheet.min.js">
		<failure message="29 JSHint Failures">
1. line 7, char 132: Missing semicolon.
2. line 7, char 133: Expected an assignment or function call and instead saw an expression.
3. line 7, char 134: Missing semicolon.
4. line 7, char 136: Missing semicolon.
5. line 7, char 454: Missing semicolon.
6. line 7, char 503: Expected an assignment or function call and instead saw an expression.
7. line 7, char 970: Expected an assignment or function call and instead saw an expression.
8. line 7, char 971: Missing semicolon.
9. line 7, char 1026: Expected an assignment or function call and instead saw an expression.
10. line 7, char 1027: Missing semicolon.
11. line 7, char 1029: Missing semicolon.
12. line 7, char 1216: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1217: Missing semicolon.
14. line 7, char 1219: Missing semicolon.
15. line 7, char 1288: Missing semicolon.
16. line 7, char 1407: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1408: Missing semicolon.
18. line 7, char 1593: A leading decimal point can be confused with a dot: &apos;.75&apos;.
19. line 7, char 1661: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1662: Missing semicolon.
21. line 7, char 1728: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1729: Missing semicolon.
23. line 7, char 1941: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1942: Missing semicolon.
25. line 7, char 1944: Missing semicolon.
26. line 7, char 2072: Missing semicolon.
27. line 7, char 2081: A leading decimal point can be confused with a dot: &apos;.5&apos;.
28. line 7, char 2313: Missing semicolon.
29. line 7, char 2836: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/button/button.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/button/button.min.js">
		<failure message="19 JSHint Failures">
1. line 7, char 74: Missing semicolon.
2. line 7, char 76: Missing semicolon.
3. line 7, char 246: Missing semicolon.
4. line 7, char 438: Missing semicolon.
5. line 7, char 607: Missing semicolon.
6. line 7, char 648: Confusing use of &apos;!&apos;.
7. line 7, char 700: Expected an assignment or function call and instead saw an expression.
8. line 7, char 701: Missing semicolon.
9. line 7, char 833: Missing semicolon.
10. line 7, char 838: Expected an assignment or function call and instead saw an expression.
11. line 7, char 839: Missing semicolon.
12. line 7, char 880: Confusing use of &apos;!&apos;.
13. line 7, char 907: Expected an assignment or function call and instead saw an expression.
14. line 7, char 908: Missing semicolon.
15. line 7, char 960: Missing semicolon.
16. line 7, char 962: Expected an assignment or function call and instead saw an expression.
17. line 7, char 963: Missing semicolon.
18. line 7, char 1028: Missing semicolon.
19. line 7, char 1441: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/card/card.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/card/card.min.js">
		<failure message="4 JSHint Failures">
1. line 7, char 91: Expected an assignment or function call and instead saw an expression.
2. line 7, char 92: Missing semicolon.
3. line 7, char 94: Missing semicolon.
4. line 7, char 377: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/checkbox/checkbox.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/checkbox/checkbox.min.js">
		<failure message="30 JSHint Failures">
1. line 7, char 296: Expected an assignment or function call and instead saw an expression.
2. line 7, char 297: Missing semicolon.
3. line 7, char 333: Missing semicolon.
4. line 7, char 423: Expected an assignment or function call and instead saw an expression.
5. line 7, char 424: Missing semicolon.
6. line 7, char 425: Expected an assignment or function call and instead saw an expression.
7. line 7, char 426: Missing semicolon.
8. line 7, char 585: Expected an assignment or function call and instead saw an expression.
9. line 7, char 586: Missing semicolon.
10. line 7, char 733: Expected an assignment or function call and instead saw an expression.
11. line 7, char 734: Missing semicolon.
12. line 7, char 735: Expected an assignment or function call and instead saw an expression.
13. line 7, char 736: Missing semicolon.
14. line 7, char 796: Expected an assignment or function call and instead saw an expression.
15. line 7, char 797: Missing semicolon.
16. line 7, char 818: Confusing use of &apos;!&apos;.
17. line 7, char 889: Expected an assignment or function call and instead saw an expression.
18. line 7, char 890: Missing semicolon.
19. line 7, char 1295: Missing semicolon.
20. line 7, char 1300: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1301: Missing semicolon.
22. line 7, char 1342: Confusing use of &apos;!&apos;.
23. line 7, char 1369: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1370: Missing semicolon.
25. line 7, char 1421: Missing semicolon.
26. line 7, char 1434: Expected an assignment or function call and instead saw an expression.
27. line 7, char 1435: Missing semicolon.
28. line 7, char 1436: Missing semicolon.
29. line 7, char 1692: Missing semicolon.
30. line 7, char 2065: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/chips/chips.js">
		<failure message="51 JSHint Failures">
1. line 239, char 31: Bad escaping of EOL. Use option multistr if needed.
2. line 240, char 72: Bad escaping of EOL. Use option multistr if needed.
3. line 241, char 36: Bad escaping of EOL. Use option multistr if needed.
4. line 574, char 34: Use &apos;===&apos; to compare with &apos;&apos;.
5. line 608, char 15: Use &apos;===&apos; to compare with &apos;0&apos;.
6. line 638, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
7. line 829, char 24: Expected an assignment or function call and instead saw an expression.
8. line 867, char 78: Missing semicolon.
9. line 868, char 76: Missing semicolon.
10. line 869, char 74: Missing semicolon.
11. line 869, char 77: Missing semicolon.
12. line 1019, char 30: Bad escaping of EOL. Use option multistr if needed.
13. line 1020, char 23: Bad escaping of EOL. Use option multistr if needed.
14. line 1021, char 58: Bad escaping of EOL. Use option multistr if needed.
15. line 1022, char 135: Bad escaping of EOL. Use option multistr if needed.
16. line 1023, char 30: Bad escaping of EOL. Use option multistr if needed.
17. line 1024, char 59: Bad escaping of EOL. Use option multistr if needed.
18. line 1025, char 33: Bad escaping of EOL. Use option multistr if needed.
19. line 1026, char 149: Bad escaping of EOL. Use option multistr if needed.
20. line 1027, char 42: Bad escaping of EOL. Use option multistr if needed.
21. line 1028, char 30: Bad escaping of EOL. Use option multistr if needed.
22. line 1029, char 35: Bad escaping of EOL. Use option multistr if needed.
23. line 1030, char 84: Bad escaping of EOL. Use option multistr if needed.
24. line 1031, char 85: Bad escaping of EOL. Use option multistr if needed.
25. line 1032, char 78: Bad escaping of EOL. Use option multistr if needed.
26. line 1033, char 48: Bad escaping of EOL. Use option multistr if needed.
27. line 1034, char 51: Bad escaping of EOL. Use option multistr if needed.
28. line 1035, char 77: Bad escaping of EOL. Use option multistr if needed.
29. line 1036, char 21: Bad escaping of EOL. Use option multistr if needed.
30. line 1037, char 49: Bad escaping of EOL. Use option multistr if needed.
31. line 1038, char 76: Bad escaping of EOL. Use option multistr if needed.
32. line 1039, char 76: Bad escaping of EOL. Use option multistr if needed.
33. line 1040, char 17: Bad escaping of EOL. Use option multistr if needed.
34. line 1043, char 32: Bad escaping of EOL. Use option multistr if needed.
35. line 1044, char 17: Bad escaping of EOL. Use option multistr if needed.
36. line 1045, char 31: Bad escaping of EOL. Use option multistr if needed.
37. line 1046, char 27: Bad escaping of EOL. Use option multistr if needed.
38. line 1047, char 62: Bad escaping of EOL. Use option multistr if needed.
39. line 1048, char 61: Bad escaping of EOL. Use option multistr if needed.
40. line 1049, char 49: Bad escaping of EOL. Use option multistr if needed.
41. line 1050, char 53: Bad escaping of EOL. Use option multistr if needed.
42. line 1051, char 51: Bad escaping of EOL. Use option multistr if needed.
43. line 1052, char 30: Bad escaping of EOL. Use option multistr if needed.
44. line 1055, char 34: Bad escaping of EOL. Use option multistr if needed.
45. line 1058, char 33: Bad escaping of EOL. Use option multistr if needed.
46. line 1059, char 16: Bad escaping of EOL. Use option multistr if needed.
47. line 1060, char 36: Bad escaping of EOL. Use option multistr if needed.
48. line 1061, char 43: Bad escaping of EOL. Use option multistr if needed.
49. line 1062, char 84: Bad escaping of EOL. Use option multistr if needed.
50. line 1063, char 26: Bad escaping of EOL. Use option multistr if needed.
51. line 1063, char 26: Too many errors. (73% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/chips/chips.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 181: Expected an assignment or function call and instead saw an expression.
2. line 7, char 182: Missing semicolon.
3. line 7, char 444: Expected an assignment or function call and instead saw an expression.
4. line 7, char 445: Missing semicolon.
5. line 7, char 447: Expected an assignment or function call and instead saw an expression.
6. line 7, char 448: Missing semicolon.
7. line 7, char 449: Missing semicolon.
8. line 7, char 581: Missing semicolon.
9. line 7, char 710: Missing semicolon.
10. line 7, char 712: Missing semicolon.
11. line 7, char 804: Expected an assignment or function call and instead saw an expression.
12. line 7, char 805: Missing semicolon.
13. line 7, char 806: Expected an assignment or function call and instead saw an expression.
14. line 7, char 807: Missing semicolon.
15. line 7, char 863: Missing semicolon.
16. line 7, char 1038: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1108: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1109: Missing semicolon.
19. line 7, char 1159: Missing semicolon.
20. line 7, char 1682: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1683: Missing semicolon.
22. line 7, char 1807: Missing semicolon.
23. line 7, char 1977: Missing semicolon.
24. line 7, char 2294: Expected an assignment or function call and instead saw an expression.
25. line 7, char 2501: Missing semicolon.
26. line 7, char 2997: Expected an assignment or function call and instead saw an expression.
27. line 7, char 2998: Missing semicolon.
28. line 7, char 2999: Expected an assignment or function call and instead saw an expression.
29. line 7, char 3000: Missing semicolon.
30. line 7, char 3077: Expected an assignment or function call and instead saw an expression.
31. line 7, char 3078: Missing semicolon.
32. line 7, char 3171: Missing semicolon.
33. line 7, char 3173: Missing semicolon.
34. line 7, char 3175: Missing semicolon.
35. line 7, char 3382: Missing semicolon.
36. line 7, char 3465: Missing semicolon.
37. line 7, char 3919: Missing semicolon.
38. line 7, char 3989: Expected an assignment or function call and instead saw an expression.
39. line 7, char 3991: Missing semicolon.
40. line 7, char 4119: Expected an assignment or function call and instead saw an expression.
41. line 7, char 4120: Missing semicolon.
42. line 7, char 4121: Missing semicolon.
43. line 7, char 4184: Missing semicolon.
44. line 7, char 4551: Missing semicolon.
45. line 7, char 5258: Expected an assignment or function call and instead saw an expression.
46. line 7, char 5259: Missing semicolon.
47. line 7, char 5402: Missing semicolon.
48. line 7, char 5513: Missing semicolon.
49. line 7, char 5604: Missing semicolon.
50. line 7, char 5780: Expected an assignment or function call and instead saw an expression.
51. line 7, char 5780: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/colors/colors.js">
		<failure message="2 JSHint Failures">
1. line 17, char 7: It&apos;s not necessary to initialize &apos;colorPalettes&apos; to &apos;undefined&apos;.
2. line 159, char 20: [&apos;color&apos;] is better written in dot notation.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/colors/colors.min.js">
		<failure message="29 JSHint Failures">
1. line 7, char 153: Missing semicolon.
2. line 7, char 181: Missing semicolon.
3. line 7, char 219: Missing semicolon.
4. line 7, char 382: Missing semicolon.
5. line 7, char 546: Expected an assignment or function call and instead saw an expression.
6. line 7, char 547: Missing semicolon.
7. line 7, char 551: Missing semicolon.
8. line 7, char 617: Missing semicolon.
9. line 7, char 782: Missing semicolon.
10. line 7, char 1084: Missing semicolon.
11. line 7, char 1093: Missing semicolon.
12. line 7, char 1571: Missing semicolon.
13. line 7, char 1627: Missing semicolon.
14. line 7, char 1711: Missing semicolon.
15. line 7, char 2004: Missing semicolon.
16. line 7, char 2186: Expected an assignment or function call and instead saw an expression.
17. line 7, char 2187: Missing semicolon.
18. line 7, char 2191: Missing semicolon.
19. line 7, char 2270: Missing semicolon.
20. line 7, char 2304: Missing semicolon.
21. line 7, char 2305: Expected an assignment or function call and instead saw an expression.
22. line 7, char 2392: Expected an assignment or function call and instead saw an expression.
23. line 7, char 2393: Missing semicolon.
24. line 7, char 2421: Missing semicolon.
25. line 7, char 2423: Missing semicolon.
26. line 7, char 2425: Missing semicolon.
27. line 7, char 2708: Expected an assignment or function call and instead saw an expression.
28. line 7, char 2709: Missing semicolon.
29. line 7, char 2786: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/content/content.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/content/content.min.js">
		<failure message="9 JSHint Failures">
1. line 7, char 76: Expected an assignment or function call and instead saw an expression.
2. line 7, char 77: Missing semicolon.
3. line 7, char 227: Expected an assignment or function call and instead saw an expression.
4. line 7, char 228: Missing semicolon.
5. line 7, char 230: Missing semicolon.
6. line 7, char 472: Expected an assignment or function call and instead saw an expression.
7. line 7, char 473: Missing semicolon.
8. line 7, char 475: Missing semicolon.
9. line 7, char 779: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/core/core.js">
		<failure message="51 JSHint Failures">
1. line 192, char 4: Missing semicolon.
2. line 266, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
3. line 275, char 4: Missing semicolon.
4. line 799, char 49: Missing semicolon.
5. line 855, char 32: Missing semicolon.
6. line 934, char 29: Use &apos;===&apos; to compare with &apos;0&apos;.
7. line 1043, char 12: Expected an assignment or function call and instead saw an expression.
8. line 1063, char 60: Did you mean to return a conditional instead of an assignment?
9. line 1132, char 24: Expected an assignment or function call and instead saw an expression.
10. line 1360, char 34: Expected a conditional expression and instead saw an assignment.
11. line 1371, char 78: Missing semicolon.
12. line 1467, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
13. line 1658, char 36: Expected a conditional expression and instead saw an assignment.
14. line 1754, char 34: Did you mean to return a conditional instead of an assignment?
15. line 2191, char 4: Expected an assignment or function call and instead saw an expression.
16. line 2216, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
17. line 2225, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
18. line 2370, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
19. line 2371, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
20. line 2516, char 28: Did you mean to return a conditional instead of an assignment?
21. line 2815, char 23: Did you mean to return a conditional instead of an assignment?
22. line 2967, char 22: Did you mean to return a conditional instead of an assignment?
23. line 3012, char 60: Expected an assignment or function call and instead saw an expression.
24. line 3018, char 74: Expected an assignment or function call and instead saw an expression.
25. line 3027, char 80: Expected an assignment or function call and instead saw an expression.
26. line 3161, char 14: Missing semicolon.
27. line 3168, char 12: Missing semicolon.
28. line 3212, char 37: Use &apos;===&apos; to compare with &apos;true&apos;.
29. line 3502, char 51: Missing semicolon.
30. line 3715, char 33: Use &apos;===&apos; to compare with &apos;0&apos;.
31. line 3715, char 64: Use &apos;===&apos; to compare with &apos;0&apos;.
32. line 3762, char 18: Did you mean to return a conditional instead of an assignment?
33. line 3903, char 10: Missing semicolon.
34. line 3905, char 6: Unnecessary semicolon.
35. line 3907, char 48: Unnecessary semicolon.
36. line 3940, char 6: Unnecessary semicolon.
37. line 3942, char 50: Unnecessary semicolon.
38. line 3976, char 6: Unnecessary semicolon.
39. line 3978, char 46: Unnecessary semicolon.
40. line 4034, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
41. line 4035, char 53: Expected an assignment or function call and instead saw an expression.
42. line 4322, char 40: Expected a conditional expression and instead saw an assignment.
43. line 4386, char 9: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
44. line 4475, char 6: Unnecessary semicolon.
45. line 4477, char 45: Unnecessary semicolon.
46. line 4999, char 27: Did you mean to return a conditional instead of an assignment?
47. line 5284, char 14: Missing semicolon.
48. line 5294, char 15: Missing semicolon.
49. line 5404, char 54: Expected a conditional expression and instead saw an assignment.
50. line 5412, char 44: Expected a conditional expression and instead saw an assignment.
51. line 5412, char 44: Too many errors. (86% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/core/core.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 221: Missing semicolon.
2. line 7, char 418: Expected an assignment or function call and instead saw an expression.
3. line 7, char 419: Missing semicolon.
4. line 7, char 594: Expected an assignment or function call and instead saw an expression.
5. line 7, char 595: Missing semicolon.
6. line 7, char 597: Expected an assignment or function call and instead saw an expression.
7. line 7, char 598: Missing semicolon.
8. line 7, char 599: Missing semicolon.
9. line 7, char 602: Missing semicolon.
10. line 7, char 669: Missing semicolon.
11. line 7, char 803: Missing semicolon.
12. line 7, char 805: Missing semicolon.
13. line 7, char 1039: Missing semicolon.
14. line 7, char 1328: Missing semicolon.
15. line 7, char 1391: Missing semicolon.
16. line 7, char 1477: Missing semicolon.
17. line 7, char 1533: Missing semicolon.
18. line 7, char 1671: Missing semicolon.
19. line 7, char 1722: Missing semicolon.
20. line 7, char 1800: Missing semicolon.
21. line 7, char 1802: Missing semicolon.
22. line 7, char 3064: Missing semicolon.
23. line 7, char 3121: Missing semicolon.
24. line 7, char 3150: Missing semicolon.
25. line 7, char 3198: Missing semicolon.
26. line 7, char 3234: Missing semicolon.
27. line 7, char 3270: Missing semicolon.
28. line 7, char 3306: Missing semicolon.
29. line 7, char 3366: Missing semicolon.
30. line 7, char 3368: Missing semicolon.
31. line 7, char 3453: Missing semicolon.
32. line 7, char 3489: Expected an assignment or function call and instead saw an expression.
33. line 7, char 3490: Missing semicolon.
34. line 7, char 3524: Missing semicolon.
35. line 7, char 3556: Missing semicolon.
36. line 7, char 3595: Missing semicolon.
37. line 7, char 3643: Missing semicolon.
38. line 7, char 3850: Expected an assignment or function call and instead saw an expression.
39. line 7, char 3851: Missing semicolon.
40. line 7, char 3878: Missing semicolon.
41. line 7, char 3942: Expected an assignment or function call and instead saw an expression.
42. line 7, char 4144: Missing semicolon.
43. line 7, char 4237: Expected an assignment or function call and instead saw an expression.
44. line 7, char 4291: Missing semicolon.
45. line 7, char 17860: A leading decimal point can be confused with a dot: &apos;.65&apos;.
46. line 7, char 4356: Missing semicolon.
47. line 7, char 4456: Missing semicolon.
48. line 7, char 4517: Missing semicolon.
49. line 7, char 4519: Missing semicolon.
50. line 7, char 4545: Missing semicolon.
51. line 7, char 4545: Too many errors. (70% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/core/default-theme.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/datepicker/datepicker.js">
		<failure message="10 JSHint Failures">
1. line 545, char 66: Expected an assignment or function call and instead saw an expression.
2. line 867, char 12: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
3. line 1134, char 66: Expected an assignment or function call and instead saw an expression.
4. line 1591, char 29: Use &apos;===&apos; to compare with &apos;0&apos;.
5. line 1930, char 10: Expected an assignment or function call and instead saw an expression.
6. line 2115, char 51: Use &apos;===&apos; to compare with &apos;null&apos;.
7. line 2150, char 36: Use &apos;===&apos; to compare with &apos;&apos;.
8. line 2196, char 68: Use &apos;===&apos; to compare with &apos;0&apos;.
9. line 2200, char 71: Use &apos;===&apos; to compare with &apos;0&apos;.
10. line 2566, char 19: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/datepicker/datepicker.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 502: Missing semicolon.
2. line 7, char 737: Missing semicolon.
3. line 7, char 739: Missing semicolon.
4. line 7, char 773: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 7, char 789: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 7, char 803: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
7. line 7, char 819: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
8. line 7, char 834: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
9. line 7, char 858: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
10. line 7, char 871: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
11. line 7, char 882: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
12. line 7, char 919: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
13. line 7, char 941: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
14. line 7, char 966: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
15. line 7, char 1019: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
16. line 7, char 1061: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
17. line 7, char 1096: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
18. line 7, char 1108: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
19. line 7, char 1130: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
20. line 7, char 1153: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
21. line 7, char 1175: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
22. line 7, char 1188: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
23. line 7, char 1274: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
24. line 7, char 1279: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
25. line 7, char 1299: Expected an assignment or function call and instead saw an expression.
26. line 7, char 1300: Missing semicolon.
27. line 7, char 1688: Missing semicolon.
28. line 7, char 1874: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1875: Missing semicolon.
30. line 7, char 1875: Expected an assignment or function call and instead saw an expression.
31. line 7, char 1876: Missing semicolon.
32. line 7, char 2087: Missing semicolon.
33. line 7, char 2236: Expected an assignment or function call and instead saw an expression.
34. line 7, char 2237: Missing semicolon.
35. line 7, char 2239: Missing semicolon.
36. line 7, char 2399: Expected an assignment or function call and instead saw an expression.
37. line 7, char 2544: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2545: Missing semicolon.
39. line 7, char 2614: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2615: Missing semicolon.
41. line 7, char 3075: Missing semicolon.
42. line 7, char 3429: Expected an assignment or function call and instead saw an expression.
43. line 7, char 3430: Missing semicolon.
44. line 7, char 3432: Missing semicolon.
45. line 7, char 3617: Expected an assignment or function call and instead saw an expression.
46. line 7, char 3621: Missing semicolon.
47. line 7, char 3845: Expected an assignment or function call and instead saw an expression.
48. line 7, char 3846: Missing semicolon.
49. line 7, char 3847: Expected an assignment or function call and instead saw an expression.
50. line 7, char 3848: Missing semicolon.
51. line 7, char 3848: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/dialog/dialog.js">
		<failure message="3 JSHint Failures">
1. line 608, char 40: Missing semicolon.
2. line 610, char 10: Missing semicolon.
3. line 993, char 8: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/dialog/dialog.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 189: Missing semicolon.
2. line 7, char 351: Missing semicolon.
3. line 7, char 352: Expected an assignment or function call and instead saw an expression.
4. line 7, char 353: Missing semicolon.
5. line 7, char 354: Expected an assignment or function call and instead saw an expression.
6. line 7, char 355: Missing semicolon.
7. line 7, char 357: Missing semicolon.
8. line 7, char 1803: Missing semicolon.
9. line 7, char 1837: Missing semicolon.
10. line 7, char 1913: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1914: Missing semicolon.
12. line 7, char 1914: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1915: Missing semicolon.
14. line 7, char 1982: Missing semicolon.
15. line 7, char 2391: Missing semicolon.
16. line 7, char 2544: Expected an assignment or function call and instead saw an expression.
17. line 7, char 2545: Missing semicolon.
18. line 7, char 2712: Missing semicolon.
19. line 7, char 2738: Missing semicolon.
20. line 7, char 2798: Missing semicolon.
21. line 7, char 3205: Expected an assignment or function call and instead saw an expression.
22. line 7, char 3206: Missing semicolon.
23. line 7, char 3296: Expected an assignment or function call and instead saw an expression.
24. line 7, char 3297: Missing semicolon.
25. line 7, char 3299: Missing semicolon.
26. line 7, char 3344: Missing semicolon.
27. line 7, char 3678: Expected an assignment or function call and instead saw an expression.
28. line 7, char 3679: Missing semicolon.
29. line 7, char 3815: Expected an assignment or function call and instead saw an expression.
30. line 7, char 3816: Missing semicolon.
31. line 7, char 4014: Missing semicolon.
32. line 7, char 4320: Missing semicolon.
33. line 7, char 4413: Missing semicolon.
34. line 7, char 4632: Expected an assignment or function call and instead saw an expression.
35. line 7, char 4633: Missing semicolon.
36. line 7, char 4705: Missing semicolon.
37. line 7, char 4784: Missing semicolon.
38. line 7, char 4909: Expected an assignment or function call and instead saw an expression.
39. line 7, char 4910: Missing semicolon.
40. line 7, char 5002: Expected an assignment or function call and instead saw an expression.
41. line 7, char 5003: Missing semicolon.
42. line 7, char 5004: Expected an assignment or function call and instead saw an expression.
43. line 7, char 5005: Missing semicolon.
44. line 7, char 5061: Missing semicolon.
45. line 7, char 5121: Missing semicolon.
46. line 7, char 5207: Expected an assignment or function call and instead saw an expression.
47. line 7, char 5208: Missing semicolon.
48. line 7, char 5304: Expected an assignment or function call and instead saw an expression.
49. line 7, char 5305: Missing semicolon.
50. line 7, char 5306: Expected an assignment or function call and instead saw an expression.
51. line 7, char 5306: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/divider/divider.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/divider/divider.min.js">
		<failure message="2 JSHint Failures">
1. line 7, char 59: Missing semicolon.
2. line 7, char 363: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/fabActions/fabActions.js">
		<failure message="1 JSHINT Failure">
1. line 54, char 6: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/fabActions/fabActions.min.js">
		<failure message="6 JSHint Failures">
1. line 7, char 348: Expected an assignment or function call and instead saw an expression.
2. line 7, char 349: Missing semicolon.
3. line 7, char 351: Missing semicolon.
4. line 7, char 467: Expected an assignment or function call and instead saw an expression.
5. line 7, char 468: Missing semicolon.
6. line 7, char 553: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/fabSpeedDial/fabSpeedDial.js">
		<failure message="2 JSHint Failures">
1. line 515, char 6: Missing semicolon.
2. line 559, char 6: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/fabSpeedDial/fabSpeedDial.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 237: Expected an assignment or function call and instead saw an expression.
2. line 7, char 238: Missing semicolon.
3. line 7, char 328: Missing semicolon.
4. line 7, char 399: Missing semicolon.
5. line 7, char 404: Expected an assignment or function call and instead saw an expression.
6. line 7, char 405: Missing semicolon.
7. line 7, char 406: Expected an assignment or function call and instead saw an expression.
8. line 7, char 407: Missing semicolon.
9. line 7, char 492: Missing semicolon.
10. line 7, char 544: Expected an assignment or function call and instead saw an expression.
11. line 7, char 545: Missing semicolon.
12. line 7, char 582: Missing semicolon.
13. line 7, char 683: Expected an assignment or function call and instead saw an expression.
14. line 7, char 684: Missing semicolon.
15. line 7, char 760: Expected an assignment or function call and instead saw an expression.
16. line 7, char 900: Expected an assignment or function call and instead saw an expression.
17. line 7, char 901: Missing semicolon.
18. line 7, char 903: Missing semicolon.
19. line 7, char 1029: Missing semicolon.
20. line 7, char 1052: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1053: Missing semicolon.
22. line 7, char 1155: Missing semicolon.
23. line 7, char 1156: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1157: Missing semicolon.
25. line 7, char 1238: Expected an assignment or function call and instead saw an expression.
26. line 7, char 1239: Missing semicolon.
27. line 7, char 1369: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1370: Missing semicolon.
29. line 7, char 1630: Missing semicolon.
30. line 7, char 1653: Missing semicolon.
31. line 7, char 1674: Missing semicolon.
32. line 7, char 1860: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2017: Expected an assignment or function call and instead saw an expression.
34. line 7, char 2018: Missing semicolon.
35. line 7, char 2191: Missing semicolon.
36. line 7, char 2195: Missing semicolon.
37. line 7, char 2239: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2240: Missing semicolon.
39. line 7, char 2284: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2285: Missing semicolon.
41. line 7, char 2329: Expected an assignment or function call and instead saw an expression.
42. line 7, char 2330: Missing semicolon.
43. line 7, char 2372: Expected an assignment or function call and instead saw an expression.
44. line 7, char 2373: Missing semicolon.
45. line 7, char 2427: Missing semicolon.
46. line 7, char 2481: Missing semicolon.
47. line 7, char 2541: Expected an assignment or function call and instead saw an expression.
48. line 7, char 2542: Missing semicolon.
49. line 7, char 2587: Missing semicolon.
50. line 7, char 2632: Missing semicolon.
51. line 7, char 2632: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/fabToolbar/fabToolbar.js">
		<failure message="3 JSHint Failures">
1. line 159, char 68: Expected an assignment or function call and instead saw an expression.
2. line 187, char 68: Expected an assignment or function call and instead saw an expression.
3. line 207, char 6: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/fabToolbar/fabToolbar.min.js">
		<failure message="14 JSHint Failures">
1. line 7, char 413: Expected an assignment or function call and instead saw an expression.
2. line 7, char 414: Missing semicolon.
3. line 7, char 689: Missing semicolon.
4. line 7, char 1454: Missing semicolon.
5. line 7, char 1792: Missing semicolon.
6. line 7, char 1794: Expected an assignment or function call and instead saw an expression.
7. line 7, char 1795: Missing semicolon.
8. line 7, char 1841: Expected an assignment or function call and instead saw an expression.
9. line 7, char 1842: Missing semicolon.
10. line 7, char 1883: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1884: Missing semicolon.
12. line 7, char 1886: Missing semicolon.
13. line 7, char 2145: Missing semicolon.
14. line 7, char 2230: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/fabTrigger/fabTrigger.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/fabTrigger/fabTrigger.min.js">
		<failure message="3 JSHint Failures">
1. line 7, char 187: Missing semicolon.
2. line 7, char 282: Missing semicolon.
3. line 7, char 367: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/gridList/gridList.js">
		<failure message="7 JSHint Failures">
1. line 155, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 204, char 18: Missing semicolon.
3. line 206, char 14: Missing semicolon.
4. line 318, char 15: &apos;vShare&apos; is already defined.
5. line 321, char 15: &apos;vUnit&apos; is already defined.
6. line 489, char 20: Did you mean to return a conditional instead of an assignment?
7. line 554, char 7: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/gridList/gridList.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 132: Expected an assignment or function call and instead saw an expression.
2. line 7, char 213: Missing semicolon.
3. line 7, char 259: Expected an assignment or function call and instead saw an expression.
4. line 7, char 322: Missing semicolon.
5. line 7, char 341: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 7, char 391: Expected an assignment or function call and instead saw an expression.
7. line 7, char 392: Missing semicolon.
8. line 7, char 778: Missing semicolon.
9. line 7, char 781: Missing semicolon.
10. line 7, char 848: Expected an assignment or function call and instead saw an expression.
11. line 7, char 849: Missing semicolon.
12. line 7, char 877: Missing semicolon.
13. line 7, char 1192: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1349: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1381: &apos;c&apos; is already defined.
16. line 7, char 1391: &apos;f&apos; is already defined.
17. line 7, char 1508: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1509: Missing semicolon.
19. line 7, char 1518: Missing semicolon.
20. line 7, char 1625: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1780: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1807: Missing semicolon.
23. line 7, char 1916: Missing semicolon.
24. line 7, char 1918: Missing semicolon.
25. line 7, char 2158: Missing semicolon.
26. line 7, char 2160: Missing semicolon.
27. line 7, char 2338: Missing semicolon.
28. line 7, char 2404: Missing semicolon.
29. line 7, char 2659: Missing semicolon.
30. line 7, char 2845: Missing semicolon.
31. line 7, char 2888: Missing semicolon.
32. line 7, char 2946: Expected an assignment or function call and instead saw an expression.
33. line 7, char 3267: Missing semicolon.
34. line 7, char 3348: Missing semicolon.
35. line 7, char 3485: Expected an assignment or function call and instead saw an expression.
36. line 7, char 3489: Missing semicolon.
37. line 7, char 3587: Missing semicolon.
38. line 7, char 3623: Missing semicolon.
39. line 7, char 3718: Missing semicolon.
40. line 7, char 3722: Missing semicolon.
41. line 7, char 3798: Missing semicolon.
42. line 7, char 3802: Missing semicolon.
43. line 7, char 3905: Missing semicolon.
44. line 7, char 3907: Missing semicolon.
45. line 7, char 3991: Missing semicolon.
46. line 7, char 3992: Expected an assignment or function call and instead saw an expression.
47. line 7, char 3993: Missing semicolon.
48. line 7, char 4240: Expected an assignment or function call and instead saw an expression.
49. line 7, char 4289: Missing semicolon.
50. line 7, char 4319: Expected an assignment or function call and instead saw an expression.
51. line 7, char 4319: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/icon/icon.js">
		<failure message="1 JSHINT Failure">
1. line 827, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/icon/icon.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 177: Missing semicolon.
2. line 7, char 301: Expected an assignment or function call and instead saw an expression.
3. line 7, char 302: Missing semicolon.
4. line 7, char 310: Expected an assignment or function call and instead saw an expression.
5. line 7, char 699: Expected an assignment or function call and instead saw an expression.
6. line 7, char 700: Missing semicolon.
7. line 7, char 701: Expected an assignment or function call and instead saw an expression.
8. line 7, char 702: Missing semicolon.
9. line 7, char 703: Expected an assignment or function call and instead saw an expression.
10. line 7, char 704: Missing semicolon.
11. line 7, char 795: Missing semicolon.
12. line 7, char 823: Missing semicolon.
13. line 7, char 921: Expected an assignment or function call and instead saw an expression.
14. line 7, char 939: Missing semicolon.
15. line 7, char 1156: Expected an assignment or function call and instead saw an expression.
16. line 7, char 1195: Missing semicolon.
17. line 7, char 1365: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1366: Missing semicolon.
19. line 7, char 1370: Missing semicolon.
20. line 7, char 1509: Missing semicolon.
21. line 7, char 1513: Missing semicolon.
22. line 7, char 1592: Missing semicolon.
23. line 7, char 1593: Missing semicolon.
24. line 7, char 1669: Missing semicolon.
25. line 7, char 1671: Missing semicolon.
26. line 7, char 1785: Missing semicolon.
27. line 7, char 1860: Missing semicolon.
28. line 7, char 1950: Missing semicolon.
29. line 7, char 2078: Missing semicolon.
30. line 7, char 2207: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2208: Missing semicolon.
32. line 7, char 2284: Missing semicolon.
33. line 7, char 2303: Missing semicolon.
34. line 7, char 2305: Missing semicolon.
35. line 7, char 2332: Missing semicolon.
36. line 7, char 2411: Missing semicolon.
37. line 7, char 2646: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2647: Missing semicolon.
39. line 7, char 2930: Missing semicolon.
40. line 7, char 2937: Missing semicolon.
41. line 7, char 2984: Missing semicolon.
42. line 7, char 3172: Missing semicolon.
43. line 7, char 5289: Expected an assignment or function call and instead saw an expression.
44. line 7, char 5502: Missing semicolon.
45. line 7, char 5576: Missing semicolon.
46. line 7, char 5736: Missing semicolon.
47. line 7, char 5808: Missing semicolon.
48. line 7, char 5888: Missing semicolon.
49. line 7, char 5957: Missing semicolon.
50. line 7, char 6023: Missing semicolon.
51. line 7, char 6023: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/input/input.js">
		<failure message="4 JSHint Failures">
1. line 856, char 44: Expected a conditional expression and instead saw an assignment.
2. line 918, char 4: Missing semicolon.
3. line 939, char 4: Missing semicolon.
4. line 986, char 22: Use &apos;===&apos; to compare with &apos;0&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/input/input.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 173: Expected an assignment or function call and instead saw an expression.
2. line 7, char 174: Missing semicolon.
3. line 7, char 292: Missing semicolon.
4. line 7, char 368: Missing semicolon.
5. line 7, char 435: Missing semicolon.
6. line 7, char 514: Missing semicolon.
7. line 7, char 610: Expected an assignment or function call and instead saw an expression.
8. line 7, char 611: Missing semicolon.
9. line 7, char 656: Missing semicolon.
10. line 7, char 732: Expected an assignment or function call and instead saw an expression.
11. line 7, char 733: Missing semicolon.
12. line 7, char 734: Expected an assignment or function call and instead saw an expression.
13. line 7, char 735: Missing semicolon.
14. line 7, char 858: Missing semicolon.
15. line 7, char 948: Missing semicolon.
16. line 7, char 1057: Missing semicolon.
17. line 7, char 1260: Missing semicolon.
18. line 7, char 1262: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1263: Missing semicolon.
20. line 7, char 1265: Missing semicolon.
21. line 7, char 1381: Missing semicolon.
22. line 7, char 1478: Missing semicolon.
23. line 7, char 1479: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1480: Missing semicolon.
25. line 7, char 1555: Missing semicolon.
26. line 7, char 1834: Expected an assignment or function call and instead saw an expression.
27. line 7, char 1835: Missing semicolon.
28. line 7, char 1917: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1918: Missing semicolon.
30. line 7, char 1994: Missing semicolon.
31. line 7, char 2031: Missing semicolon.
32. line 7, char 2200: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2201: Missing semicolon.
34. line 7, char 2318: Expected an assignment or function call and instead saw an expression.
35. line 7, char 2319: Missing semicolon.
36. line 7, char 2391: Expected an assignment or function call and instead saw an expression.
37. line 7, char 2392: Missing semicolon.
38. line 7, char 2447: Expected an assignment or function call and instead saw an expression.
39. line 7, char 2448: Missing semicolon.
40. line 7, char 2505: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2506: Missing semicolon.
42. line 7, char 2906: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2910: Missing semicolon.
44. line 7, char 2911: Expected an assignment or function call and instead saw an expression.
45. line 7, char 2912: Missing semicolon.
46. line 7, char 3113: Missing semicolon.
47. line 7, char 3346: Confusing use of &apos;!&apos;.
48. line 7, char 3354: Confusing use of &apos;!&apos;.
49. line 7, char 3364: Expected an assignment or function call and instead saw an expression.
50. line 7, char 3365: Missing semicolon.
51. line 7, char 3365: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/list/list.js">
		<failure message="6 JSHint Failures">
1. line 112, char 53: Expected a conditional expression and instead saw an assignment.
2. line 113, char 56: Expected a conditional expression and instead saw an assignment.
3. line 132, char 64: Expected a conditional expression and instead saw an assignment.
4. line 133, char 47: Expected a conditional expression and instead saw an assignment.
5. line 311, char 91: Expected an assignment or function call and instead saw an expression.
6. line 331, char 94: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/list/list.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 110: Missing semicolon.
2. line 7, char 112: Missing semicolon.
3. line 7, char 322: Expected a conditional expression and instead saw an assignment.
4. line 7, char 465: Missing semicolon.
5. line 7, char 612: Expected an assignment or function call and instead saw an expression.
6. line 7, char 938: Expected an assignment or function call and instead saw an expression.
7. line 7, char 939: Missing semicolon.
8. line 7, char 985: Expected an assignment or function call and instead saw an expression.
9. line 7, char 986: Missing semicolon.
10. line 7, char 1099: Missing semicolon.
11. line 7, char 1112: Expected an assignment or function call and instead saw an expression.
12. line 7, char 1113: Missing semicolon.
13. line 7, char 1328: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1329: Missing semicolon.
15. line 7, char 1449: Expected an assignment or function call and instead saw an expression.
16. line 7, char 1450: Missing semicolon.
17. line 7, char 1722: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1723: Missing semicolon.
19. line 7, char 1725: Missing semicolon.
20. line 7, char 1785: Missing semicolon.
21. line 7, char 1864: Missing semicolon.
22. line 7, char 1977: Missing semicolon.
23. line 7, char 2141: Missing semicolon.
24. line 7, char 2143: Missing semicolon.
25. line 7, char 2144: Expected an assignment or function call and instead saw an expression.
26. line 7, char 2145: Missing semicolon.
27. line 7, char 2278: Expected an assignment or function call and instead saw an expression.
28. line 7, char 2279: Missing semicolon.
29. line 7, char 2591: Missing semicolon.
30. line 7, char 2596: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2597: Missing semicolon.
32. line 7, char 2638: Confusing use of &apos;!&apos;.
33. line 7, char 2734: Expected an assignment or function call and instead saw an expression.
34. line 7, char 2735: Missing semicolon.
35. line 7, char 2736: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2737: Missing semicolon.
37. line 7, char 2738: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2739: Missing semicolon.
39. line 7, char 2740: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2949: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2950: Missing semicolon.
42. line 7, char 3264: Expected an assignment or function call and instead saw an expression.
43. line 7, char 3265: Missing semicolon.
44. line 7, char 3266: Expected an assignment or function call and instead saw an expression.
45. line 7, char 3267: Missing semicolon.
46. line 7, char 3335: Expected an assignment or function call and instead saw an expression.
47. line 7, char 3336: Missing semicolon.
48. line 7, char 3337: Expected an assignment or function call and instead saw an expression.
49. line 7, char 3338: Missing semicolon.
50. line 7, char 3537: Expected a conditional expression and instead saw an assignment.
51. line 7, char 3537: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/menu/menu.js">
		<failure message="16 JSHint Failures">
1. line 95, char 70: Expected an assignment or function call and instead saw an expression.
2. line 96, char 75: Expected an assignment or function call and instead saw an expression.
3. line 103, char 9: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
4. line 114, char 39: Expected an assignment or function call and instead saw an expression.
5. line 117, char 39: Expected an assignment or function call and instead saw an expression.
6. line 121, char 46: Expected an assignment or function call and instead saw an expression.
7. line 136, char 30: Expected an assignment or function call and instead saw an expression.
8. line 137, char 29: Expected an assignment or function call and instead saw an expression.
9. line 189, char 50: Expected an assignment or function call and instead saw an expression.
10. line 450, char 74: Expected an assignment or function call and instead saw an expression.
11. line 468, char 32: Use &apos;!==&apos; to compare with &apos;undefined&apos;.
12. line 685, char 10: Missing semicolon.
13. line 715, char 42: Expected an assignment or function call and instead saw an expression.
14. line 794, char 46: Expected a conditional expression and instead saw an assignment.
15. line 794, char 47: Missing semicolon.
16. line 805, char 50: Expected a conditional expression and instead saw an assignment.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/menu/menu.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 469: Missing semicolon.
2. line 7, char 470: Expected an assignment or function call and instead saw an expression.
3. line 7, char 471: Missing semicolon.
4. line 7, char 523: Missing semicolon.
5. line 7, char 524: Expected an assignment or function call and instead saw an expression.
6. line 7, char 723: Missing semicolon.
7. line 7, char 724: Expected an assignment or function call and instead saw an expression.
8. line 7, char 725: Missing semicolon.
9. line 7, char 725: Expected an assignment or function call and instead saw an expression.
10. line 7, char 979: Expected an assignment or function call and instead saw an expression.
11. line 7, char 980: Missing semicolon.
12. line 7, char 1074: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1075: Missing semicolon.
14. line 7, char 1225: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1226: Missing semicolon.
16. line 7, char 1385: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1386: Missing semicolon.
18. line 7, char 1728: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1729: Missing semicolon.
20. line 7, char 1792: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1793: Missing semicolon.
22. line 7, char 1883: Expected an assignment or function call and instead saw an expression.
23. line 7, char 1884: Missing semicolon.
24. line 7, char 1952: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1953: Missing semicolon.
26. line 7, char 2118: Missing semicolon.
27. line 7, char 2398: Expected an assignment or function call and instead saw an expression.
28. line 7, char 2399: Missing semicolon.
29. line 7, char 2401: Expected an assignment or function call and instead saw an expression.
30. line 7, char 2402: Missing semicolon.
31. line 7, char 2597: Missing semicolon.
32. line 7, char 2684: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2690: Missing semicolon.
34. line 7, char 2858: Expected an assignment or function call and instead saw an expression.
35. line 7, char 2859: Missing semicolon.
36. line 7, char 2922: Missing semicolon.
37. line 7, char 3005: Expected an assignment or function call and instead saw an expression.
38. line 7, char 3006: Missing semicolon.
39. line 7, char 3070: Missing semicolon.
40. line 7, char 3171: Missing semicolon.
41. line 7, char 3172: Expected an assignment or function call and instead saw an expression.
42. line 7, char 3359: Expected an assignment or function call and instead saw an expression.
43. line 7, char 3360: Missing semicolon.
44. line 7, char 3492: Missing semicolon.
45. line 7, char 3731: Missing semicolon.
46. line 7, char 3731: Expected an assignment or function call and instead saw an expression.
47. line 7, char 3732: Missing semicolon.
48. line 7, char 4154: Expected an assignment or function call and instead saw an expression.
49. line 7, char 4454: Expected an assignment or function call and instead saw an expression.
50. line 7, char 4455: Missing semicolon.
51. line 7, char 4455: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/menuBar/menuBar.js">
		<failure message="6 JSHint Failures">
1. line 108, char 41: Expected a conditional expression and instead saw an assignment.
2. line 130, char 41: Expected a conditional expression and instead saw an assignment.
3. line 176, char 40: Expected an assignment or function call and instead saw an expression.
4. line 197, char 47: Expected an assignment or function call and instead saw an expression.
5. line 198, char 67: Expected an assignment or function call and instead saw an expression.
6. line 226, char 59: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/menuBar/menuBar.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 172: Expected an assignment or function call and instead saw an expression.
2. line 7, char 257: Missing semicolon.
3. line 7, char 259: Missing semicolon.
4. line 7, char 652: Expected an assignment or function call and instead saw an expression.
5. line 7, char 858: Expected an assignment or function call and instead saw an expression.
6. line 7, char 859: Missing semicolon.
7. line 7, char 861: Missing semicolon.
8. line 7, char 915: Expected an assignment or function call and instead saw an expression.
9. line 7, char 916: Missing semicolon.
10. line 7, char 917: Missing semicolon.
11. line 7, char 919: Missing semicolon.
12. line 7, char 1038: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1039: Missing semicolon.
14. line 7, char 1041: Missing semicolon.
15. line 7, char 1119: Expected an assignment or function call and instead saw an expression.
16. line 7, char 1120: Missing semicolon.
17. line 7, char 1328: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1329: Missing semicolon.
19. line 7, char 1441: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1442: Missing semicolon.
21. line 7, char 1497: Missing semicolon.
22. line 7, char 1950: Expected an assignment or function call and instead saw an expression.
23. line 7, char 1951: Missing semicolon.
24. line 7, char 2004: Missing semicolon.
25. line 7, char 2005: Missing semicolon.
26. line 7, char 2039: Missing semicolon.
27. line 7, char 2349: Expected an assignment or function call and instead saw an expression.
28. line 7, char 3037: Expected an assignment or function call and instead saw an expression.
29. line 7, char 3038: Missing semicolon.
30. line 7, char 3439: Expected an assignment or function call and instead saw an expression.
31. line 7, char 3440: Missing semicolon.
32. line 7, char 3499: Missing semicolon.
33. line 7, char 3525: Expected an assignment or function call and instead saw an expression.
34. line 7, char 3526: Missing semicolon.
35. line 7, char 3691: Expected an assignment or function call and instead saw an expression.
36. line 7, char 3692: Missing semicolon.
37. line 7, char 4004: Expected an assignment or function call and instead saw an expression.
38. line 7, char 4005: Missing semicolon.
39. line 7, char 4144: Expected an assignment or function call and instead saw an expression.
40. line 7, char 4145: Missing semicolon.
41. line 7, char 4407: Expected an assignment or function call and instead saw an expression.
42. line 7, char 4408: Missing semicolon.
43. line 7, char 4587: Expected an assignment or function call and instead saw an expression.
44. line 7, char 4588: Missing semicolon.
45. line 7, char 4855: Expected an assignment or function call and instead saw an expression.
46. line 7, char 4856: Missing semicolon.
47. line 7, char 4865: Expected an assignment or function call and instead saw an expression.
48. line 7, char 4866: Missing semicolon.
49. line 7, char 5115: Expected an assignment or function call and instead saw an expression.
50. line 7, char 5155: Expected an assignment or function call and instead saw an expression.
51. line 7, char 5155: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/navBar/navBar.js">
		<failure message="9 JSHint Failures">
1. line 163, char 8: Expected an assignment or function call and instead saw an expression.
2. line 166, char 8: Expected an assignment or function call and instead saw an expression.
3. line 174, char 8: Expected an assignment or function call and instead saw an expression.
4. line 266, char 55: Missing semicolon.
5. line 289, char 28: Missing semicolon.
6. line 299, char 26: Missing semicolon.
7. line 462, char 8: Expected an assignment or function call and instead saw an expression.
8. line 464, char 8: Expected an assignment or function call and instead saw an expression.
9. line 466, char 8: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/navBar/navBar.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 573: Expected an assignment or function call and instead saw an expression.
2. line 7, char 574: Missing semicolon.
3. line 7, char 576: Missing semicolon.
4. line 7, char 735: Expected an assignment or function call and instead saw an expression.
5. line 7, char 848: Missing semicolon.
6. line 7, char 885: Expected an assignment or function call and instead saw an expression.
7. line 7, char 886: Missing semicolon.
8. line 7, char 888: Missing semicolon.
9. line 7, char 1979: Expected an assignment or function call and instead saw an expression.
10. line 7, char 2102: Expected an assignment or function call and instead saw an expression.
11. line 7, char 2103: Missing semicolon.
12. line 7, char 2105: Missing semicolon.
13. line 7, char 2107: Missing semicolon.
14. line 7, char 2109: Missing semicolon.
15. line 7, char 2233: Expected an assignment or function call and instead saw an expression.
16. line 7, char 2451: Missing semicolon.
17. line 7, char 3082: Missing semicolon.
18. line 7, char 3185: Missing semicolon.
19. line 7, char 3187: Missing semicolon.
20. line 7, char 3188: Expected an assignment or function call and instead saw an expression.
21. line 7, char 3189: Missing semicolon.
22. line 7, char 3340: Expected an assignment or function call and instead saw an expression.
23. line 7, char 3341: Missing semicolon.
24. line 7, char 3480: Missing semicolon.
25. line 7, char 3482: Missing semicolon.
26. line 7, char 3713: Expected an assignment or function call and instead saw an expression.
27. line 7, char 3714: Missing semicolon.
28. line 7, char 3921: Missing semicolon.
29. line 7, char 3923: Missing semicolon.
30. line 7, char 4034: Missing semicolon.
31. line 7, char 4036: Missing semicolon.
32. line 7, char 4148: Missing semicolon.
33. line 7, char 4150: Missing semicolon.
34. line 7, char 4258: Missing semicolon.
35. line 7, char 4260: Missing semicolon.
36. line 7, char 4391: Missing semicolon.
37. line 7, char 4488: Expected an assignment or function call and instead saw an expression.
38. line 7, char 4489: Missing semicolon.
39. line 7, char 4583: Expected an assignment or function call and instead saw an expression.
40. line 7, char 4584: Missing semicolon.
41. line 7, char 4672: Expected an assignment or function call and instead saw an expression.
42. line 7, char 4673: Missing semicolon.
43. line 7, char 4906: Expected an assignment or function call and instead saw an expression.
44. line 7, char 4989: Expected an assignment or function call and instead saw an expression.
45. line 7, char 5072: Missing semicolon.
46. line 7, char 5074: Missing semicolon.
47. line 7, char 5323: Missing semicolon.
48. line 7, char 5390: Missing semicolon.
49. line 7, char 5502: Missing semicolon.
50. line 7, char 5574: Missing semicolon.
51. line 7, char 5574: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/panel/panel.js">
		<failure message="48 JSHint Failures">
1. line 825, char 8: Expected an assignment or function call and instead saw an expression.
2. line 828, char 8: Expected an assignment or function call and instead saw an expression.
3. line 834, char 8: Expected an assignment or function call and instead saw an expression.
4. line 837, char 8: Expected an assignment or function call and instead saw an expression.
5. line 840, char 8: Expected an assignment or function call and instead saw an expression.
6. line 903, char 34: [&apos;onDomAdded&apos;] is better written in dot notation.
7. line 934, char 34: [&apos;onDomRemoved&apos;] is better written in dot notation.
8. line 1005, char 38: [&apos;onOpenComplete&apos;] is better written in dot notation.
9. line 1038, char 34: [&apos;onRemoving&apos;] is better written in dot notation.
10. line 1041, char 32: [&apos;origin&apos;] is better written in dot notation.
11. line 1127, char 63: [&apos;scope&apos;] is better written in dot notation.
12. line 1128, char 34: [&apos;attachTo&apos;] is better written in dot notation.
13. line 1130, char 27: [&apos;disableParentScroll&apos;] is better written in dot notation.
14. line 1139, char 27: [&apos;panelClass&apos;] is better written in dot notation.
15. line 1140, char 48: [&apos;panelClass&apos;] is better written in dot notation.
16. line 1147, char 40: [&apos;attachTo&apos;] is better written in dot notation.
17. line 1167, char 53: [&apos;zIndex&apos;] is better written in dot notation.
18. line 1168, char 46: [&apos;zIndex&apos;] is better written in dot notation.
19. line 1177, char 21: [&apos;fullscreen&apos;] is better written in dot notation.
20. line 1183, char 38: [&apos;position&apos;] is better written in dot notation.
21. line 1192, char 21: [&apos;$$postDigest&apos;] is better written in dot notation.
22. line 1206, char 36: [&apos;position&apos;] is better written in dot notation.
23. line 1233, char 19: [&apos;focusOnOpen&apos;] is better written in dot notation.
24. line 1238, char 21: [&apos;$$postDigest&apos;] is better written in dot notation.
25. line 1296, char 4: Expected an assignment or function call and instead saw an expression.
26. line 1306, char 19: [&apos;escapeToClose&apos;] is better written in dot notation.
27. line 1307, char 47: [&apos;attachTo&apos;] is better written in dot notation.
28. line 1337, char 19: [&apos;clickOutsideToClose&apos;] is better written in dot notation.
29. line 1385, char 22: [&apos;disableParentScroll&apos;] is better written in dot notation.
30. line 1408, char 19: [&apos;trapFocus&apos;] is better written in dot notation.
31. line 1445, char 37: [&apos;animation&apos;] is better written in dot notation.
32. line 1473, char 37: [&apos;animation&apos;] is better written in dot notation.
33. line 1554, char 8: Expected an assignment or function call and instead saw an expression.
34. line 1578, char 8: Expected an assignment or function call and instead saw an expression.
35. line 1749, char 17: Use &apos;===&apos; to compare with &apos;null&apos;.
36. line 1755, char 45: Expected a conditional expression and instead saw an assignment.
37. line 1775, char 17: Use &apos;===&apos; to compare with &apos;null&apos;.
38. line 1781, char 45: Expected a conditional expression and instead saw an assignment.
39. line 2042, char 8: Expected an assignment or function call and instead saw an expression.
40. line 2048, char 8: Expected an assignment or function call and instead saw an expression.
41. line 2197, char 50: [&apos;open&apos;] is better written in dot notation.
42. line 2198, char 51: [&apos;close&apos;] is better written in dot notation.
43. line 2262, char 50: [&apos;close&apos;] is better written in dot notation.
44. line 2263, char 51: [&apos;open&apos;] is better written in dot notation.
45. line 2285, char 54: Use &apos;===&apos; to compare with &apos;null&apos;.
46. line 2288, char 53: Use &apos;===&apos; to compare with &apos;null&apos;.
47. line 2291, char 52: Use &apos;===&apos; to compare with &apos;null&apos;.
48. line 2294, char 51: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/panel/panel.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 484: Expected an assignment or function call and instead saw an expression.
2. line 7, char 493: Missing semicolon.
3. line 7, char 1021: Expected an assignment or function call and instead saw an expression.
4. line 7, char 1025: Missing semicolon.
5. line 7, char 1229: Expected an assignment or function call and instead saw an expression.
6. line 7, char 1244: Missing semicolon.
7. line 7, char 1355: Expected an assignment or function call and instead saw an expression.
8. line 7, char 1357: Missing semicolon.
9. line 7, char 1460: Missing semicolon.
10. line 7, char 1713: Expected an assignment or function call and instead saw an expression.
11. line 7, char 2126: Expected an assignment or function call and instead saw an expression.
12. line 7, char 2262: Missing semicolon.
13. line 7, char 2367: Missing semicolon.
14. line 7, char 2369: Missing semicolon.
15. line 7, char 2465: Missing semicolon.
16. line 7, char 2565: Missing semicolon.
17. line 7, char 2738: Missing semicolon.
18. line 7, char 2901: Missing semicolon.
19. line 7, char 2903: Missing semicolon.
20. line 7, char 3067: Missing semicolon.
21. line 7, char 3069: Missing semicolon.
22. line 7, char 3329: Missing semicolon.
23. line 7, char 3428: Missing semicolon.
24. line 7, char 3430: Missing semicolon.
25. line 7, char 3884: Missing semicolon.
26. line 7, char 4091: Missing semicolon.
27. line 7, char 4093: Missing semicolon.
28. line 7, char 4159: Missing semicolon.
29. line 7, char 4308: Missing semicolon.
30. line 7, char 4467: Missing semicolon.
31. line 7, char 4645: Missing semicolon.
32. line 7, char 4679: Missing semicolon.
33. line 7, char 4681: Missing semicolon.
34. line 7, char 4830: Missing semicolon.
35. line 7, char 5066: Expected an assignment or function call and instead saw an expression.
36. line 7, char 5067: Missing semicolon.
37. line 7, char 5109: Missing semicolon.
38. line 7, char 5226: Missing semicolon.
39. line 7, char 5228: Missing semicolon.
40. line 7, char 5432: Expected an assignment or function call and instead saw an expression.
41. line 7, char 5433: Missing semicolon.
42. line 7, char 5643: Expected an assignment or function call and instead saw an expression.
43. line 7, char 5644: Missing semicolon.
44. line 7, char 5821: Missing semicolon.
45. line 7, char 6516: Missing semicolon.
46. line 7, char 6519: Expected an assignment or function call and instead saw an expression.
47. line 7, char 6520: Missing semicolon.
48. line 7, char 6523: Expected an assignment or function call and instead saw an expression.
49. line 7, char 6524: Missing semicolon.
50. line 7, char 6526: Missing semicolon.
51. line 7, char 6526: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/progressCircular/progressCircular.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/progressCircular/progressCircular.min.js">
		<failure message="38 JSHint Failures">
1. line 7, char 321: Expected an assignment or function call and instead saw an expression.
2. line 7, char 322: Missing semicolon.
3. line 7, char 323: Expected an assignment or function call and instead saw an expression.
4. line 7, char 324: Missing semicolon.
5. line 7, char 401: Expected an assignment or function call and instead saw an expression.
6. line 7, char 421: Expected an assignment or function call and instead saw an expression.
7. line 7, char 422: Missing semicolon.
8. line 7, char 524: Expected an assignment or function call and instead saw an expression.
9. line 7, char 525: Missing semicolon.
10. line 7, char 578: Expected an assignment or function call and instead saw an expression.
11. line 7, char 579: Missing semicolon.
12. line 7, char 839: Expected an assignment or function call and instead saw an expression.
13. line 7, char 840: Missing semicolon.
14. line 7, char 914: Confusing use of &apos;!&apos;.
15. line 7, char 922: Confusing use of &apos;!&apos;.
16. line 7, char 964: Missing semicolon.
17. line 7, char 1160: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1161: Missing semicolon.
19. line 7, char 1386: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1387: Missing semicolon.
21. line 7, char 1388: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1389: Missing semicolon.
23. line 7, char 1563: Missing semicolon.
24. line 7, char 1645: Missing semicolon.
25. line 7, char 1701: Missing semicolon.
26. line 7, char 1816: Missing semicolon.
27. line 7, char 1825: Missing semicolon.
28. line 7, char 1866: Missing semicolon.
29. line 7, char 2385: Missing semicolon.
30. line 7, char 2432: Missing semicolon.
31. line 7, char 2434: Missing semicolon.
32. line 7, char 2507: Missing semicolon.
33. line 7, char 2580: Missing semicolon.
34. line 7, char 2813: Did you mean to return a conditional instead of an assignment?
35. line 7, char 2836: Missing semicolon.
36. line 7, char 2862: Missing semicolon.
37. line 7, char 2864: Missing semicolon.
38. line 7, char 3461: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/progressLinear/progressLinear.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/progressLinear/progressLinear.min.js">
		<failure message="21 JSHint Failures">
1. line 7, char 152: Missing semicolon.
2. line 7, char 265: Expected an assignment or function call and instead saw an expression.
3. line 7, char 266: Missing semicolon.
4. line 7, char 317: Missing semicolon.
5. line 7, char 360: Confusing use of &apos;!&apos;.
6. line 7, char 368: Confusing use of &apos;!&apos;.
7. line 7, char 413: Expected an assignment or function call and instead saw an expression.
8. line 7, char 414: Missing semicolon.
9. line 7, char 576: Missing semicolon.
10. line 7, char 578: Expected an assignment or function call and instead saw an expression.
11. line 7, char 579: Missing semicolon.
12. line 7, char 697: Expected an assignment or function call and instead saw an expression.
13. line 7, char 698: Missing semicolon.
14. line 7, char 801: Missing semicolon.
15. line 7, char 810: Missing semicolon.
16. line 7, char 951: Missing semicolon.
17. line 7, char 1221: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1222: Missing semicolon.
19. line 7, char 1274: Missing semicolon.
20. line 7, char 1544: Missing semicolon.
21. line 7, char 1914: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/radioButton/radioButton.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/radioButton/radioButton.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 123: Expected an assignment or function call and instead saw an expression.
2. line 7, char 124: Missing semicolon.
3. line 7, char 316: Expected an assignment or function call and instead saw an expression.
4. line 7, char 415: Expected an assignment or function call and instead saw an expression.
5. line 7, char 531: Expected an assignment or function call and instead saw an expression.
6. line 7, char 532: Missing semicolon.
7. line 7, char 555: Expected an assignment or function call and instead saw an expression.
8. line 7, char 769: Missing semicolon.
9. line 7, char 774: Expected an assignment or function call and instead saw an expression.
10. line 7, char 775: Missing semicolon.
11. line 7, char 816: Confusing use of &apos;!&apos;.
12. line 7, char 852: Expected an assignment or function call and instead saw an expression.
13. line 7, char 853: Missing semicolon.
14. line 7, char 913: Missing semicolon.
15. line 7, char 914: Expected an assignment or function call and instead saw an expression.
16. line 7, char 915: Missing semicolon.
17. line 7, char 974: Expected an assignment or function call and instead saw an expression.
18. line 7, char 975: Missing semicolon.
19. line 7, char 1088: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1089: Missing semicolon.
21. line 7, char 1141: Missing semicolon.
22. line 7, char 1251: Expected an assignment or function call and instead saw an expression.
23. line 7, char 1252: Missing semicolon.
24. line 7, char 1322: Missing semicolon.
25. line 7, char 1324: Missing semicolon.
26. line 7, char 1402: Expected an assignment or function call and instead saw an expression.
27. line 7, char 1403: Missing semicolon.
28. line 7, char 1464: Missing semicolon.
29. line 7, char 1513: Missing semicolon.
30. line 7, char 1567: Missing semicolon.
31. line 7, char 1646: Missing semicolon.
32. line 7, char 1648: Missing semicolon.
33. line 7, char 1801: Missing semicolon.
34. line 7, char 1939: Missing semicolon.
35. line 7, char 2053: Missing semicolon.
36. line 7, char 2255: Missing semicolon.
37. line 7, char 2256: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2257: Missing semicolon.
39. line 7, char 2356: Missing semicolon.
40. line 7, char 2357: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2358: Missing semicolon.
42. line 7, char 2468: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2469: Missing semicolon.
44. line 7, char 2623: Expected an assignment or function call and instead saw an expression.
45. line 7, char 2624: Missing semicolon.
46. line 7, char 2687: Missing semicolon.
47. line 7, char 2790: Expected an assignment or function call and instead saw an expression.
48. line 7, char 2791: Missing semicolon.
49. line 7, char 2812: Expected an assignment or function call and instead saw an expression.
50. line 7, char 2813: Missing semicolon.
51. line 7, char 2813: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/select/select.js">
		<failure message="9 JSHint Failures">
1. line 361, char 58: Expected an assignment or function call and instead saw an expression.
2. line 492, char 134: Expected an assignment or function call and instead saw an expression.
3. line 672, char 60: Expected an assignment or function call and instead saw an expression.
4. line 753, char 40: Expected an assignment or function call and instead saw an expression.
5. line 758, char 41: Expected an assignment or function call and instead saw an expression.
6. line 1244, char 67: Expected an assignment or function call and instead saw an expression.
7. line 1252, char 70: Expected an assignment or function call and instead saw an expression.
8. line 1304, char 42: Expected an assignment or function call and instead saw an expression.
9. line 1328, char 40: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/select/select.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 1068: Expected an assignment or function call and instead saw an expression.
2. line 7, char 1069: Missing semicolon.
3. line 7, char 1091: Expected an assignment or function call and instead saw an expression.
4. line 7, char 1092: Missing semicolon.
5. line 7, char 1508: Expected an assignment or function call and instead saw an expression.
6. line 7, char 1509: Missing semicolon.
7. line 7, char 1618: Expected an assignment or function call and instead saw an expression.
8. line 7, char 1619: Missing semicolon.
9. line 7, char 1717: Missing semicolon.
10. line 7, char 1806: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1807: Missing semicolon.
12. line 7, char 2000: Missing semicolon.
13. line 7, char 2112: Missing semicolon.
14. line 7, char 2113: Expected an assignment or function call and instead saw an expression.
15. line 7, char 2114: Missing semicolon.
16. line 7, char 2199: Expected an assignment or function call and instead saw an expression.
17. line 7, char 2455: Expected an assignment or function call and instead saw an expression.
18. line 7, char 2456: Missing semicolon.
19. line 7, char 2774: Expected an assignment or function call and instead saw an expression.
20. line 7, char 2775: Missing semicolon.
21. line 7, char 2776: Expected an assignment or function call and instead saw an expression.
22. line 7, char 2777: Missing semicolon.
23. line 7, char 2990: Missing semicolon.
24. line 7, char 3257: Expected an assignment or function call and instead saw an expression.
25. line 7, char 3258: Missing semicolon.
26. line 7, char 3446: Expected an assignment or function call and instead saw an expression.
27. line 7, char 3447: Missing semicolon.
28. line 7, char 3449: Missing semicolon.
29. line 7, char 3558: Expected an assignment or function call and instead saw an expression.
30. line 7, char 3559: Missing semicolon.
31. line 7, char 3560: Expected an assignment or function call and instead saw an expression.
32. line 7, char 3613: Expected an assignment or function call and instead saw an expression.
33. line 7, char 3614: Missing semicolon.
34. line 7, char 3738: Missing semicolon.
35. line 7, char 3903: Missing semicolon.
36. line 7, char 3938: Missing semicolon.
37. line 7, char 4151: Expected an assignment or function call and instead saw an expression.
38. line 7, char 4152: Missing semicolon.
39. line 7, char 4243: Expected an assignment or function call and instead saw an expression.
40. line 7, char 4244: Missing semicolon.
41. line 7, char 4354: Expected an assignment or function call and instead saw an expression.
42. line 7, char 4355: Missing semicolon.
43. line 7, char 4402: Missing semicolon.
44. line 7, char 4440: Expected an assignment or function call and instead saw an expression.
45. line 7, char 4441: Missing semicolon.
46. line 7, char 4489: Missing semicolon.
47. line 7, char 4492: Expected an assignment or function call and instead saw an expression.
48. line 7, char 4541: Expected an assignment or function call and instead saw an expression.
49. line 7, char 4587: Missing semicolon.
50. line 7, char 4801: Expected an assignment or function call and instead saw an expression.
51. line 7, char 4801: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/showHide/showHide.js">
		<failure message="1 JSHINT Failure">
1. line 36, char 17: Confusing use of &apos;!&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/showHide/showHide.min.js">
		<failure message="9 JSHint Failures">
1. line 7, char 229: Confusing use of &apos;!&apos;.
2. line 7, char 286: Missing semicolon.
3. line 7, char 402: Missing semicolon.
4. line 7, char 404: Missing semicolon.
5. line 7, char 407: Missing semicolon.
6. line 7, char 409: Missing semicolon.
7. line 7, char 411: Missing semicolon.
8. line 7, char 413: Missing semicolon.
9. line 7, char 735: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/sidenav/sidenav.js">
		<failure message="7 JSHint Failures">
1. line 295, char 35: Expected an assignment or function call and instead saw an expression.
2. line 300, char 35: Expected an assignment or function call and instead saw an expression.
3. line 354, char 36: Expected an assignment or function call and instead saw an expression.
4. line 358, char 50: Expected an assignment or function call and instead saw an expression.
5. line 347, char 23: Did you mean to return a conditional instead of an assignment?
6. line 400, char 10: Missing semicolon.
7. line 445, char 62: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/sidenav/sidenav.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 75: Missing semicolon.
2. line 7, char 126: Missing semicolon.
3. line 7, char 249: Missing semicolon.
4. line 7, char 254: Missing semicolon.
5. line 7, char 335: Missing semicolon.
6. line 7, char 384: Missing semicolon.
7. line 7, char 547: Confusing use of &apos;!&apos;.
8. line 7, char 624: Missing semicolon.
9. line 7, char 625: Missing semicolon.
10. line 7, char 725: Missing semicolon.
11. line 7, char 958: Expected an assignment or function call and instead saw an expression.
12. line 7, char 959: Missing semicolon.
13. line 7, char 1117: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1313: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1314: Missing semicolon.
16. line 7, char 1316: Missing semicolon.
17. line 7, char 1516: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1517: Missing semicolon.
19. line 7, char 1675: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1679: Missing semicolon.
21. line 7, char 1687: Missing semicolon.
22. line 7, char 1825: Expected an assignment or function call and instead saw an expression.
23. line 7, char 1826: Missing semicolon.
24. line 7, char 1972: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1973: Missing semicolon.
26. line 7, char 1975: Missing semicolon.
27. line 7, char 1976: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1977: Missing semicolon.
29. line 7, char 1979: Missing semicolon.
30. line 7, char 2054: Missing semicolon.
31. line 7, char 2104: Missing semicolon.
32. line 7, char 2293: Missing semicolon.
33. line 7, char 2307: Missing semicolon.
34. line 7, char 2507: Expected an assignment or function call and instead saw an expression.
35. line 7, char 2508: Missing semicolon.
36. line 7, char 2551: Expected an assignment or function call and instead saw an expression.
37. line 7, char 2552: Missing semicolon.
38. line 7, char 2604: Expected an assignment or function call and instead saw an expression.
39. line 7, char 2605: Missing semicolon.
40. line 7, char 2765: Missing semicolon.
41. line 7, char 2767: Missing semicolon.
42. line 7, char 2853: Missing semicolon.
43. line 7, char 2903: Missing semicolon.
44. line 7, char 2947: Missing semicolon.
45. line 7, char 2992: Missing semicolon.
46. line 7, char 3045: Missing semicolon.
47. line 7, char 3098: Missing semicolon.
48. line 7, char 3138: Expected an assignment or function call and instead saw an expression.
49. line 7, char 3139: Missing semicolon.
50. line 7, char 3903: Expected an assignment or function call and instead saw an expression.
51. line 7, char 3903: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/slider/slider.js">
		<failure message="4 JSHint Failures">
1. line 224, char 80: Expected an assignment or function call and instead saw an expression.
2. line 225, char 82: Expected an assignment or function call and instead saw an expression.
3. line 226, char 83: Expected an assignment or function call and instead saw an expression.
4. line 227, char 99: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/slider/slider.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 323: Expected an assignment or function call and instead saw an expression.
2. line 7, char 324: Missing semicolon.
3. line 7, char 434: Missing semicolon.
4. line 7, char 469: Missing semicolon.
5. line 7, char 470: Expected an assignment or function call and instead saw an expression.
6. line 7, char 721: Missing semicolon.
7. line 7, char 723: Missing semicolon.
8. line 7, char 724: Missing semicolon.
9. line 7, char 727: Missing semicolon.
10. line 7, char 1007: Missing semicolon.
11. line 7, char 1047: Expected an assignment or function call and instead saw an expression.
12. line 7, char 1048: Missing semicolon.
13. line 7, char 1108: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1109: Missing semicolon.
15. line 7, char 1169: Expected an assignment or function call and instead saw an expression.
16. line 7, char 1170: Missing semicolon.
17. line 7, char 1201: Missing semicolon.
18. line 7, char 1237: Missing semicolon.
19. line 7, char 1280: Missing semicolon.
20. line 7, char 1433: Missing semicolon.
21. line 7, char 1433: Expected an identifier and instead saw &apos;,&apos;.
22. line 7, char 1434: Expected an operator and instead saw &apos;new&apos;.
23. line 7, char 1434: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1437: Missing semicolon.
25. line 7, char 1446: Missing semicolon.
26. line 7, char 1577: Expected an assignment or function call and instead saw an expression.
27. line 7, char 1658: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1848: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1849: Missing semicolon.
30. line 7, char 1920: Missing semicolon.
31. line 7, char 1966: Missing semicolon.
32. line 7, char 1994: Missing semicolon.
33. line 7, char 2318: Missing semicolon.
34. line 7, char 2320: Expected an assignment or function call and instead saw an expression.
35. line 7, char 2321: Missing semicolon.
36. line 7, char 2414: Missing semicolon.
37. line 7, char 2419: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2420: Missing semicolon.
39. line 7, char 2450: Confusing use of &apos;!&apos;.
40. line 7, char 2477: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2478: Missing semicolon.
42. line 7, char 2550: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2551: Missing semicolon.
44. line 7, char 2590: Missing semicolon.
45. line 7, char 2681: Expected an assignment or function call and instead saw an expression.
46. line 7, char 2792: Expected an assignment or function call and instead saw an expression.
47. line 7, char 2793: Missing semicolon.
48. line 7, char 2927: Missing semicolon.
49. line 7, char 3157: Missing semicolon.
50. line 7, char 3167: Missing semicolon.
51. line 7, char 3167: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/sticky/sticky.js">
		<failure message="1 JSHINT Failure">
1. line 126, char 18: Did you mean to return a conditional instead of an assignment?
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/sticky/sticky.min.js">
		<failure message="38 JSHint Failures">
1. line 7, char 180: Missing semicolon.
2. line 7, char 286: Expected an assignment or function call and instead saw an expression.
3. line 7, char 287: Missing semicolon.
4. line 7, char 292: Expected an assignment or function call and instead saw an expression.
5. line 7, char 293: Missing semicolon.
6. line 7, char 294: Missing semicolon.
7. line 7, char 385: Missing semicolon.
8. line 7, char 386: Expected an assignment or function call and instead saw an expression.
9. line 7, char 487: Missing semicolon.
10. line 7, char 492: Missing semicolon.
11. line 7, char 695: Expected an assignment or function call and instead saw an expression.
12. line 7, char 866: Expected an assignment or function call and instead saw an expression.
13. line 7, char 867: Missing semicolon.
14. line 7, char 1137: Missing semicolon.
15. line 7, char 1316: Missing semicolon.
16. line 7, char 1341: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1342: Missing semicolon.
18. line 7, char 1451: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1550: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1551: Missing semicolon.
21. line 7, char 1756: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1757: Missing semicolon.
23. line 7, char 1973: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1974: Missing semicolon.
25. line 7, char 2052: Expected an assignment or function call and instead saw an expression.
26. line 7, char 2069: Did you mean to return a conditional instead of an assignment?
27. line 7, char 2136: Missing semicolon.
28. line 7, char 2350: Missing semicolon.
29. line 7, char 2370: Missing semicolon.
30. line 7, char 2491: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2492: Missing semicolon.
32. line 7, char 2636: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2637: Missing semicolon.
34. line 7, char 2639: Missing semicolon.
35. line 7, char 2832: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2891: Missing semicolon.
37. line 7, char 2893: Missing semicolon.
38. line 7, char 3290: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/subheader/subheader.js">
		<failure message="1 JSHINT Failure">
1. line 103, char 4: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/subheader/subheader.min.js">
		<failure message="9 JSHint Failures">
1. line 7, char 328: Missing semicolon.
2. line 7, char 350: Expected an assignment or function call and instead saw an expression.
3. line 7, char 403: Missing semicolon.
4. line 7, char 544: Expected an assignment or function call and instead saw an expression.
5. line 7, char 545: Missing semicolon.
6. line 7, char 546: Expected an assignment or function call and instead saw an expression.
7. line 7, char 547: Missing semicolon.
8. line 7, char 549: Missing semicolon.
9. line 7, char 975: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/swipe/swipe.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/swipe/swipe.min.js">
		<failure message="6 JSHint Failures">
1. line 7, char 131: Missing semicolon.
2. line 7, char 133: Missing semicolon.
3. line 7, char 135: Missing semicolon.
4. line 7, char 163: Missing semicolon.
5. line 7, char 231: Missing semicolon.
6. line 7, char 645: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/switch/switch.js">
		<failure message="2 JSHint Failures">
1. line 86, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 128, char 51: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/switch/switch.min.js">
		<failure message="23 JSHint Failures">
1. line 7, char 223: Expected an assignment or function call and instead saw an expression.
2. line 7, char 224: Missing semicolon.
3. line 7, char 303: Expected an assignment or function call and instead saw an expression.
4. line 7, char 453: Expected an assignment or function call and instead saw an expression.
5. line 7, char 454: Missing semicolon.
6. line 7, char 550: Expected an assignment or function call and instead saw an expression.
7. line 7, char 585: A leading decimal point can be confused with a dot: &apos;.5&apos;.
8. line 7, char 600: A leading decimal point can be confused with a dot: &apos;.5&apos;.
9. line 7, char 623: Expected an assignment or function call and instead saw an expression.
10. line 7, char 627: Missing semicolon.
11. line 7, char 692: Expected an assignment or function call and instead saw an expression.
12. line 7, char 693: Missing semicolon.
13. line 7, char 695: Missing semicolon.
14. line 7, char 732: Use &apos;!==&apos; to compare with &apos;null&apos;.
15. line 7, char 766: Missing semicolon.
16. line 7, char 800: Expected an assignment or function call and instead saw an expression.
17. line 7, char 966: Missing semicolon.
18. line 7, char 1031: Missing semicolon.
19. line 7, char 1114: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1121: Missing semicolon.
21. line 7, char 1122: Missing semicolon.
22. line 7, char 1430: Missing semicolon.
23. line 7, char 1854: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/tabs/tabs.js">
		<failure message="13 JSHint Failures">
1. line 101, char 24: Use &apos;===&apos; to compare with &apos;0&apos;.
2. line 106, char 25: Use &apos;===&apos; to compare with &apos;0&apos;.
3. line 204, char 4: Missing semicolon.
4. line 293, char 87: Expected an assignment or function call and instead saw an expression.
5. line 446, char 67: Expected an assignment or function call and instead saw an expression.
6. line 447, char 65: Expected an assignment or function call and instead saw an expression.
7. line 596, char 87: Expected an assignment or function call and instead saw an expression.
8. line 620, char 17: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
9. line 696, char 13: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
10. line 757, char 46: Expected an assignment or function call and instead saw an expression.
11. line 853, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
12. line 1130, char 11: [&apos;$mdTabsTemplate&apos;] is better written in dot notation.
13. line 1301, char 95: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/tabs/tabs.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 355: Expected an assignment or function call and instead saw an expression.
2. line 7, char 356: Missing semicolon.
3. line 7, char 406: Missing semicolon.
4. line 7, char 459: Missing semicolon.
5. line 7, char 500: Expected an assignment or function call and instead saw an expression.
6. line 7, char 501: Missing semicolon.
7. line 7, char 546: Missing semicolon.
8. line 7, char 547: Expected an assignment or function call and instead saw an expression.
9. line 7, char 548: Missing semicolon.
10. line 7, char 681: Missing semicolon.
11. line 7, char 706: Missing semicolon.
12. line 7, char 818: Use &apos;===&apos; to compare with &apos;0&apos;.
13. line 7, char 930: Use &apos;===&apos; to compare with &apos;0&apos;.
14. line 7, char 1030: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1031: Missing semicolon.
16. line 7, char 1074: Missing semicolon.
17. line 7, char 1176: Missing semicolon.
18. line 7, char 1268: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1269: Missing semicolon.
20. line 7, char 1271: Missing semicolon.
21. line 7, char 1313: Missing semicolon.
22. line 7, char 1497: Missing semicolon.
23. line 7, char 1499: Missing semicolon.
24. line 7, char 1501: Missing semicolon.
25. line 7, char 1502: Missing semicolon.
26. line 7, char 1504: Missing semicolon.
27. line 7, char 1738: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1739: Missing semicolon.
29. line 7, char 1740: Expected an assignment or function call and instead saw an expression.
30. line 7, char 1741: Missing semicolon.
31. line 7, char 1878: Expected an assignment or function call and instead saw an expression.
32. line 7, char 1893: Missing semicolon.
33. line 7, char 1959: Expected an assignment or function call and instead saw an expression.
34. line 7, char 1960: Missing semicolon.
35. line 7, char 2013: Missing semicolon.
36. line 7, char 2100: Missing semicolon.
37. line 7, char 2101: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2102: Missing semicolon.
39. line 7, char 2150: Missing semicolon.
40. line 7, char 2232: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2233: Missing semicolon.
42. line 7, char 2286: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2287: Missing semicolon.
44. line 7, char 2377: Expected an assignment or function call and instead saw an expression.
45. line 7, char 2378: Missing semicolon.
46. line 7, char 2416: Missing semicolon.
47. line 7, char 2511: Missing semicolon.
48. line 7, char 2546: Expected an assignment or function call and instead saw an expression.
49. line 7, char 2547: Missing semicolon.
50. line 7, char 2675: Expected an assignment or function call and instead saw an expression.
51. line 7, char 2675: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/textField/textField.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/toast/toast.js">
		<failure message="2 JSHint Failures">
1. line 307, char 16: Missing semicolon.
2. line 430, char 33: Use &apos;===&apos; to compare with &apos;true&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/toast/toast.min.js">
		<failure message="28 JSHint Failures">
1. line 7, char 126: Missing semicolon.
2. line 7, char 127: Expected an assignment or function call and instead saw an expression.
3. line 7, char 128: Missing semicolon.
4. line 7, char 130: Missing semicolon.
5. line 7, char 176: Missing semicolon.
6. line 7, char 570: Expected an assignment or function call and instead saw an expression.
7. line 7, char 571: Missing semicolon.
8. line 7, char 812: Missing semicolon.
9. line 7, char 965: Expected an assignment or function call and instead saw an expression.
10. line 7, char 966: Missing semicolon.
11. line 7, char 968: Missing semicolon.
12. line 7, char 1295: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1296: Missing semicolon.
14. line 7, char 1298: Missing semicolon.
15. line 7, char 1409: Missing semicolon.
16. line 7, char 1921: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1922: Missing semicolon.
18. line 7, char 1941: Missing semicolon.
19. line 7, char 1954: Missing semicolon.
20. line 7, char 1956: Missing semicolon.
21. line 7, char 2840: Missing semicolon.
22. line 7, char 2864: Missing semicolon.
23. line 7, char 2900: Missing semicolon.
24. line 7, char 2900: Expected an assignment or function call and instead saw an expression.
25. line 7, char 2901: Missing semicolon.
26. line 7, char 2968: Missing semicolon.
27. line 7, char 3098: Missing semicolon.
28. line 7, char 3551: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/toolbar/toolbar.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/toolbar/toolbar.min.js">
		<failure message="21 JSHint Failures">
1. line 7, char 977: A leading decimal point can be confused with a dot: &apos;.5&apos;.
2. line 7, char 258: Confusing use of &apos;!&apos;.
3. line 7, char 269: Expected an assignment or function call and instead saw an expression.
4. line 7, char 270: Missing semicolon.
5. line 7, char 352: Expected an assignment or function call and instead saw an expression.
6. line 7, char 353: Missing semicolon.
7. line 7, char 647: Expected an assignment or function call and instead saw an expression.
8. line 7, char 648: Missing semicolon.
9. line 7, char 649: Expected an assignment or function call and instead saw an expression.
10. line 7, char 650: Missing semicolon.
11. line 7, char 802: Expected an assignment or function call and instead saw an expression.
12. line 7, char 803: Missing semicolon.
13. line 7, char 818: Missing semicolon.
14. line 7, char 917: Expected an assignment or function call and instead saw an expression.
15. line 7, char 918: Missing semicolon.
16. line 7, char 1153: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1154: Missing semicolon.
18. line 7, char 1217: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1218: Missing semicolon.
20. line 7, char 1220: Missing semicolon.
21. line 7, char 1644: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/tooltip/tooltip.js">
		<failure message="7 JSHint Failures">
1. line 159, char 59: Expected an assignment or function call and instead saw an expression.
2. line 233, char 59: Expected an assignment or function call and instead saw an expression.
3. line 275, char 53: Confusing use of &apos;!&apos;.
4. line 275, char 104: Confusing use of &apos;!&apos;.
5. line 375, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
6. line 378, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
7. line 381, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/tooltip/tooltip.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 99: Missing semicolon.
2. line 7, char 281: Missing semicolon.
3. line 7, char 309: Missing semicolon.
4. line 7, char 332: Expected an assignment or function call and instead saw an expression.
5. line 7, char 333: Missing semicolon.
6. line 7, char 581: Expected an assignment or function call and instead saw an expression.
7. line 7, char 582: Missing semicolon.
8. line 7, char 584: Missing semicolon.
9. line 7, char 689: Expected an assignment or function call and instead saw an expression.
10. line 7, char 690: Missing semicolon.
11. line 7, char 757: Expected an assignment or function call and instead saw an expression.
12. line 7, char 788: Missing semicolon.
13. line 7, char 891: Expected an assignment or function call and instead saw an expression.
14. line 7, char 892: Missing semicolon.
15. line 7, char 975: Missing semicolon.
16. line 7, char 978: Expected an assignment or function call and instead saw an expression.
17. line 7, char 979: Missing semicolon.
18. line 7, char 1108: Missing semicolon.
19. line 7, char 1157: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1158: Missing semicolon.
21. line 7, char 1190: Missing semicolon.
22. line 7, char 1340: Missing semicolon.
23. line 7, char 1371: Missing semicolon.
24. line 7, char 1372: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1373: Missing semicolon.
26. line 7, char 1407: Missing semicolon.
27. line 7, char 1456: Missing semicolon.
28. line 7, char 1796: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1797: Missing semicolon.
30. line 7, char 1798: Expected an assignment or function call and instead saw an expression.
31. line 7, char 1914: Missing semicolon.
32. line 7, char 2161: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2162: Missing semicolon.
34. line 7, char 2181: Missing semicolon.
35. line 7, char 2239: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2240: Missing semicolon.
37. line 7, char 2275: Confusing use of &apos;!&apos;.
38. line 7, char 2303: Confusing use of &apos;!&apos;.
39. line 7, char 2428: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2429: Missing semicolon.
41. line 7, char 2498: Expected an assignment or function call and instead saw an expression.
42. line 7, char 2499: Missing semicolon.
43. line 7, char 2502: Expected an assignment or function call and instead saw an expression.
44. line 7, char 2503: Missing semicolon.
45. line 7, char 2719: Missing semicolon.
46. line 7, char 2720: Expected an assignment or function call and instead saw an expression.
47. line 7, char 2721: Missing semicolon.
48. line 7, char 2849: Expected an assignment or function call and instead saw an expression.
49. line 7, char 2850: Missing semicolon.
50. line 7, char 2898: Expected an assignment or function call and instead saw an expression.
51. line 7, char 2898: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/virtualRepeat/virtualRepeat.js">
		<failure message="6 JSHint Failures">
1. line 58, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
2. line 218, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
3. line 226, char 51: Expected an assignment or function call and instead saw an expression.
4. line 539, char 25: Expected an assignment or function call and instead saw an expression.
5. line 749, char 71: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 756, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/virtualRepeat/virtualRepeat.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 291: Missing semicolon.
2. line 7, char 293: Missing semicolon.
3. line 7, char 499: Missing semicolon.
4. line 7, char 1293: Expected an assignment or function call and instead saw an expression.
5. line 7, char 1294: Missing semicolon.
6. line 7, char 1552: Expected an assignment or function call and instead saw an expression.
7. line 7, char 1759: Missing semicolon.
8. line 7, char 1811: Expected an assignment or function call and instead saw an expression.
9. line 7, char 1812: Missing semicolon.
10. line 7, char 1815: Missing semicolon.
11. line 7, char 2207: Missing semicolon.
12. line 7, char 2208: Missing semicolon.
13. line 7, char 2210: Missing semicolon.
14. line 7, char 2804: Expected an assignment or function call and instead saw an expression.
15. line 7, char 2805: Missing semicolon.
16. line 7, char 3076: Missing semicolon.
17. line 7, char 3156: Missing semicolon.
18. line 7, char 3512: Expected an assignment or function call and instead saw an expression.
19. line 7, char 3862: Expected an assignment or function call and instead saw an expression.
20. line 7, char 3863: Missing semicolon.
21. line 7, char 3954: Missing semicolon.
22. line 7, char 4034: Missing semicolon.
23. line 7, char 4171: Expected an assignment or function call and instead saw an expression.
24. line 7, char 4175: Missing semicolon.
25. line 7, char 4331: Expected an assignment or function call and instead saw an expression.
26. line 7, char 4335: Missing semicolon.
27. line 7, char 4579: Expected an assignment or function call and instead saw an expression.
28. line 7, char 4580: Missing semicolon.
29. line 7, char 4672: Missing semicolon.
30. line 7, char 4789: Missing semicolon.
31. line 7, char 5055: Expected an assignment or function call and instead saw an expression.
32. line 7, char 5165: Expected an assignment or function call and instead saw an expression.
33. line 7, char 5292: Expected an assignment or function call and instead saw an expression.
34. line 7, char 5293: Missing semicolon.
35. line 7, char 5560: Expected an assignment or function call and instead saw an expression.
36. line 7, char 5672: Expected an assignment or function call and instead saw an expression.
37. line 7, char 5820: Expected an assignment or function call and instead saw an expression.
38. line 7, char 5821: Missing semicolon.
39. line 7, char 5854: Missing semicolon.
40. line 7, char 6031: Expected an assignment or function call and instead saw an expression.
41. line 7, char 6032: Missing semicolon.
42. line 7, char 6128: Missing semicolon.
43. line 7, char 6275: Expected an assignment or function call and instead saw an expression.
44. line 7, char 6276: Missing semicolon.
45. line 7, char 6439: Expected an assignment or function call and instead saw an expression.
46. line 7, char 6440: Missing semicolon.
47. line 7, char 6524: Missing semicolon.
48. line 7, char 6759: Expected an assignment or function call and instead saw an expression.
49. line 7, char 7403: Expected an assignment or function call and instead saw an expression.
50. line 7, char 7404: Missing semicolon.
51. line 7, char 7404: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/closure/whiteframe/whiteframe.js" />
	<testcase name="client/bower_components/angular-material/modules/closure/whiteframe/whiteframe.min.js">
		<failure message="6 JSHint Failures">
1. line 7, char 242: Expected an assignment or function call and instead saw an expression.
2. line 7, char 304: Expected an assignment or function call and instead saw an expression.
3. line 7, char 305: Missing semicolon.
4. line 7, char 307: Missing semicolon.
5. line 7, char 344: Missing semicolon.
6. line 7, char 663: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/autocomplete/autocomplete.js">
		<failure message="51 JSHint Failures">
1. line 303, char 6: Missing semicolon.
2. line 349, char 101: Expected an assignment or function call and instead saw an expression.
3. line 356, char 64: Expected an assignment or function call and instead saw an expression.
4. line 1008, char 17: Bad escaping of EOL. Use option multistr if needed.
5. line 1009, char 32: Bad escaping of EOL. Use option multistr if needed.
6. line 1010, char 27: Bad escaping of EOL. Use option multistr if needed.
7. line 1011, char 117: Bad escaping of EOL. Use option multistr if needed.
8. line 1012, char 38: Bad escaping of EOL. Use option multistr if needed.
9. line 1013, char 32: Bad escaping of EOL. Use option multistr if needed.
10. line 1014, char 74: Bad escaping of EOL. Use option multistr if needed.
11. line 1015, char 63: Bad escaping of EOL. Use option multistr if needed.
12. line 1016, char 62: Bad escaping of EOL. Use option multistr if needed.
13. line 1017, char 41: Bad escaping of EOL. Use option multistr if needed.
14. line 1018, char 31: Bad escaping of EOL. Use option multistr if needed.
15. line 1019, char 39: Bad escaping of EOL. Use option multistr if needed.
16. line 1020, char 64: Bad escaping of EOL. Use option multistr if needed.
17. line 1021, char 64: Bad escaping of EOL. Use option multistr if needed.
18. line 1022, char 59: Bad escaping of EOL. Use option multistr if needed.
19. line 1023, char 53: Bad escaping of EOL. Use option multistr if needed.
20. line 1024, char 79: Bad escaping of EOL. Use option multistr if needed.
21. line 1025, char 87: Bad escaping of EOL. Use option multistr if needed.
22. line 1026, char 37: Bad escaping of EOL. Use option multistr if needed.
23. line 1027, char 54: Bad escaping of EOL. Use option multistr if needed.
24. line 1028, char 41: Bad escaping of EOL. Use option multistr if needed.
25. line 1029, char 54: Bad escaping of EOL. Use option multistr if needed.
26. line 1030, char 76: Bad escaping of EOL. Use option multistr if needed.
27. line 1031, char 82: Bad escaping of EOL. Use option multistr if needed.
28. line 1032, char 66: Bad escaping of EOL. Use option multistr if needed.
29. line 1033, char 66: Bad escaping of EOL. Use option multistr if needed.
30. line 1034, char 41: Bad escaping of EOL. Use option multistr if needed.
31. line 1035, char 49: Bad escaping of EOL. Use option multistr if needed.
32. line 1036, char 20: Bad escaping of EOL. Use option multistr if needed.
33. line 1037, char 43: Bad escaping of EOL. Use option multistr if needed.
34. line 1038, char 34: Bad escaping of EOL. Use option multistr if needed.
35. line 1039, char 23: Bad escaping of EOL. Use option multistr if needed.
36. line 1040, char 42: Bad escaping of EOL. Use option multistr if needed.
37. line 1041, char 28: Bad escaping of EOL. Use option multistr if needed.
38. line 1042, char 37: Bad escaping of EOL. Use option multistr if needed.
39. line 1043, char 115: Bad escaping of EOL. Use option multistr if needed.
40. line 1057, char 67: Bad escaping of EOL. Use option multistr if needed.
41. line 1057, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
42. line 1065, char 21: Bad escaping of EOL. Use option multistr if needed.
43. line 1066, char 62: Bad escaping of EOL. Use option multistr if needed.
44. line 1067, char 49: Bad escaping of EOL. Use option multistr if needed.
45. line 1068, char 37: Bad escaping of EOL. Use option multistr if needed.
46. line 1069, char 33: Use &apos;!==&apos; to compare with &apos;null&apos;.
47. line 1069, char 84: Bad escaping of EOL. Use option multistr if needed.
48. line 1070, char 81: Bad escaping of EOL. Use option multistr if needed.
49. line 1071, char 41: Bad escaping of EOL. Use option multistr if needed.
50. line 1072, char 39: Bad escaping of EOL. Use option multistr if needed.
51. line 1072, char 39: Too many errors. (82% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/autocomplete/autocomplete.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 199: Expected an assignment or function call and instead saw an expression.
2. line 7, char 200: Missing semicolon.
3. line 7, char 201: Expected an assignment or function call and instead saw an expression.
4. line 7, char 202: Missing semicolon.
5. line 7, char 398: Expected an assignment or function call and instead saw an expression.
6. line 7, char 399: Missing semicolon.
7. line 7, char 408: Missing semicolon.
8. line 7, char 551: Expected an assignment or function call and instead saw an expression.
9. line 7, char 552: Missing semicolon.
10. line 7, char 1121: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1122: Missing semicolon.
12. line 7, char 1284: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1285: Missing semicolon.
14. line 7, char 1327: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1328: Missing semicolon.
16. line 7, char 1449: Missing semicolon.
17. line 7, char 1529: Missing semicolon.
18. line 7, char 1609: Missing semicolon.
19. line 7, char 1728: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1729: Missing semicolon.
21. line 7, char 1903: Missing semicolon.
22. line 7, char 1905: Missing semicolon.
23. line 7, char 2245: Expected an assignment or function call and instead saw an expression.
24. line 7, char 2246: Missing semicolon.
25. line 7, char 2367: Missing semicolon.
26. line 7, char 2448: Expected an assignment or function call and instead saw an expression.
27. line 7, char 2458: Missing semicolon.
28. line 7, char 2564: Expected an assignment or function call and instead saw an expression.
29. line 7, char 2565: Missing semicolon.
30. line 7, char 2640: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2641: Missing semicolon.
32. line 7, char 2647: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2648: Missing semicolon.
34. line 7, char 2695: Missing semicolon.
35. line 7, char 2786: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2787: Missing semicolon.
37. line 7, char 2788: Missing semicolon.
38. line 7, char 2807: Missing semicolon.
39. line 7, char 2860: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2861: Missing semicolon.
41. line 7, char 2891: Missing semicolon.
42. line 7, char 2953: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2954: Missing semicolon.
44. line 7, char 2966: Expected an assignment or function call and instead saw an expression.
45. line 7, char 2967: Missing semicolon.
46. line 7, char 3039: Expected an assignment or function call and instead saw an expression.
47. line 7, char 3040: Missing semicolon.
48. line 7, char 3095: Expected an assignment or function call and instead saw an expression.
49. line 7, char 3096: Missing semicolon.
50. line 7, char 3142: Missing semicolon.
51. line 7, char 3142: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/backdrop/backdrop.js" />
	<testcase name="client/bower_components/angular-material/modules/js/backdrop/backdrop.min.js">
		<failure message="11 JSHint Failures">
1. line 7, char 414: Missing semicolon.
2. line 7, char 485: Expected an assignment or function call and instead saw an expression.
3. line 7, char 545: Expected an assignment or function call and instead saw an expression.
4. line 7, char 546: Missing semicolon.
5. line 7, char 588: Expected an assignment or function call and instead saw an expression.
6. line 7, char 589: Missing semicolon.
7. line 7, char 590: Expected an assignment or function call and instead saw an expression.
8. line 7, char 591: Missing semicolon.
9. line 7, char 714: Missing semicolon.
10. line 7, char 717: Missing semicolon.
11. line 7, char 740: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/bottomSheet/bottomSheet.js">
		<failure message="1 JSHINT Failure">
1. line 220, char 42: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/bottomSheet/bottomSheet.min.js">
		<failure message="31 JSHint Failures">
1. line 7, char 141: Missing semicolon.
2. line 7, char 142: Expected an assignment or function call and instead saw an expression.
3. line 7, char 143: Missing semicolon.
4. line 7, char 145: Missing semicolon.
5. line 7, char 443: Missing semicolon.
6. line 7, char 492: Expected an assignment or function call and instead saw an expression.
7. line 7, char 953: Expected an assignment or function call and instead saw an expression.
8. line 7, char 954: Missing semicolon.
9. line 7, char 1009: Expected an assignment or function call and instead saw an expression.
10. line 7, char 1010: Missing semicolon.
11. line 7, char 1012: Missing semicolon.
12. line 7, char 1199: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1200: Missing semicolon.
14. line 7, char 1202: Missing semicolon.
15. line 7, char 1271: Missing semicolon.
16. line 7, char 1390: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1391: Missing semicolon.
18. line 7, char 1576: A leading decimal point can be confused with a dot: &apos;.75&apos;.
19. line 7, char 1644: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1645: Missing semicolon.
21. line 7, char 1711: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1712: Missing semicolon.
23. line 7, char 1924: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1925: Missing semicolon.
25. line 7, char 1927: Missing semicolon.
26. line 7, char 2055: Missing semicolon.
27. line 7, char 2064: A leading decimal point can be confused with a dot: &apos;.5&apos;.
28. line 7, char 2296: Missing semicolon.
29. line 7, char 2514: Expected an assignment or function call and instead saw an expression.
30. line 7, char 2515: Missing semicolon.
31. line 7, char 2538: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/button/button.js" />
	<testcase name="client/bower_components/angular-material/modules/js/button/button.min.js">
		<failure message="21 JSHint Failures">
1. line 7, char 88: Missing semicolon.
2. line 7, char 90: Missing semicolon.
3. line 7, char 220: Missing semicolon.
4. line 7, char 412: Missing semicolon.
5. line 7, char 575: Missing semicolon.
6. line 7, char 616: Confusing use of &apos;!&apos;.
7. line 7, char 668: Expected an assignment or function call and instead saw an expression.
8. line 7, char 669: Missing semicolon.
9. line 7, char 795: Missing semicolon.
10. line 7, char 800: Expected an assignment or function call and instead saw an expression.
11. line 7, char 801: Missing semicolon.
12. line 7, char 842: Confusing use of &apos;!&apos;.
13. line 7, char 869: Expected an assignment or function call and instead saw an expression.
14. line 7, char 870: Missing semicolon.
15. line 7, char 922: Missing semicolon.
16. line 7, char 924: Expected an assignment or function call and instead saw an expression.
17. line 7, char 925: Missing semicolon.
18. line 7, char 990: Missing semicolon.
19. line 7, char 1179: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1180: Missing semicolon.
21. line 7, char 1203: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/card/card.js" />
	<testcase name="client/bower_components/angular-material/modules/js/card/card.min.js">
		<failure message="6 JSHint Failures">
1. line 7, char 107: Expected an assignment or function call and instead saw an expression.
2. line 7, char 108: Missing semicolon.
3. line 7, char 110: Missing semicolon.
4. line 7, char 211: Expected an assignment or function call and instead saw an expression.
5. line 7, char 212: Missing semicolon.
6. line 7, char 235: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/checkbox/checkbox.js" />
	<testcase name="client/bower_components/angular-material/modules/js/checkbox/checkbox.min.js">
		<failure message="32 JSHint Failures">
1. line 7, char 308: Expected an assignment or function call and instead saw an expression.
2. line 7, char 309: Missing semicolon.
3. line 7, char 345: Missing semicolon.
4. line 7, char 435: Expected an assignment or function call and instead saw an expression.
5. line 7, char 436: Missing semicolon.
6. line 7, char 437: Expected an assignment or function call and instead saw an expression.
7. line 7, char 438: Missing semicolon.
8. line 7, char 597: Expected an assignment or function call and instead saw an expression.
9. line 7, char 598: Missing semicolon.
10. line 7, char 745: Expected an assignment or function call and instead saw an expression.
11. line 7, char 746: Missing semicolon.
12. line 7, char 747: Expected an assignment or function call and instead saw an expression.
13. line 7, char 748: Missing semicolon.
14. line 7, char 808: Expected an assignment or function call and instead saw an expression.
15. line 7, char 809: Missing semicolon.
16. line 7, char 830: Confusing use of &apos;!&apos;.
17. line 7, char 901: Expected an assignment or function call and instead saw an expression.
18. line 7, char 902: Missing semicolon.
19. line 7, char 1301: Missing semicolon.
20. line 7, char 1306: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1307: Missing semicolon.
22. line 7, char 1348: Confusing use of &apos;!&apos;.
23. line 7, char 1375: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1376: Missing semicolon.
25. line 7, char 1427: Missing semicolon.
26. line 7, char 1440: Expected an assignment or function call and instead saw an expression.
27. line 7, char 1441: Missing semicolon.
28. line 7, char 1442: Missing semicolon.
29. line 7, char 1698: Missing semicolon.
30. line 7, char 1869: Expected an assignment or function call and instead saw an expression.
31. line 7, char 1870: Missing semicolon.
32. line 7, char 1893: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/chips/chips.js">
		<failure message="51 JSHint Failures">
1. line 239, char 31: Bad escaping of EOL. Use option multistr if needed.
2. line 240, char 72: Bad escaping of EOL. Use option multistr if needed.
3. line 241, char 36: Bad escaping of EOL. Use option multistr if needed.
4. line 574, char 34: Use &apos;===&apos; to compare with &apos;&apos;.
5. line 608, char 15: Use &apos;===&apos; to compare with &apos;0&apos;.
6. line 638, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
7. line 829, char 24: Expected an assignment or function call and instead saw an expression.
8. line 867, char 78: Missing semicolon.
9. line 868, char 76: Missing semicolon.
10. line 869, char 74: Missing semicolon.
11. line 869, char 77: Missing semicolon.
12. line 1019, char 30: Bad escaping of EOL. Use option multistr if needed.
13. line 1020, char 23: Bad escaping of EOL. Use option multistr if needed.
14. line 1021, char 58: Bad escaping of EOL. Use option multistr if needed.
15. line 1022, char 135: Bad escaping of EOL. Use option multistr if needed.
16. line 1023, char 30: Bad escaping of EOL. Use option multistr if needed.
17. line 1024, char 59: Bad escaping of EOL. Use option multistr if needed.
18. line 1025, char 33: Bad escaping of EOL. Use option multistr if needed.
19. line 1026, char 149: Bad escaping of EOL. Use option multistr if needed.
20. line 1027, char 42: Bad escaping of EOL. Use option multistr if needed.
21. line 1028, char 30: Bad escaping of EOL. Use option multistr if needed.
22. line 1029, char 35: Bad escaping of EOL. Use option multistr if needed.
23. line 1030, char 84: Bad escaping of EOL. Use option multistr if needed.
24. line 1031, char 85: Bad escaping of EOL. Use option multistr if needed.
25. line 1032, char 78: Bad escaping of EOL. Use option multistr if needed.
26. line 1033, char 48: Bad escaping of EOL. Use option multistr if needed.
27. line 1034, char 51: Bad escaping of EOL. Use option multistr if needed.
28. line 1035, char 77: Bad escaping of EOL. Use option multistr if needed.
29. line 1036, char 21: Bad escaping of EOL. Use option multistr if needed.
30. line 1037, char 49: Bad escaping of EOL. Use option multistr if needed.
31. line 1038, char 76: Bad escaping of EOL. Use option multistr if needed.
32. line 1039, char 76: Bad escaping of EOL. Use option multistr if needed.
33. line 1040, char 17: Bad escaping of EOL. Use option multistr if needed.
34. line 1043, char 32: Bad escaping of EOL. Use option multistr if needed.
35. line 1044, char 17: Bad escaping of EOL. Use option multistr if needed.
36. line 1045, char 31: Bad escaping of EOL. Use option multistr if needed.
37. line 1046, char 27: Bad escaping of EOL. Use option multistr if needed.
38. line 1047, char 62: Bad escaping of EOL. Use option multistr if needed.
39. line 1048, char 61: Bad escaping of EOL. Use option multistr if needed.
40. line 1049, char 49: Bad escaping of EOL. Use option multistr if needed.
41. line 1050, char 53: Bad escaping of EOL. Use option multistr if needed.
42. line 1051, char 51: Bad escaping of EOL. Use option multistr if needed.
43. line 1052, char 30: Bad escaping of EOL. Use option multistr if needed.
44. line 1055, char 34: Bad escaping of EOL. Use option multistr if needed.
45. line 1058, char 33: Bad escaping of EOL. Use option multistr if needed.
46. line 1059, char 16: Bad escaping of EOL. Use option multistr if needed.
47. line 1060, char 36: Bad escaping of EOL. Use option multistr if needed.
48. line 1061, char 43: Bad escaping of EOL. Use option multistr if needed.
49. line 1062, char 84: Bad escaping of EOL. Use option multistr if needed.
50. line 1063, char 26: Bad escaping of EOL. Use option multistr if needed.
51. line 1063, char 26: Too many errors. (73% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/chips/chips.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 53: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
2. line 7, char 67: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
3. line 7, char 83: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
4. line 7, char 102: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 7, char 118: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 7, char 133: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
7. line 7, char 152: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
8. line 7, char 176: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
9. line 7, char 197: Expected an assignment or function call and instead saw an expression.
10. line 7, char 198: Missing semicolon.
11. line 7, char 449: Expected an assignment or function call and instead saw an expression.
12. line 7, char 450: Missing semicolon.
13. line 7, char 452: Expected an assignment or function call and instead saw an expression.
14. line 7, char 453: Missing semicolon.
15. line 7, char 454: Missing semicolon.
16. line 7, char 567: Missing semicolon.
17. line 7, char 685: Missing semicolon.
18. line 7, char 687: Missing semicolon.
19. line 7, char 779: Expected an assignment or function call and instead saw an expression.
20. line 7, char 780: Missing semicolon.
21. line 7, char 781: Expected an assignment or function call and instead saw an expression.
22. line 7, char 782: Missing semicolon.
23. line 7, char 838: Missing semicolon.
24. line 7, char 998: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1068: Expected an assignment or function call and instead saw an expression.
26. line 7, char 1069: Missing semicolon.
27. line 7, char 1119: Missing semicolon.
28. line 7, char 1144: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
29. line 7, char 1160: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
30. line 7, char 1179: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
31. line 7, char 1193: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
32. line 7, char 1215: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
33. line 7, char 1227: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
34. line 7, char 1243: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
35. line 7, char 1265: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
36. line 7, char 1296: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
37. line 7, char 1323: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
38. line 7, char 1337: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
39. line 7, char 1358: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
40. line 7, char 1382: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
41. line 7, char 1426: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
42. line 7, char 1449: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
43. line 7, char 1501: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
44. line 7, char 1533: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
45. line 7, char 1552: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
46. line 7, char 1577: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
47. line 7, char 1594: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
48. line 7, char 1614: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
49. line 7, char 1632: Expected an assignment or function call and instead saw an expression.
50. line 7, char 1633: Missing semicolon.
51. line 7, char 1633: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/colors/colors.js">
		<failure message="3 JSHint Failures">
1. line 11, char 3: Unnecessary directive &quot;use strict&quot;.
2. line 18, char 7: It&apos;s not necessary to initialize &apos;colorPalettes&apos; to &apos;undefined&apos;.
3. line 160, char 20: [&apos;color&apos;] is better written in dot notation.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/colors/colors.min.js">
		<failure message="31 JSHint Failures">
1. line 7, char 92: Missing semicolon.
2. line 7, char 120: Missing semicolon.
3. line 7, char 158: Missing semicolon.
4. line 7, char 321: Missing semicolon.
5. line 7, char 479: Expected an assignment or function call and instead saw an expression.
6. line 7, char 480: Missing semicolon.
7. line 7, char 484: Missing semicolon.
8. line 7, char 544: Missing semicolon.
9. line 7, char 703: Missing semicolon.
10. line 7, char 1005: Missing semicolon.
11. line 7, char 1014: Missing semicolon.
12. line 7, char 1492: Missing semicolon.
13. line 7, char 1548: Missing semicolon.
14. line 7, char 1632: Missing semicolon.
15. line 7, char 1919: Missing semicolon.
16. line 7, char 2101: Expected an assignment or function call and instead saw an expression.
17. line 7, char 2102: Missing semicolon.
18. line 7, char 2106: Missing semicolon.
19. line 7, char 2179: Missing semicolon.
20. line 7, char 2213: Missing semicolon.
21. line 7, char 2214: Expected an assignment or function call and instead saw an expression.
22. line 7, char 2295: Expected an assignment or function call and instead saw an expression.
23. line 7, char 2296: Missing semicolon.
24. line 7, char 2324: Missing semicolon.
25. line 7, char 2326: Missing semicolon.
26. line 7, char 2328: Missing semicolon.
27. line 7, char 2600: Expected an assignment or function call and instead saw an expression.
28. line 7, char 2601: Missing semicolon.
29. line 7, char 2603: Expected an assignment or function call and instead saw an expression.
30. line 7, char 2604: Missing semicolon.
31. line 7, char 2627: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/content/content.js" />
	<testcase name="client/bower_components/angular-material/modules/js/content/content.min.js">
		<failure message="13 JSHint Failures">
1. line 7, char 61: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
2. line 7, char 75: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
3. line 7, char 89: Expected an assignment or function call and instead saw an expression.
4. line 7, char 90: Missing semicolon.
5. line 7, char 229: Expected an assignment or function call and instead saw an expression.
6. line 7, char 230: Missing semicolon.
7. line 7, char 232: Missing semicolon.
8. line 7, char 457: Expected an assignment or function call and instead saw an expression.
9. line 7, char 458: Missing semicolon.
10. line 7, char 460: Missing semicolon.
11. line 7, char 567: Expected an assignment or function call and instead saw an expression.
12. line 7, char 568: Missing semicolon.
13. line 7, char 591: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/core/core.js">
		<failure message="51 JSHint Failures">
1. line 189, char 4: Missing semicolon.
2. line 263, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
3. line 272, char 4: Missing semicolon.
4. line 796, char 49: Missing semicolon.
5. line 852, char 32: Missing semicolon.
6. line 931, char 29: Use &apos;===&apos; to compare with &apos;0&apos;.
7. line 1040, char 12: Expected an assignment or function call and instead saw an expression.
8. line 1060, char 60: Did you mean to return a conditional instead of an assignment?
9. line 1129, char 24: Expected an assignment or function call and instead saw an expression.
10. line 1357, char 34: Expected a conditional expression and instead saw an assignment.
11. line 1368, char 78: Missing semicolon.
12. line 1464, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
13. line 1655, char 36: Expected a conditional expression and instead saw an assignment.
14. line 1751, char 34: Did you mean to return a conditional instead of an assignment?
15. line 2188, char 4: Expected an assignment or function call and instead saw an expression.
16. line 2213, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
17. line 2222, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
18. line 2367, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
19. line 2368, char 7: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
20. line 2513, char 28: Did you mean to return a conditional instead of an assignment?
21. line 2812, char 23: Did you mean to return a conditional instead of an assignment?
22. line 2964, char 22: Did you mean to return a conditional instead of an assignment?
23. line 3009, char 60: Expected an assignment or function call and instead saw an expression.
24. line 3015, char 74: Expected an assignment or function call and instead saw an expression.
25. line 3024, char 80: Expected an assignment or function call and instead saw an expression.
26. line 3158, char 14: Missing semicolon.
27. line 3165, char 12: Missing semicolon.
28. line 3209, char 37: Use &apos;===&apos; to compare with &apos;true&apos;.
29. line 3242, char 3: Unnecessary directive &quot;use strict&quot;.
30. line 3499, char 51: Missing semicolon.
31. line 3712, char 33: Use &apos;===&apos; to compare with &apos;0&apos;.
32. line 3712, char 64: Use &apos;===&apos; to compare with &apos;0&apos;.
33. line 3759, char 18: Did you mean to return a conditional instead of an assignment?
34. line 3862, char 3: Unnecessary directive &quot;use strict&quot;.
35. line 3900, char 10: Missing semicolon.
36. line 3902, char 6: Unnecessary semicolon.
37. line 3904, char 48: Unnecessary semicolon.
38. line 3908, char 3: Unnecessary directive &quot;use strict&quot;.
39. line 3937, char 6: Unnecessary semicolon.
40. line 3939, char 50: Unnecessary semicolon.
41. line 3943, char 3: Unnecessary directive &quot;use strict&quot;.
42. line 3973, char 6: Unnecessary semicolon.
43. line 3975, char 46: Unnecessary semicolon.
44. line 4031, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
45. line 4032, char 53: Expected an assignment or function call and instead saw an expression.
46. line 4319, char 40: Expected a conditional expression and instead saw an assignment.
47. line 4383, char 9: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
48. line 4442, char 3: Unnecessary directive &quot;use strict&quot;.
49. line 4472, char 6: Unnecessary semicolon.
50. line 4474, char 45: Unnecessary semicolon.
51. line 4474, char 45: Too many errors. (71% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/core/core.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 239: Missing semicolon.
2. line 7, char 411: Expected an assignment or function call and instead saw an expression.
3. line 7, char 412: Missing semicolon.
4. line 7, char 576: Expected an assignment or function call and instead saw an expression.
5. line 7, char 577: Missing semicolon.
6. line 7, char 579: Expected an assignment or function call and instead saw an expression.
7. line 7, char 580: Missing semicolon.
8. line 7, char 581: Missing semicolon.
9. line 7, char 584: Missing semicolon.
10. line 7, char 625: Missing semicolon.
11. line 7, char 752: Missing semicolon.
12. line 7, char 754: Missing semicolon.
13. line 7, char 973: Missing semicolon.
14. line 7, char 1262: Missing semicolon.
15. line 7, char 1325: Missing semicolon.
16. line 7, char 1411: Missing semicolon.
17. line 7, char 1467: Missing semicolon.
18. line 7, char 1589: Missing semicolon.
19. line 7, char 1634: Missing semicolon.
20. line 7, char 1712: Missing semicolon.
21. line 7, char 1714: Missing semicolon.
22. line 7, char 2976: Missing semicolon.
23. line 7, char 3024: Missing semicolon.
24. line 7, char 3053: Missing semicolon.
25. line 7, char 3101: Missing semicolon.
26. line 7, char 3137: Missing semicolon.
27. line 7, char 3173: Missing semicolon.
28. line 7, char 3209: Missing semicolon.
29. line 7, char 3269: Missing semicolon.
30. line 7, char 3271: Missing semicolon.
31. line 7, char 3350: Missing semicolon.
32. line 7, char 3386: Expected an assignment or function call and instead saw an expression.
33. line 7, char 3387: Missing semicolon.
34. line 7, char 3421: Missing semicolon.
35. line 7, char 3453: Missing semicolon.
36. line 7, char 3492: Missing semicolon.
37. line 7, char 3540: Missing semicolon.
38. line 7, char 3741: Expected an assignment or function call and instead saw an expression.
39. line 7, char 3742: Missing semicolon.
40. line 7, char 3769: Missing semicolon.
41. line 7, char 3827: Expected an assignment or function call and instead saw an expression.
42. line 7, char 4017: Missing semicolon.
43. line 7, char 4091: Expected an assignment or function call and instead saw an expression.
44. line 7, char 4139: Missing semicolon.
45. line 7, char 17210: A leading decimal point can be confused with a dot: &apos;.65&apos;.
46. line 7, char 4204: Missing semicolon.
47. line 7, char 4304: Missing semicolon.
48. line 7, char 4365: Missing semicolon.
49. line 7, char 4367: Missing semicolon.
50. line 7, char 4393: Missing semicolon.
51. line 7, char 4393: Too many errors. (77% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/core/default-theme.js" />
	<testcase name="client/bower_components/angular-material/modules/js/datepicker/datepicker.js">
		<failure message="18 JSHint Failures">
1. line 11, char 3: Unnecessary directive &quot;use strict&quot;.
2. line 392, char 3: Unnecessary directive &quot;use strict&quot;.
3. line 544, char 66: Expected an assignment or function call and instead saw an expression.
4. line 710, char 3: Unnecessary directive &quot;use strict&quot;.
5. line 866, char 12: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
6. line 1003, char 3: Unnecessary directive &quot;use strict&quot;.
7. line 1133, char 66: Expected an assignment or function call and instead saw an expression.
8. line 1237, char 3: Unnecessary directive &quot;use strict&quot;.
9. line 1420, char 3: Unnecessary directive &quot;use strict&quot;.
10. line 1590, char 29: Use &apos;===&apos; to compare with &apos;0&apos;.
11. line 1710, char 3: Unnecessary directive &quot;use strict&quot;.
12. line 1929, char 10: Expected an assignment or function call and instead saw an expression.
13. line 2114, char 51: Use &apos;===&apos; to compare with &apos;null&apos;.
14. line 2149, char 36: Use &apos;===&apos; to compare with &apos;&apos;.
15. line 2195, char 68: Use &apos;===&apos; to compare with &apos;0&apos;.
16. line 2199, char 71: Use &apos;===&apos; to compare with &apos;0&apos;.
17. line 2373, char 3: Unnecessary directive &quot;use strict&quot;.
18. line 2565, char 19: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/datepicker/datepicker.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 340: Missing semicolon.
2. line 7, char 575: Missing semicolon.
3. line 7, char 577: Missing semicolon.
4. line 7, char 611: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 7, char 627: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 7, char 641: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
7. line 7, char 657: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
8. line 7, char 672: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
9. line 7, char 696: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
10. line 7, char 709: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
11. line 7, char 720: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
12. line 7, char 757: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
13. line 7, char 779: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
14. line 7, char 804: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
15. line 7, char 857: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
16. line 7, char 899: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
17. line 7, char 934: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
18. line 7, char 946: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
19. line 7, char 968: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
20. line 7, char 991: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
21. line 7, char 1013: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
22. line 7, char 1026: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
23. line 7, char 1106: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
24. line 7, char 1111: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
25. line 7, char 1131: Expected an assignment or function call and instead saw an expression.
26. line 7, char 1132: Missing semicolon.
27. line 7, char 1514: Missing semicolon.
28. line 7, char 1700: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1701: Missing semicolon.
30. line 7, char 1701: Expected an assignment or function call and instead saw an expression.
31. line 7, char 1702: Missing semicolon.
32. line 7, char 1913: Missing semicolon.
33. line 7, char 2056: Expected an assignment or function call and instead saw an expression.
34. line 7, char 2057: Missing semicolon.
35. line 7, char 2059: Missing semicolon.
36. line 7, char 2219: Expected an assignment or function call and instead saw an expression.
37. line 7, char 2364: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2365: Missing semicolon.
39. line 7, char 2434: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2435: Missing semicolon.
41. line 7, char 2895: Missing semicolon.
42. line 7, char 3249: Expected an assignment or function call and instead saw an expression.
43. line 7, char 3250: Missing semicolon.
44. line 7, char 3252: Missing semicolon.
45. line 7, char 3437: Expected an assignment or function call and instead saw an expression.
46. line 7, char 3441: Missing semicolon.
47. line 7, char 3665: Expected an assignment or function call and instead saw an expression.
48. line 7, char 3666: Missing semicolon.
49. line 7, char 3667: Expected an assignment or function call and instead saw an expression.
50. line 7, char 3668: Missing semicolon.
51. line 7, char 3668: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/dialog/dialog.js">
		<failure message="3 JSHint Failures">
1. line 608, char 40: Missing semicolon.
2. line 610, char 10: Missing semicolon.
3. line 993, char 8: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/dialog/dialog.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 203: Missing semicolon.
2. line 7, char 359: Missing semicolon.
3. line 7, char 360: Expected an assignment or function call and instead saw an expression.
4. line 7, char 361: Missing semicolon.
5. line 7, char 362: Expected an assignment or function call and instead saw an expression.
6. line 7, char 363: Missing semicolon.
7. line 7, char 365: Missing semicolon.
8. line 7, char 1796: Missing semicolon.
9. line 7, char 1830: Missing semicolon.
10. line 7, char 1906: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1907: Missing semicolon.
12. line 7, char 1907: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1908: Missing semicolon.
14. line 7, char 1975: Missing semicolon.
15. line 7, char 2384: Missing semicolon.
16. line 7, char 2537: Expected an assignment or function call and instead saw an expression.
17. line 7, char 2538: Missing semicolon.
18. line 7, char 2705: Missing semicolon.
19. line 7, char 2725: Missing semicolon.
20. line 7, char 2785: Missing semicolon.
21. line 7, char 3174: Expected an assignment or function call and instead saw an expression.
22. line 7, char 3175: Missing semicolon.
23. line 7, char 3265: Expected an assignment or function call and instead saw an expression.
24. line 7, char 3266: Missing semicolon.
25. line 7, char 3268: Missing semicolon.
26. line 7, char 3313: Missing semicolon.
27. line 7, char 3647: Expected an assignment or function call and instead saw an expression.
28. line 7, char 3648: Missing semicolon.
29. line 7, char 3778: Expected an assignment or function call and instead saw an expression.
30. line 7, char 3779: Missing semicolon.
31. line 7, char 3977: Missing semicolon.
32. line 7, char 4248: Missing semicolon.
33. line 7, char 4329: Missing semicolon.
34. line 7, char 4536: Expected an assignment or function call and instead saw an expression.
35. line 7, char 4537: Missing semicolon.
36. line 7, char 4603: Missing semicolon.
37. line 7, char 4682: Missing semicolon.
38. line 7, char 4807: Expected an assignment or function call and instead saw an expression.
39. line 7, char 4808: Missing semicolon.
40. line 7, char 4900: Expected an assignment or function call and instead saw an expression.
41. line 7, char 4901: Missing semicolon.
42. line 7, char 4902: Expected an assignment or function call and instead saw an expression.
43. line 7, char 4903: Missing semicolon.
44. line 7, char 4959: Missing semicolon.
45. line 7, char 5019: Missing semicolon.
46. line 7, char 5105: Expected an assignment or function call and instead saw an expression.
47. line 7, char 5106: Missing semicolon.
48. line 7, char 5202: Expected an assignment or function call and instead saw an expression.
49. line 7, char 5203: Missing semicolon.
50. line 7, char 5204: Expected an assignment or function call and instead saw an expression.
51. line 7, char 5204: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/divider/divider.js" />
	<testcase name="client/bower_components/angular-material/modules/js/divider/divider.min.js">
		<failure message="4 JSHint Failures">
1. line 7, char 72: Missing semicolon.
2. line 7, char 179: Expected an assignment or function call and instead saw an expression.
3. line 7, char 180: Missing semicolon.
4. line 7, char 203: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabActions/fabActions.js">
		<failure message="2 JSHint Failures">
1. line 11, char 3: Unnecessary directive &quot;use strict&quot;.
2. line 55, char 6: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabActions/fabActions.min.js">
		<failure message="8 JSHint Failures">
1. line 7, char 283: Expected an assignment or function call and instead saw an expression.
2. line 7, char 284: Missing semicolon.
3. line 7, char 286: Missing semicolon.
4. line 7, char 396: Expected an assignment or function call and instead saw an expression.
5. line 7, char 397: Missing semicolon.
6. line 7, char 399: Expected an assignment or function call and instead saw an expression.
7. line 7, char 400: Missing semicolon.
8. line 7, char 423: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabSpeedDial/fabSpeedDial.js">
		<failure message="4 JSHint Failures">
1. line 11, char 3: Unnecessary directive &quot;use strict&quot;.
2. line 309, char 3: Unnecessary directive &quot;use strict&quot;.
3. line 516, char 6: Missing semicolon.
4. line 560, char 6: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabSpeedDial/fabSpeedDial.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 173: Expected an assignment or function call and instead saw an expression.
2. line 7, char 174: Missing semicolon.
3. line 7, char 258: Missing semicolon.
4. line 7, char 323: Missing semicolon.
5. line 7, char 328: Expected an assignment or function call and instead saw an expression.
6. line 7, char 329: Missing semicolon.
7. line 7, char 330: Expected an assignment or function call and instead saw an expression.
8. line 7, char 331: Missing semicolon.
9. line 7, char 416: Missing semicolon.
10. line 7, char 468: Expected an assignment or function call and instead saw an expression.
11. line 7, char 469: Missing semicolon.
12. line 7, char 506: Missing semicolon.
13. line 7, char 607: Expected an assignment or function call and instead saw an expression.
14. line 7, char 608: Missing semicolon.
15. line 7, char 684: Expected an assignment or function call and instead saw an expression.
16. line 7, char 824: Expected an assignment or function call and instead saw an expression.
17. line 7, char 825: Missing semicolon.
18. line 7, char 827: Missing semicolon.
19. line 7, char 953: Missing semicolon.
20. line 7, char 976: Expected an assignment or function call and instead saw an expression.
21. line 7, char 977: Missing semicolon.
22. line 7, char 1073: Missing semicolon.
23. line 7, char 1074: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1075: Missing semicolon.
25. line 7, char 1150: Expected an assignment or function call and instead saw an expression.
26. line 7, char 1151: Missing semicolon.
27. line 7, char 1281: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1282: Missing semicolon.
29. line 7, char 1542: Missing semicolon.
30. line 7, char 1565: Missing semicolon.
31. line 7, char 1586: Missing semicolon.
32. line 7, char 1772: Expected an assignment or function call and instead saw an expression.
33. line 7, char 1917: Expected an assignment or function call and instead saw an expression.
34. line 7, char 1918: Missing semicolon.
35. line 7, char 2073: Missing semicolon.
36. line 7, char 2077: Missing semicolon.
37. line 7, char 2121: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2122: Missing semicolon.
39. line 7, char 2166: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2167: Missing semicolon.
41. line 7, char 2211: Expected an assignment or function call and instead saw an expression.
42. line 7, char 2212: Missing semicolon.
43. line 7, char 2254: Expected an assignment or function call and instead saw an expression.
44. line 7, char 2255: Missing semicolon.
45. line 7, char 2309: Missing semicolon.
46. line 7, char 2363: Missing semicolon.
47. line 7, char 2423: Expected an assignment or function call and instead saw an expression.
48. line 7, char 2424: Missing semicolon.
49. line 7, char 2469: Missing semicolon.
50. line 7, char 2514: Missing semicolon.
51. line 7, char 2514: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabToolbar/fabToolbar.js">
		<failure message="4 JSHint Failures">
1. line 11, char 3: Unnecessary directive &quot;use strict&quot;.
2. line 157, char 68: Expected an assignment or function call and instead saw an expression.
3. line 185, char 68: Expected an assignment or function call and instead saw an expression.
4. line 205, char 6: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabToolbar/fabToolbar.min.js">
		<failure message="16 JSHint Failures">
1. line 7, char 199: Expected an assignment or function call and instead saw an expression.
2. line 7, char 200: Missing semicolon.
3. line 7, char 475: Missing semicolon.
4. line 7, char 1229: Missing semicolon.
5. line 7, char 1561: Missing semicolon.
6. line 7, char 1563: Expected an assignment or function call and instead saw an expression.
7. line 7, char 1564: Missing semicolon.
8. line 7, char 1610: Expected an assignment or function call and instead saw an expression.
9. line 7, char 1611: Missing semicolon.
10. line 7, char 1652: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1653: Missing semicolon.
12. line 7, char 1655: Missing semicolon.
13. line 7, char 1908: Missing semicolon.
14. line 7, char 1910: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1911: Missing semicolon.
16. line 7, char 1934: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabTrigger/fabTrigger.js">
		<failure message="1 JSHINT Failure">
1. line 11, char 3: Unnecessary directive &quot;use strict&quot;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/fabTrigger/fabTrigger.min.js">
		<failure message="5 JSHint Failures">
1. line 7, char 122: Missing semicolon.
2. line 7, char 211: Missing semicolon.
3. line 7, char 213: Expected an assignment or function call and instead saw an expression.
4. line 7, char 214: Missing semicolon.
5. line 7, char 237: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/gridList/gridList.js">
		<failure message="7 JSHint Failures">
1. line 156, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 205, char 18: Missing semicolon.
3. line 207, char 14: Missing semicolon.
4. line 319, char 15: &apos;vShare&apos; is already defined.
5. line 322, char 15: &apos;vUnit&apos; is already defined.
6. line 490, char 20: Did you mean to return a conditional instead of an assignment?
7. line 555, char 7: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/gridList/gridList.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 146: Expected an assignment or function call and instead saw an expression.
2. line 7, char 227: Missing semicolon.
3. line 7, char 267: Expected an assignment or function call and instead saw an expression.
4. line 7, char 330: Missing semicolon.
5. line 7, char 349: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 7, char 399: Expected an assignment or function call and instead saw an expression.
7. line 7, char 400: Missing semicolon.
8. line 7, char 774: Missing semicolon.
9. line 7, char 777: Missing semicolon.
10. line 7, char 844: Expected an assignment or function call and instead saw an expression.
11. line 7, char 845: Missing semicolon.
12. line 7, char 873: Missing semicolon.
13. line 7, char 1188: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1345: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1377: &apos;c&apos; is already defined.
16. line 7, char 1387: &apos;f&apos; is already defined.
17. line 7, char 1504: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1505: Missing semicolon.
19. line 7, char 1514: Missing semicolon.
20. line 7, char 1621: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1776: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1803: Missing semicolon.
23. line 7, char 1912: Missing semicolon.
24. line 7, char 1914: Missing semicolon.
25. line 7, char 2148: Missing semicolon.
26. line 7, char 2150: Missing semicolon.
27. line 7, char 2328: Missing semicolon.
28. line 7, char 2394: Missing semicolon.
29. line 7, char 2649: Missing semicolon.
30. line 7, char 2835: Missing semicolon.
31. line 7, char 2878: Missing semicolon.
32. line 7, char 2936: Expected an assignment or function call and instead saw an expression.
33. line 7, char 3251: Missing semicolon.
34. line 7, char 3315: Missing semicolon.
35. line 7, char 3330: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
36. line 7, char 3356: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
37. line 7, char 3381: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
38. line 7, char 3407: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
39. line 7, char 3429: Expected an assignment or function call and instead saw an expression.
40. line 7, char 3433: Missing semicolon.
41. line 7, char 3515: Missing semicolon.
42. line 7, char 3551: Missing semicolon.
43. line 7, char 3646: Missing semicolon.
44. line 7, char 3650: Missing semicolon.
45. line 7, char 3726: Missing semicolon.
46. line 7, char 3730: Missing semicolon.
47. line 7, char 3833: Missing semicolon.
48. line 7, char 3835: Missing semicolon.
49. line 7, char 3919: Missing semicolon.
50. line 7, char 3920: Expected an assignment or function call and instead saw an expression.
51. line 7, char 3920: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/icon/icon.js">
		<failure message="6 JSHint Failures">
1. line 828, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
2. line 862, char 23: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
3. line 862, char 37: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
4. line 868, char 18: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 872, char 8: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 881, char 12: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/icon/icon.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 193: Missing semicolon.
2. line 7, char 317: Expected an assignment or function call and instead saw an expression.
3. line 7, char 318: Missing semicolon.
4. line 7, char 326: Expected an assignment or function call and instead saw an expression.
5. line 7, char 715: Expected an assignment or function call and instead saw an expression.
6. line 7, char 716: Missing semicolon.
7. line 7, char 717: Expected an assignment or function call and instead saw an expression.
8. line 7, char 718: Missing semicolon.
9. line 7, char 719: Expected an assignment or function call and instead saw an expression.
10. line 7, char 720: Missing semicolon.
11. line 7, char 811: Missing semicolon.
12. line 7, char 839: Missing semicolon.
13. line 7, char 870: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
14. line 7, char 881: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
15. line 7, char 903: Expected an assignment or function call and instead saw an expression.
16. line 7, char 921: Missing semicolon.
17. line 7, char 1120: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1159: Missing semicolon.
19. line 7, char 1317: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1318: Missing semicolon.
21. line 7, char 1322: Missing semicolon.
22. line 7, char 1455: Missing semicolon.
23. line 7, char 1459: Missing semicolon.
24. line 7, char 1538: Missing semicolon.
25. line 7, char 1539: Missing semicolon.
26. line 7, char 1615: Missing semicolon.
27. line 7, char 1617: Missing semicolon.
28. line 7, char 1731: Missing semicolon.
29. line 7, char 1806: Missing semicolon.
30. line 7, char 1896: Missing semicolon.
31. line 7, char 2013: Missing semicolon.
32. line 7, char 2136: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2137: Missing semicolon.
34. line 7, char 2207: Missing semicolon.
35. line 7, char 2226: Missing semicolon.
36. line 7, char 2228: Missing semicolon.
37. line 7, char 2255: Missing semicolon.
38. line 7, char 2322: Missing semicolon.
39. line 7, char 2551: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2552: Missing semicolon.
41. line 7, char 2572: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
42. line 7, char 2584: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
43. line 7, char 2718: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
44. line 7, char 2829: Missing semicolon.
45. line 7, char 2831: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
46. line 7, char 2836: Missing semicolon.
47. line 7, char 2883: Missing semicolon.
48. line 7, char 3071: Missing semicolon.
49. line 7, char 5066: Expected an assignment or function call and instead saw an expression.
50. line 7, char 5240: Missing semicolon.
51. line 7, char 5240: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/input/input.js">
		<failure message="4 JSHint Failures">
1. line 857, char 44: Expected a conditional expression and instead saw an assignment.
2. line 919, char 4: Missing semicolon.
3. line 940, char 4: Missing semicolon.
4. line 987, char 22: Use &apos;===&apos; to compare with &apos;0&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/input/input.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 179: Expected an assignment or function call and instead saw an expression.
2. line 7, char 180: Missing semicolon.
3. line 7, char 207: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
4. line 7, char 298: Missing semicolon.
5. line 7, char 374: Missing semicolon.
6. line 7, char 441: Missing semicolon.
7. line 7, char 520: Missing semicolon.
8. line 7, char 616: Expected an assignment or function call and instead saw an expression.
9. line 7, char 617: Missing semicolon.
10. line 7, char 662: Missing semicolon.
11. line 7, char 738: Expected an assignment or function call and instead saw an expression.
12. line 7, char 739: Missing semicolon.
13. line 7, char 740: Expected an assignment or function call and instead saw an expression.
14. line 7, char 741: Missing semicolon.
15. line 7, char 864: Missing semicolon.
16. line 7, char 954: Missing semicolon.
17. line 7, char 1063: Missing semicolon.
18. line 7, char 1253: Missing semicolon.
19. line 7, char 1255: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1256: Missing semicolon.
21. line 7, char 1258: Missing semicolon.
22. line 7, char 1353: Missing semicolon.
23. line 7, char 1450: Missing semicolon.
24. line 7, char 1451: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1452: Missing semicolon.
26. line 7, char 1527: Missing semicolon.
27. line 7, char 1806: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1807: Missing semicolon.
29. line 7, char 1889: Expected an assignment or function call and instead saw an expression.
30. line 7, char 1890: Missing semicolon.
31. line 7, char 1966: Missing semicolon.
32. line 7, char 2003: Missing semicolon.
33. line 7, char 2166: Expected an assignment or function call and instead saw an expression.
34. line 7, char 2167: Missing semicolon.
35. line 7, char 2284: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2285: Missing semicolon.
37. line 7, char 2357: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2358: Missing semicolon.
39. line 7, char 2413: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2414: Missing semicolon.
41. line 7, char 2471: Expected an assignment or function call and instead saw an expression.
42. line 7, char 2472: Missing semicolon.
43. line 7, char 2866: Expected an assignment or function call and instead saw an expression.
44. line 7, char 2870: Missing semicolon.
45. line 7, char 2871: Expected an assignment or function call and instead saw an expression.
46. line 7, char 2872: Missing semicolon.
47. line 7, char 3073: Missing semicolon.
48. line 7, char 3300: Confusing use of &apos;!&apos;.
49. line 7, char 3308: Confusing use of &apos;!&apos;.
50. line 7, char 3318: Expected an assignment or function call and instead saw an expression.
51. line 7, char 3318: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/list/list.js">
		<failure message="6 JSHint Failures">
1. line 113, char 53: Expected a conditional expression and instead saw an assignment.
2. line 114, char 56: Expected a conditional expression and instead saw an assignment.
3. line 133, char 64: Expected a conditional expression and instead saw an assignment.
4. line 134, char 47: Expected a conditional expression and instead saw an assignment.
5. line 312, char 91: Expected an assignment or function call and instead saw an expression.
6. line 332, char 94: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/list/list.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 126: Missing semicolon.
2. line 7, char 128: Missing semicolon.
3. line 7, char 320: Expected a conditional expression and instead saw an assignment.
4. line 7, char 463: Missing semicolon.
5. line 7, char 604: Expected an assignment or function call and instead saw an expression.
6. line 7, char 918: Expected an assignment or function call and instead saw an expression.
7. line 7, char 919: Missing semicolon.
8. line 7, char 965: Expected an assignment or function call and instead saw an expression.
9. line 7, char 966: Missing semicolon.
10. line 7, char 1067: Missing semicolon.
11. line 7, char 1080: Expected an assignment or function call and instead saw an expression.
12. line 7, char 1081: Missing semicolon.
13. line 7, char 1290: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1291: Missing semicolon.
15. line 7, char 1405: Expected an assignment or function call and instead saw an expression.
16. line 7, char 1406: Missing semicolon.
17. line 7, char 1672: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1673: Missing semicolon.
19. line 7, char 1675: Missing semicolon.
20. line 7, char 1735: Missing semicolon.
21. line 7, char 1814: Missing semicolon.
22. line 7, char 1927: Missing semicolon.
23. line 7, char 2079: Missing semicolon.
24. line 7, char 2081: Missing semicolon.
25. line 7, char 2082: Expected an assignment or function call and instead saw an expression.
26. line 7, char 2083: Missing semicolon.
27. line 7, char 2210: Expected an assignment or function call and instead saw an expression.
28. line 7, char 2211: Missing semicolon.
29. line 7, char 2511: Missing semicolon.
30. line 7, char 2516: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2517: Missing semicolon.
32. line 7, char 2558: Confusing use of &apos;!&apos;.
33. line 7, char 2654: Expected an assignment or function call and instead saw an expression.
34. line 7, char 2655: Missing semicolon.
35. line 7, char 2656: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2657: Missing semicolon.
37. line 7, char 2658: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2659: Missing semicolon.
39. line 7, char 2660: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2869: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2870: Missing semicolon.
42. line 7, char 3172: Expected an assignment or function call and instead saw an expression.
43. line 7, char 3173: Missing semicolon.
44. line 7, char 3174: Expected an assignment or function call and instead saw an expression.
45. line 7, char 3175: Missing semicolon.
46. line 7, char 3243: Expected an assignment or function call and instead saw an expression.
47. line 7, char 3244: Missing semicolon.
48. line 7, char 3245: Expected an assignment or function call and instead saw an expression.
49. line 7, char 3246: Missing semicolon.
50. line 7, char 3445: Expected a conditional expression and instead saw an assignment.
51. line 7, char 3445: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/menu/menu.js">
		<failure message="16 JSHint Failures">
1. line 95, char 70: Expected an assignment or function call and instead saw an expression.
2. line 96, char 75: Expected an assignment or function call and instead saw an expression.
3. line 103, char 9: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
4. line 114, char 39: Expected an assignment or function call and instead saw an expression.
5. line 117, char 39: Expected an assignment or function call and instead saw an expression.
6. line 121, char 46: Expected an assignment or function call and instead saw an expression.
7. line 136, char 30: Expected an assignment or function call and instead saw an expression.
8. line 137, char 29: Expected an assignment or function call and instead saw an expression.
9. line 189, char 50: Expected an assignment or function call and instead saw an expression.
10. line 450, char 74: Expected an assignment or function call and instead saw an expression.
11. line 468, char 32: Use &apos;!==&apos; to compare with &apos;undefined&apos;.
12. line 685, char 10: Missing semicolon.
13. line 715, char 42: Expected an assignment or function call and instead saw an expression.
14. line 794, char 46: Expected a conditional expression and instead saw an assignment.
15. line 794, char 47: Missing semicolon.
16. line 805, char 50: Expected a conditional expression and instead saw an assignment.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/menu/menu.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 84: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
2. line 7, char 89: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
3. line 7, char 134: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
4. line 7, char 486: Missing semicolon.
5. line 7, char 487: Expected an assignment or function call and instead saw an expression.
6. line 7, char 488: Missing semicolon.
7. line 7, char 540: Missing semicolon.
8. line 7, char 541: Expected an assignment or function call and instead saw an expression.
9. line 7, char 734: Missing semicolon.
10. line 7, char 735: Expected an assignment or function call and instead saw an expression.
11. line 7, char 736: Missing semicolon.
12. line 7, char 736: Expected an assignment or function call and instead saw an expression.
13. line 7, char 751: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
14. line 7, char 990: Expected an assignment or function call and instead saw an expression.
15. line 7, char 991: Missing semicolon.
16. line 7, char 1080: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1081: Missing semicolon.
18. line 7, char 1225: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1226: Missing semicolon.
20. line 7, char 1228: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
21. line 7, char 1385: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1386: Missing semicolon.
23. line 7, char 1388: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
24. line 7, char 1722: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1723: Missing semicolon.
26. line 7, char 1786: Expected an assignment or function call and instead saw an expression.
27. line 7, char 1787: Missing semicolon.
28. line 7, char 1877: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1878: Missing semicolon.
30. line 7, char 1881: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
31. line 7, char 1941: Expected an assignment or function call and instead saw an expression.
32. line 7, char 1942: Missing semicolon.
33. line 7, char 1944: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
34. line 7, char 2107: Missing semicolon.
35. line 7, char 2387: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2388: Missing semicolon.
37. line 7, char 2390: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2391: Missing semicolon.
39. line 7, char 2407: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
40. line 7, char 2417: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
41. line 7, char 2580: Missing semicolon.
42. line 7, char 2667: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2673: Missing semicolon.
44. line 7, char 2675: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
45. line 7, char 2841: Expected an assignment or function call and instead saw an expression.
46. line 7, char 2842: Missing semicolon.
47. line 7, char 2844: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
48. line 7, char 2905: Missing semicolon.
49. line 7, char 2907: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
50. line 7, char 2988: Expected an assignment or function call and instead saw an expression.
51. line 7, char 2988: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/menuBar/menuBar.js">
		<failure message="6 JSHint Failures">
1. line 108, char 41: Expected a conditional expression and instead saw an assignment.
2. line 130, char 41: Expected a conditional expression and instead saw an assignment.
3. line 176, char 40: Expected an assignment or function call and instead saw an expression.
4. line 197, char 47: Expected an assignment or function call and instead saw an expression.
5. line 198, char 67: Expected an assignment or function call and instead saw an expression.
6. line 226, char 59: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/menuBar/menuBar.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 59: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
2. line 7, char 75: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
3. line 7, char 89: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
4. line 7, char 108: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 7, char 123: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 7, char 140: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
7. line 7, char 154: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
8. line 7, char 172: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
9. line 7, char 186: Expected an assignment or function call and instead saw an expression.
10. line 7, char 194: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
11. line 7, char 242: Missing semicolon.
12. line 7, char 244: Missing semicolon.
13. line 7, char 616: Expected an assignment or function call and instead saw an expression.
14. line 7, char 816: Expected an assignment or function call and instead saw an expression.
15. line 7, char 817: Missing semicolon.
16. line 7, char 819: Missing semicolon.
17. line 7, char 873: Expected an assignment or function call and instead saw an expression.
18. line 7, char 874: Missing semicolon.
19. line 7, char 875: Missing semicolon.
20. line 7, char 877: Missing semicolon.
21. line 7, char 977: Expected an assignment or function call and instead saw an expression.
22. line 7, char 978: Missing semicolon.
23. line 7, char 980: Missing semicolon.
24. line 7, char 999: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
25. line 7, char 1015: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
26. line 7, char 1029: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
27. line 7, char 1041: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1042: Missing semicolon.
29. line 7, char 1228: Expected an assignment or function call and instead saw an expression.
30. line 7, char 1229: Missing semicolon.
31. line 7, char 1341: Expected an assignment or function call and instead saw an expression.
32. line 7, char 1342: Missing semicolon.
33. line 7, char 1397: Missing semicolon.
34. line 7, char 1832: Expected an assignment or function call and instead saw an expression.
35. line 7, char 1833: Missing semicolon.
36. line 7, char 1886: Missing semicolon.
37. line 7, char 1887: Missing semicolon.
38. line 7, char 1921: Missing semicolon.
39. line 7, char 2079: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2718: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2719: Missing semicolon.
42. line 7, char 3115: Expected an assignment or function call and instead saw an expression.
43. line 7, char 3116: Missing semicolon.
44. line 7, char 3175: Missing semicolon.
45. line 7, char 3201: Expected an assignment or function call and instead saw an expression.
46. line 7, char 3202: Missing semicolon.
47. line 7, char 3351: Expected an assignment or function call and instead saw an expression.
48. line 7, char 3352: Missing semicolon.
49. line 7, char 3642: Expected an assignment or function call and instead saw an expression.
50. line 7, char 3643: Missing semicolon.
51. line 7, char 3643: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/navBar/navBar.js">
		<failure message="9 JSHint Failures">
1. line 164, char 8: Expected an assignment or function call and instead saw an expression.
2. line 167, char 8: Expected an assignment or function call and instead saw an expression.
3. line 175, char 8: Expected an assignment or function call and instead saw an expression.
4. line 267, char 55: Missing semicolon.
5. line 290, char 28: Missing semicolon.
6. line 300, char 26: Missing semicolon.
7. line 463, char 8: Expected an assignment or function call and instead saw an expression.
8. line 465, char 8: Expected an assignment or function call and instead saw an expression.
9. line 467, char 8: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/navBar/navBar.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 573: Expected an assignment or function call and instead saw an expression.
2. line 7, char 574: Missing semicolon.
3. line 7, char 576: Missing semicolon.
4. line 7, char 597: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 7, char 614: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 7, char 629: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
7. line 7, char 649: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
8. line 7, char 672: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
9. line 7, char 693: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
10. line 7, char 713: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
11. line 7, char 718: Expected an assignment or function call and instead saw an expression.
12. line 7, char 732: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
13. line 7, char 739: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
14. line 7, char 831: Missing semicolon.
15. line 7, char 868: Expected an assignment or function call and instead saw an expression.
16. line 7, char 869: Missing semicolon.
17. line 7, char 871: Missing semicolon.
18. line 7, char 1930: Expected an assignment or function call and instead saw an expression.
19. line 7, char 2047: Expected an assignment or function call and instead saw an expression.
20. line 7, char 2048: Missing semicolon.
21. line 7, char 2050: Missing semicolon.
22. line 7, char 2052: Missing semicolon.
23. line 7, char 2054: Missing semicolon.
24. line 7, char 2069: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
25. line 7, char 2086: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
26. line 7, char 2102: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
27. line 7, char 2117: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
28. line 7, char 2127: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
29. line 7, char 2145: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
30. line 7, char 2160: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2378: Missing semicolon.
32. line 7, char 2822: Missing semicolon.
33. line 7, char 2925: Missing semicolon.
34. line 7, char 2927: Missing semicolon.
35. line 7, char 2928: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2929: Missing semicolon.
37. line 7, char 3063: Expected an assignment or function call and instead saw an expression.
38. line 7, char 3064: Missing semicolon.
39. line 7, char 3203: Missing semicolon.
40. line 7, char 3205: Missing semicolon.
41. line 7, char 3419: Expected an assignment or function call and instead saw an expression.
42. line 7, char 3420: Missing semicolon.
43. line 7, char 3604: Missing semicolon.
44. line 7, char 3606: Missing semicolon.
45. line 7, char 3700: Missing semicolon.
46. line 7, char 3702: Missing semicolon.
47. line 7, char 3797: Missing semicolon.
48. line 7, char 3799: Missing semicolon.
49. line 7, char 3890: Missing semicolon.
50. line 7, char 3892: Missing semicolon.
51. line 7, char 3892: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/panel/panel.js">
		<failure message="48 JSHint Failures">
1. line 825, char 8: Expected an assignment or function call and instead saw an expression.
2. line 828, char 8: Expected an assignment or function call and instead saw an expression.
3. line 834, char 8: Expected an assignment or function call and instead saw an expression.
4. line 837, char 8: Expected an assignment or function call and instead saw an expression.
5. line 840, char 8: Expected an assignment or function call and instead saw an expression.
6. line 903, char 34: [&apos;onDomAdded&apos;] is better written in dot notation.
7. line 934, char 34: [&apos;onDomRemoved&apos;] is better written in dot notation.
8. line 1005, char 38: [&apos;onOpenComplete&apos;] is better written in dot notation.
9. line 1038, char 34: [&apos;onRemoving&apos;] is better written in dot notation.
10. line 1041, char 32: [&apos;origin&apos;] is better written in dot notation.
11. line 1127, char 63: [&apos;scope&apos;] is better written in dot notation.
12. line 1128, char 34: [&apos;attachTo&apos;] is better written in dot notation.
13. line 1130, char 27: [&apos;disableParentScroll&apos;] is better written in dot notation.
14. line 1139, char 27: [&apos;panelClass&apos;] is better written in dot notation.
15. line 1140, char 48: [&apos;panelClass&apos;] is better written in dot notation.
16. line 1147, char 40: [&apos;attachTo&apos;] is better written in dot notation.
17. line 1167, char 53: [&apos;zIndex&apos;] is better written in dot notation.
18. line 1168, char 46: [&apos;zIndex&apos;] is better written in dot notation.
19. line 1177, char 21: [&apos;fullscreen&apos;] is better written in dot notation.
20. line 1183, char 38: [&apos;position&apos;] is better written in dot notation.
21. line 1192, char 21: [&apos;$$postDigest&apos;] is better written in dot notation.
22. line 1206, char 36: [&apos;position&apos;] is better written in dot notation.
23. line 1233, char 19: [&apos;focusOnOpen&apos;] is better written in dot notation.
24. line 1238, char 21: [&apos;$$postDigest&apos;] is better written in dot notation.
25. line 1296, char 4: Expected an assignment or function call and instead saw an expression.
26. line 1306, char 19: [&apos;escapeToClose&apos;] is better written in dot notation.
27. line 1307, char 47: [&apos;attachTo&apos;] is better written in dot notation.
28. line 1337, char 19: [&apos;clickOutsideToClose&apos;] is better written in dot notation.
29. line 1385, char 22: [&apos;disableParentScroll&apos;] is better written in dot notation.
30. line 1408, char 19: [&apos;trapFocus&apos;] is better written in dot notation.
31. line 1445, char 37: [&apos;animation&apos;] is better written in dot notation.
32. line 1473, char 37: [&apos;animation&apos;] is better written in dot notation.
33. line 1554, char 8: Expected an assignment or function call and instead saw an expression.
34. line 1578, char 8: Expected an assignment or function call and instead saw an expression.
35. line 1749, char 17: Use &apos;===&apos; to compare with &apos;null&apos;.
36. line 1755, char 45: Expected a conditional expression and instead saw an assignment.
37. line 1775, char 17: Use &apos;===&apos; to compare with &apos;null&apos;.
38. line 1781, char 45: Expected a conditional expression and instead saw an assignment.
39. line 2042, char 8: Expected an assignment or function call and instead saw an expression.
40. line 2048, char 8: Expected an assignment or function call and instead saw an expression.
41. line 2197, char 50: [&apos;open&apos;] is better written in dot notation.
42. line 2198, char 51: [&apos;close&apos;] is better written in dot notation.
43. line 2262, char 50: [&apos;close&apos;] is better written in dot notation.
44. line 2263, char 51: [&apos;open&apos;] is better written in dot notation.
45. line 2285, char 54: Use &apos;===&apos; to compare with &apos;null&apos;.
46. line 2288, char 53: Use &apos;===&apos; to compare with &apos;null&apos;.
47. line 2291, char 52: Use &apos;===&apos; to compare with &apos;null&apos;.
48. line 2294, char 51: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/panel/panel.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 51: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
2. line 7, char 231: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
3. line 7, char 236: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
4. line 7, char 279: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 7, char 295: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 7, char 316: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
7. line 7, char 335: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
8. line 7, char 353: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
9. line 7, char 369: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
10. line 7, char 396: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
11. line 7, char 423: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
12. line 7, char 440: Expected an assignment or function call and instead saw an expression.
13. line 7, char 449: Missing semicolon.
14. line 7, char 466: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
15. line 7, char 487: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
16. line 7, char 526: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
17. line 7, char 565: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
18. line 7, char 596: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
19. line 7, char 633: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
20. line 7, char 666: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
21. line 7, char 699: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
22. line 7, char 724: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
23. line 7, char 755: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
24. line 7, char 782: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
25. line 7, char 795: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
26. line 7, char 814: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
27. line 7, char 829: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
28. line 7, char 850: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
29. line 7, char 864: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
30. line 7, char 889: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
31. line 7, char 908: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
32. line 7, char 930: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
33. line 7, char 948: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
34. line 7, char 968: Expected an assignment or function call and instead saw an expression.
35. line 7, char 972: Missing semicolon.
36. line 7, char 987: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
37. line 7, char 1003: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
38. line 7, char 1021: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
39. line 7, char 1040: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
40. line 7, char 1053: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
41. line 7, char 1069: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
42. line 7, char 1083: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
43. line 7, char 1098: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
44. line 7, char 1118: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
45. line 7, char 1138: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
46. line 7, char 1157: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
47. line 7, char 1162: Expected an assignment or function call and instead saw an expression.
48. line 7, char 1177: Missing semicolon.
49. line 7, char 1192: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
50. line 7, char 1223: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
51. line 7, char 1223: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/progressCircular/progressCircular.js" />
	<testcase name="client/bower_components/angular-material/modules/js/progressCircular/progressCircular.min.js">
		<failure message="40 JSHint Failures">
1. line 7, char 325: Expected an assignment or function call and instead saw an expression.
2. line 7, char 326: Missing semicolon.
3. line 7, char 327: Expected an assignment or function call and instead saw an expression.
4. line 7, char 328: Missing semicolon.
5. line 7, char 405: Expected an assignment or function call and instead saw an expression.
6. line 7, char 425: Expected an assignment or function call and instead saw an expression.
7. line 7, char 426: Missing semicolon.
8. line 7, char 528: Expected an assignment or function call and instead saw an expression.
9. line 7, char 529: Missing semicolon.
10. line 7, char 582: Expected an assignment or function call and instead saw an expression.
11. line 7, char 583: Missing semicolon.
12. line 7, char 831: Expected an assignment or function call and instead saw an expression.
13. line 7, char 832: Missing semicolon.
14. line 7, char 906: Confusing use of &apos;!&apos;.
15. line 7, char 914: Confusing use of &apos;!&apos;.
16. line 7, char 950: Missing semicolon.
17. line 7, char 1146: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1147: Missing semicolon.
19. line 7, char 1372: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1373: Missing semicolon.
21. line 7, char 1374: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1375: Missing semicolon.
23. line 7, char 1549: Missing semicolon.
24. line 7, char 1631: Missing semicolon.
25. line 7, char 1687: Missing semicolon.
26. line 7, char 1802: Missing semicolon.
27. line 7, char 1811: Missing semicolon.
28. line 7, char 1852: Missing semicolon.
29. line 7, char 2347: Missing semicolon.
30. line 7, char 2394: Missing semicolon.
31. line 7, char 2396: Missing semicolon.
32. line 7, char 2444: Missing semicolon.
33. line 7, char 2517: Missing semicolon.
34. line 7, char 2750: Did you mean to return a conditional instead of an assignment?
35. line 7, char 2767: Missing semicolon.
36. line 7, char 2793: Missing semicolon.
37. line 7, char 2795: Missing semicolon.
38. line 7, char 3113: Expected an assignment or function call and instead saw an expression.
39. line 7, char 3114: Missing semicolon.
40. line 7, char 3137: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/progressLinear/progressLinear.js" />
	<testcase name="client/bower_components/angular-material/modules/js/progressLinear/progressLinear.min.js">
		<failure message="23 JSHint Failures">
1. line 7, char 158: Missing semicolon.
2. line 7, char 271: Expected an assignment or function call and instead saw an expression.
3. line 7, char 272: Missing semicolon.
4. line 7, char 323: Missing semicolon.
5. line 7, char 366: Confusing use of &apos;!&apos;.
6. line 7, char 374: Confusing use of &apos;!&apos;.
7. line 7, char 413: Expected an assignment or function call and instead saw an expression.
8. line 7, char 414: Missing semicolon.
9. line 7, char 576: Missing semicolon.
10. line 7, char 578: Expected an assignment or function call and instead saw an expression.
11. line 7, char 579: Missing semicolon.
12. line 7, char 685: Expected an assignment or function call and instead saw an expression.
13. line 7, char 686: Missing semicolon.
14. line 7, char 789: Missing semicolon.
15. line 7, char 798: Missing semicolon.
16. line 7, char 933: Missing semicolon.
17. line 7, char 1185: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1186: Missing semicolon.
19. line 7, char 1238: Missing semicolon.
20. line 7, char 1508: Missing semicolon.
21. line 7, char 1646: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1647: Missing semicolon.
23. line 7, char 1670: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/radioButton/radioButton.js" />
	<testcase name="client/bower_components/angular-material/modules/js/radioButton/radioButton.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 133: Expected an assignment or function call and instead saw an expression.
2. line 7, char 134: Missing semicolon.
3. line 7, char 326: Expected an assignment or function call and instead saw an expression.
4. line 7, char 425: Expected an assignment or function call and instead saw an expression.
5. line 7, char 535: Expected an assignment or function call and instead saw an expression.
6. line 7, char 536: Missing semicolon.
7. line 7, char 559: Expected an assignment or function call and instead saw an expression.
8. line 7, char 773: Missing semicolon.
9. line 7, char 778: Expected an assignment or function call and instead saw an expression.
10. line 7, char 779: Missing semicolon.
11. line 7, char 820: Confusing use of &apos;!&apos;.
12. line 7, char 856: Expected an assignment or function call and instead saw an expression.
13. line 7, char 857: Missing semicolon.
14. line 7, char 917: Missing semicolon.
15. line 7, char 918: Expected an assignment or function call and instead saw an expression.
16. line 7, char 919: Missing semicolon.
17. line 7, char 934: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
18. line 7, char 964: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
19. line 7, char 978: Expected an assignment or function call and instead saw an expression.
20. line 7, char 979: Missing semicolon.
21. line 7, char 1086: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1087: Missing semicolon.
23. line 7, char 1139: Missing semicolon.
24. line 7, char 1249: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1250: Missing semicolon.
26. line 7, char 1320: Missing semicolon.
27. line 7, char 1322: Missing semicolon.
28. line 7, char 1400: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1401: Missing semicolon.
30. line 7, char 1462: Missing semicolon.
31. line 7, char 1511: Missing semicolon.
32. line 7, char 1565: Missing semicolon.
33. line 7, char 1644: Missing semicolon.
34. line 7, char 1646: Missing semicolon.
35. line 7, char 1793: Missing semicolon.
36. line 7, char 1925: Missing semicolon.
37. line 7, char 2039: Missing semicolon.
38. line 7, char 2220: Missing semicolon.
39. line 7, char 2221: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2222: Missing semicolon.
41. line 7, char 2321: Missing semicolon.
42. line 7, char 2322: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2323: Missing semicolon.
44. line 7, char 2433: Expected an assignment or function call and instead saw an expression.
45. line 7, char 2434: Missing semicolon.
46. line 7, char 2588: Expected an assignment or function call and instead saw an expression.
47. line 7, char 2589: Missing semicolon.
48. line 7, char 2652: Missing semicolon.
49. line 7, char 2755: Expected an assignment or function call and instead saw an expression.
50. line 7, char 2756: Missing semicolon.
51. line 7, char 2756: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/select/select.js">
		<failure message="9 JSHint Failures">
1. line 361, char 58: Expected an assignment or function call and instead saw an expression.
2. line 492, char 134: Expected an assignment or function call and instead saw an expression.
3. line 672, char 60: Expected an assignment or function call and instead saw an expression.
4. line 753, char 40: Expected an assignment or function call and instead saw an expression.
5. line 758, char 41: Expected an assignment or function call and instead saw an expression.
6. line 1244, char 67: Expected an assignment or function call and instead saw an expression.
7. line 1252, char 70: Expected an assignment or function call and instead saw an expression.
8. line 1304, char 42: Expected an assignment or function call and instead saw an expression.
9. line 1328, char 40: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/select/select.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 1048: Expected an assignment or function call and instead saw an expression.
2. line 7, char 1049: Missing semicolon.
3. line 7, char 1071: Expected an assignment or function call and instead saw an expression.
4. line 7, char 1072: Missing semicolon.
5. line 7, char 1488: Expected an assignment or function call and instead saw an expression.
6. line 7, char 1489: Missing semicolon.
7. line 7, char 1598: Expected an assignment or function call and instead saw an expression.
8. line 7, char 1599: Missing semicolon.
9. line 7, char 1697: Missing semicolon.
10. line 7, char 1786: Expected an assignment or function call and instead saw an expression.
11. line 7, char 1787: Missing semicolon.
12. line 7, char 1974: Missing semicolon.
13. line 7, char 2086: Missing semicolon.
14. line 7, char 2087: Expected an assignment or function call and instead saw an expression.
15. line 7, char 2088: Missing semicolon.
16. line 7, char 2173: Expected an assignment or function call and instead saw an expression.
17. line 7, char 2423: Expected an assignment or function call and instead saw an expression.
18. line 7, char 2424: Missing semicolon.
19. line 7, char 2742: Expected an assignment or function call and instead saw an expression.
20. line 7, char 2743: Missing semicolon.
21. line 7, char 2744: Expected an assignment or function call and instead saw an expression.
22. line 7, char 2745: Missing semicolon.
23. line 7, char 2952: Missing semicolon.
24. line 7, char 3219: Expected an assignment or function call and instead saw an expression.
25. line 7, char 3220: Missing semicolon.
26. line 7, char 3402: Expected an assignment or function call and instead saw an expression.
27. line 7, char 3403: Missing semicolon.
28. line 7, char 3405: Missing semicolon.
29. line 7, char 3508: Expected an assignment or function call and instead saw an expression.
30. line 7, char 3509: Missing semicolon.
31. line 7, char 3510: Expected an assignment or function call and instead saw an expression.
32. line 7, char 3563: Expected an assignment or function call and instead saw an expression.
33. line 7, char 3564: Missing semicolon.
34. line 7, char 3688: Missing semicolon.
35. line 7, char 3853: Missing semicolon.
36. line 7, char 3888: Missing semicolon.
37. line 7, char 4101: Expected an assignment or function call and instead saw an expression.
38. line 7, char 4102: Missing semicolon.
39. line 7, char 4193: Expected an assignment or function call and instead saw an expression.
40. line 7, char 4194: Missing semicolon.
41. line 7, char 4304: Expected an assignment or function call and instead saw an expression.
42. line 7, char 4305: Missing semicolon.
43. line 7, char 4352: Missing semicolon.
44. line 7, char 4390: Expected an assignment or function call and instead saw an expression.
45. line 7, char 4391: Missing semicolon.
46. line 7, char 4439: Missing semicolon.
47. line 7, char 4442: Expected an assignment or function call and instead saw an expression.
48. line 7, char 4491: Expected an assignment or function call and instead saw an expression.
49. line 7, char 4537: Missing semicolon.
50. line 7, char 4741: Expected an assignment or function call and instead saw an expression.
51. line 7, char 4741: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/showHide/showHide.js">
		<failure message="1 JSHINT Failure">
1. line 37, char 17: Confusing use of &apos;!&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/showHide/showHide.min.js">
		<failure message="10 JSHint Failures">
1. line 7, char 240: Confusing use of &apos;!&apos;.
2. line 7, char 297: Missing semicolon.
3. line 7, char 413: Missing semicolon.
4. line 7, char 415: Missing semicolon.
5. line 7, char 418: Missing semicolon.
6. line 7, char 420: Missing semicolon.
7. line 7, char 422: Missing semicolon.
8. line 7, char 424: Missing semicolon.
9. line 7, char 553: Missing semicolon.
10. line 7, char 576: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/sidenav/sidenav.js">
		<failure message="7 JSHint Failures">
1. line 295, char 35: Expected an assignment or function call and instead saw an expression.
2. line 300, char 35: Expected an assignment or function call and instead saw an expression.
3. line 354, char 36: Expected an assignment or function call and instead saw an expression.
4. line 358, char 50: Expected an assignment or function call and instead saw an expression.
5. line 347, char 23: Did you mean to return a conditional instead of an assignment?
6. line 400, char 10: Missing semicolon.
7. line 445, char 62: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/sidenav/sidenav.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 92: Missing semicolon.
2. line 7, char 143: Missing semicolon.
3. line 7, char 254: Missing semicolon.
4. line 7, char 259: Missing semicolon.
5. line 7, char 339: Missing semicolon.
6. line 7, char 388: Missing semicolon.
7. line 7, char 545: Confusing use of &apos;!&apos;.
8. line 7, char 616: Missing semicolon.
9. line 7, char 617: Missing semicolon.
10. line 7, char 697: Missing semicolon.
11. line 7, char 915: Expected an assignment or function call and instead saw an expression.
12. line 7, char 916: Missing semicolon.
13. line 7, char 1074: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1270: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1271: Missing semicolon.
16. line 7, char 1273: Missing semicolon.
17. line 7, char 1473: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1474: Missing semicolon.
19. line 7, char 1632: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1636: Missing semicolon.
21. line 7, char 1644: Missing semicolon.
22. line 7, char 1771: Expected an assignment or function call and instead saw an expression.
23. line 7, char 1772: Missing semicolon.
24. line 7, char 1918: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1919: Missing semicolon.
26. line 7, char 1921: Missing semicolon.
27. line 7, char 1922: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1923: Missing semicolon.
29. line 7, char 1925: Missing semicolon.
30. line 7, char 2000: Missing semicolon.
31. line 7, char 2050: Missing semicolon.
32. line 7, char 2239: Missing semicolon.
33. line 7, char 2253: Missing semicolon.
34. line 7, char 2447: Expected an assignment or function call and instead saw an expression.
35. line 7, char 2448: Missing semicolon.
36. line 7, char 2491: Expected an assignment or function call and instead saw an expression.
37. line 7, char 2492: Missing semicolon.
38. line 7, char 2544: Expected an assignment or function call and instead saw an expression.
39. line 7, char 2545: Missing semicolon.
40. line 7, char 2705: Missing semicolon.
41. line 7, char 2707: Missing semicolon.
42. line 7, char 2736: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
43. line 7, char 2777: Missing semicolon.
44. line 7, char 2827: Missing semicolon.
45. line 7, char 2871: Missing semicolon.
46. line 7, char 2916: Missing semicolon.
47. line 7, char 2969: Missing semicolon.
48. line 7, char 3022: Missing semicolon.
49. line 7, char 3062: Expected an assignment or function call and instead saw an expression.
50. line 7, char 3063: Missing semicolon.
51. line 7, char 3063: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/slider/slider.js">
		<failure message="4 JSHint Failures">
1. line 225, char 80: Expected an assignment or function call and instead saw an expression.
2. line 226, char 82: Expected an assignment or function call and instead saw an expression.
3. line 227, char 83: Expected an assignment or function call and instead saw an expression.
4. line 228, char 99: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/slider/slider.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 325: Expected an assignment or function call and instead saw an expression.
2. line 7, char 326: Missing semicolon.
3. line 7, char 430: Missing semicolon.
4. line 7, char 465: Missing semicolon.
5. line 7, char 466: Expected an assignment or function call and instead saw an expression.
6. line 7, char 717: Missing semicolon.
7. line 7, char 719: Missing semicolon.
8. line 7, char 720: Missing semicolon.
9. line 7, char 723: Missing semicolon.
10. line 7, char 983: Missing semicolon.
11. line 7, char 1023: Expected an assignment or function call and instead saw an expression.
12. line 7, char 1024: Missing semicolon.
13. line 7, char 1084: Expected an assignment or function call and instead saw an expression.
14. line 7, char 1085: Missing semicolon.
15. line 7, char 1145: Expected an assignment or function call and instead saw an expression.
16. line 7, char 1146: Missing semicolon.
17. line 7, char 1177: Missing semicolon.
18. line 7, char 1213: Missing semicolon.
19. line 7, char 1256: Missing semicolon.
20. line 7, char 1403: Missing semicolon.
21. line 7, char 1403: Expected an identifier and instead saw &apos;,&apos;.
22. line 7, char 1404: Expected an operator and instead saw &apos;new&apos;.
23. line 7, char 1404: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1407: Missing semicolon.
25. line 7, char 1416: Missing semicolon.
26. line 7, char 1541: Expected an assignment or function call and instead saw an expression.
27. line 7, char 1622: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1812: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1813: Missing semicolon.
30. line 7, char 1884: Missing semicolon.
31. line 7, char 1930: Missing semicolon.
32. line 7, char 1958: Missing semicolon.
33. line 7, char 2282: Missing semicolon.
34. line 7, char 2284: Expected an assignment or function call and instead saw an expression.
35. line 7, char 2285: Missing semicolon.
36. line 7, char 2379: Missing semicolon.
37. line 7, char 2384: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2385: Missing semicolon.
39. line 7, char 2415: Confusing use of &apos;!&apos;.
40. line 7, char 2443: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2444: Missing semicolon.
42. line 7, char 2517: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2518: Missing semicolon.
44. line 7, char 2557: Missing semicolon.
45. line 7, char 2648: Expected an assignment or function call and instead saw an expression.
46. line 7, char 2759: Expected an assignment or function call and instead saw an expression.
47. line 7, char 2760: Missing semicolon.
48. line 7, char 2876: Missing semicolon.
49. line 7, char 3100: Missing semicolon.
50. line 7, char 3110: Missing semicolon.
51. line 7, char 3110: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/sticky/sticky.js">
		<failure message="1 JSHINT Failure">
1. line 126, char 18: Did you mean to return a conditional instead of an assignment?
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/sticky/sticky.min.js">
		<failure message="40 JSHint Failures">
1. line 7, char 203: Missing semicolon.
2. line 7, char 309: Expected an assignment or function call and instead saw an expression.
3. line 7, char 310: Missing semicolon.
4. line 7, char 315: Expected an assignment or function call and instead saw an expression.
5. line 7, char 316: Missing semicolon.
6. line 7, char 317: Missing semicolon.
7. line 7, char 408: Missing semicolon.
8. line 7, char 409: Expected an assignment or function call and instead saw an expression.
9. line 7, char 510: Missing semicolon.
10. line 7, char 515: Missing semicolon.
11. line 7, char 718: Expected an assignment or function call and instead saw an expression.
12. line 7, char 884: Expected an assignment or function call and instead saw an expression.
13. line 7, char 885: Missing semicolon.
14. line 7, char 1155: Missing semicolon.
15. line 7, char 1334: Missing semicolon.
16. line 7, char 1359: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1360: Missing semicolon.
18. line 7, char 1469: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1568: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1569: Missing semicolon.
21. line 7, char 1774: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1775: Missing semicolon.
23. line 7, char 1986: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1987: Missing semicolon.
25. line 7, char 2065: Expected an assignment or function call and instead saw an expression.
26. line 7, char 2082: Did you mean to return a conditional instead of an assignment?
27. line 7, char 2149: Missing semicolon.
28. line 7, char 2357: Missing semicolon.
29. line 7, char 2377: Missing semicolon.
30. line 7, char 2498: Expected an assignment or function call and instead saw an expression.
31. line 7, char 2499: Missing semicolon.
32. line 7, char 2643: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2644: Missing semicolon.
34. line 7, char 2646: Missing semicolon.
35. line 7, char 2839: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2898: Missing semicolon.
37. line 7, char 2900: Missing semicolon.
38. line 7, char 3076: Expected an assignment or function call and instead saw an expression.
39. line 7, char 3077: Missing semicolon.
40. line 7, char 3100: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/subheader/subheader.js">
		<failure message="1 JSHINT Failure">
1. line 103, char 4: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/subheader/subheader.min.js">
		<failure message="11 JSHint Failures">
1. line 7, char 333: Missing semicolon.
2. line 7, char 355: Expected an assignment or function call and instead saw an expression.
3. line 7, char 408: Missing semicolon.
4. line 7, char 543: Expected an assignment or function call and instead saw an expression.
5. line 7, char 544: Missing semicolon.
6. line 7, char 545: Expected an assignment or function call and instead saw an expression.
7. line 7, char 546: Missing semicolon.
8. line 7, char 548: Missing semicolon.
9. line 7, char 721: Expected an assignment or function call and instead saw an expression.
10. line 7, char 722: Missing semicolon.
11. line 7, char 745: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/swipe/swipe.js" />
	<testcase name="client/bower_components/angular-material/modules/js/swipe/swipe.min.js">
		<failure message="7 JSHint Failures">
1. line 7, char 150: Missing semicolon.
2. line 7, char 152: Missing semicolon.
3. line 7, char 154: Missing semicolon.
4. line 7, char 182: Missing semicolon.
5. line 7, char 250: Missing semicolon.
6. line 7, char 464: Missing semicolon.
7. line 7, char 487: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/switch/switch.js">
		<failure message="2 JSHint Failures">
1. line 86, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 128, char 51: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/switch/switch.min.js">
		<failure message="25 JSHint Failures">
1. line 7, char 246: Expected an assignment or function call and instead saw an expression.
2. line 7, char 247: Missing semicolon.
3. line 7, char 326: Expected an assignment or function call and instead saw an expression.
4. line 7, char 476: Expected an assignment or function call and instead saw an expression.
5. line 7, char 477: Missing semicolon.
6. line 7, char 573: Expected an assignment or function call and instead saw an expression.
7. line 7, char 608: A leading decimal point can be confused with a dot: &apos;.5&apos;.
8. line 7, char 623: A leading decimal point can be confused with a dot: &apos;.5&apos;.
9. line 7, char 646: Expected an assignment or function call and instead saw an expression.
10. line 7, char 650: Missing semicolon.
11. line 7, char 715: Expected an assignment or function call and instead saw an expression.
12. line 7, char 716: Missing semicolon.
13. line 7, char 718: Missing semicolon.
14. line 7, char 755: Use &apos;!==&apos; to compare with &apos;null&apos;.
15. line 7, char 789: Missing semicolon.
16. line 7, char 823: Expected an assignment or function call and instead saw an expression.
17. line 7, char 977: Missing semicolon.
18. line 7, char 1042: Missing semicolon.
19. line 7, char 1125: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1132: Missing semicolon.
21. line 7, char 1133: Missing semicolon.
22. line 7, char 1441: Missing semicolon.
23. line 7, char 1640: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1641: Missing semicolon.
25. line 7, char 1664: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/tabs/tabs.js">
		<failure message="13 JSHint Failures">
1. line 101, char 24: Use &apos;===&apos; to compare with &apos;0&apos;.
2. line 106, char 25: Use &apos;===&apos; to compare with &apos;0&apos;.
3. line 204, char 4: Missing semicolon.
4. line 293, char 87: Expected an assignment or function call and instead saw an expression.
5. line 446, char 67: Expected an assignment or function call and instead saw an expression.
6. line 447, char 65: Expected an assignment or function call and instead saw an expression.
7. line 596, char 87: Expected an assignment or function call and instead saw an expression.
8. line 620, char 17: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
9. line 696, char 13: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
10. line 757, char 46: Expected an assignment or function call and instead saw an expression.
11. line 853, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
12. line 1130, char 11: [&apos;$mdTabsTemplate&apos;] is better written in dot notation.
13. line 1301, char 95: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/tabs/tabs.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 369: Expected an assignment or function call and instead saw an expression.
2. line 7, char 370: Missing semicolon.
3. line 7, char 420: Missing semicolon.
4. line 7, char 473: Missing semicolon.
5. line 7, char 514: Expected an assignment or function call and instead saw an expression.
6. line 7, char 515: Missing semicolon.
7. line 7, char 560: Missing semicolon.
8. line 7, char 561: Expected an assignment or function call and instead saw an expression.
9. line 7, char 562: Missing semicolon.
10. line 7, char 689: Missing semicolon.
11. line 7, char 708: Missing semicolon.
12. line 7, char 820: Use &apos;===&apos; to compare with &apos;0&apos;.
13. line 7, char 926: Use &apos;===&apos; to compare with &apos;0&apos;.
14. line 7, char 1020: Expected an assignment or function call and instead saw an expression.
15. line 7, char 1021: Missing semicolon.
16. line 7, char 1064: Missing semicolon.
17. line 7, char 1166: Missing semicolon.
18. line 7, char 1250: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1251: Missing semicolon.
20. line 7, char 1253: Missing semicolon.
21. line 7, char 1286: Missing semicolon.
22. line 7, char 1460: Missing semicolon.
23. line 7, char 1462: Missing semicolon.
24. line 7, char 1464: Missing semicolon.
25. line 7, char 1465: Missing semicolon.
26. line 7, char 1467: Missing semicolon.
27. line 7, char 1687: Expected an assignment or function call and instead saw an expression.
28. line 7, char 1688: Missing semicolon.
29. line 7, char 1689: Expected an assignment or function call and instead saw an expression.
30. line 7, char 1690: Missing semicolon.
31. line 7, char 1821: Expected an assignment or function call and instead saw an expression.
32. line 7, char 1836: Missing semicolon.
33. line 7, char 1896: Expected an assignment or function call and instead saw an expression.
34. line 7, char 1897: Missing semicolon.
35. line 7, char 1950: Missing semicolon.
36. line 7, char 2037: Missing semicolon.
37. line 7, char 2038: Expected an assignment or function call and instead saw an expression.
38. line 7, char 2039: Missing semicolon.
39. line 7, char 2087: Missing semicolon.
40. line 7, char 2169: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2170: Missing semicolon.
42. line 7, char 2217: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2218: Missing semicolon.
44. line 7, char 2302: Expected an assignment or function call and instead saw an expression.
45. line 7, char 2303: Missing semicolon.
46. line 7, char 2341: Missing semicolon.
47. line 7, char 2430: Missing semicolon.
48. line 7, char 2465: Expected an assignment or function call and instead saw an expression.
49. line 7, char 2466: Missing semicolon.
50. line 7, char 2595: Expected an assignment or function call and instead saw an expression.
51. line 7, char 2595: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/textField/textField.js" />
	<testcase name="client/bower_components/angular-material/modules/js/textField/textField.min.js">
		<failure message="26 JSHint Failures">
1. line 7, char 492: Missing semicolon.
2. line 7, char 514: Expected an assignment or function call and instead saw an expression.
3. line 7, char 520: Missing semicolon.
4. line 7, char 529: Missing semicolon.
5. line 7, char 730: Missing semicolon.
6. line 7, char 1065: Missing semicolon.
7. line 7, char 1133: Missing semicolon.
8. line 7, char 1133: Expected an assignment or function call and instead saw an expression.
9. line 7, char 1134: Missing semicolon.
10. line 7, char 1137: Missing semicolon.
11. line 7, char 1378: Missing semicolon.
12. line 7, char 1682: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1683: Missing semicolon.
14. line 7, char 1803: Missing semicolon.
15. line 7, char 1848: Missing semicolon.
16. line 7, char 1890: Missing semicolon.
17. line 7, char 1949: Expected an assignment or function call and instead saw an expression.
18. line 7, char 1950: Missing semicolon.
19. line 7, char 2014: Expected an assignment or function call and instead saw an expression.
20. line 7, char 2015: Missing semicolon.
21. line 7, char 2016: Expected an assignment or function call and instead saw an expression.
22. line 7, char 2017: Missing semicolon.
23. line 7, char 2020: Missing semicolon.
24. line 7, char 2262: Expected an assignment or function call and instead saw an expression.
25. line 7, char 2263: Missing semicolon.
26. line 7, char 2265: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/toast/toast.js">
		<failure message="2 JSHint Failures">
1. line 307, char 16: Missing semicolon.
2. line 430, char 33: Use &apos;===&apos; to compare with &apos;true&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/toast/toast.min.js">
		<failure message="30 JSHint Failures">
1. line 7, char 141: Missing semicolon.
2. line 7, char 142: Expected an assignment or function call and instead saw an expression.
3. line 7, char 143: Missing semicolon.
4. line 7, char 145: Missing semicolon.
5. line 7, char 177: Missing semicolon.
6. line 7, char 571: Expected an assignment or function call and instead saw an expression.
7. line 7, char 572: Missing semicolon.
8. line 7, char 813: Missing semicolon.
9. line 7, char 966: Expected an assignment or function call and instead saw an expression.
10. line 7, char 967: Missing semicolon.
11. line 7, char 969: Missing semicolon.
12. line 7, char 1296: Expected an assignment or function call and instead saw an expression.
13. line 7, char 1297: Missing semicolon.
14. line 7, char 1299: Missing semicolon.
15. line 7, char 1410: Missing semicolon.
16. line 7, char 1910: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1911: Missing semicolon.
18. line 7, char 1930: Missing semicolon.
19. line 7, char 1943: Missing semicolon.
20. line 7, char 1945: Missing semicolon.
21. line 7, char 2829: Missing semicolon.
22. line 7, char 2853: Missing semicolon.
23. line 7, char 2889: Missing semicolon.
24. line 7, char 2889: Expected an assignment or function call and instead saw an expression.
25. line 7, char 2890: Missing semicolon.
26. line 7, char 2957: Missing semicolon.
27. line 7, char 3087: Missing semicolon.
28. line 7, char 3279: Expected an assignment or function call and instead saw an expression.
29. line 7, char 3280: Missing semicolon.
30. line 7, char 3303: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/toolbar/toolbar.js" />
	<testcase name="client/bower_components/angular-material/modules/js/toolbar/toolbar.min.js">
		<failure message="23 JSHint Failures">
1. line 7, char 972: A leading decimal point can be confused with a dot: &apos;.5&apos;.
2. line 7, char 265: Confusing use of &apos;!&apos;.
3. line 7, char 276: Expected an assignment or function call and instead saw an expression.
4. line 7, char 277: Missing semicolon.
5. line 7, char 359: Expected an assignment or function call and instead saw an expression.
6. line 7, char 360: Missing semicolon.
7. line 7, char 654: Expected an assignment or function call and instead saw an expression.
8. line 7, char 655: Missing semicolon.
9. line 7, char 656: Expected an assignment or function call and instead saw an expression.
10. line 7, char 657: Missing semicolon.
11. line 7, char 809: Expected an assignment or function call and instead saw an expression.
12. line 7, char 810: Missing semicolon.
13. line 7, char 819: Missing semicolon.
14. line 7, char 918: Expected an assignment or function call and instead saw an expression.
15. line 7, char 919: Missing semicolon.
16. line 7, char 1148: Expected an assignment or function call and instead saw an expression.
17. line 7, char 1149: Missing semicolon.
18. line 7, char 1206: Expected an assignment or function call and instead saw an expression.
19. line 7, char 1207: Missing semicolon.
20. line 7, char 1209: Missing semicolon.
21. line 7, char 1389: Expected an assignment or function call and instead saw an expression.
22. line 7, char 1390: Missing semicolon.
23. line 7, char 1413: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/tooltip/tooltip.js">
		<failure message="7 JSHint Failures">
1. line 160, char 59: Expected an assignment or function call and instead saw an expression.
2. line 234, char 59: Expected an assignment or function call and instead saw an expression.
3. line 276, char 53: Confusing use of &apos;!&apos;.
4. line 276, char 104: Confusing use of &apos;!&apos;.
5. line 376, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
6. line 379, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
7. line 382, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/tooltip/tooltip.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 112: Missing semicolon.
2. line 7, char 294: Missing semicolon.
3. line 7, char 322: Missing semicolon.
4. line 7, char 345: Expected an assignment or function call and instead saw an expression.
5. line 7, char 346: Missing semicolon.
6. line 7, char 594: Expected an assignment or function call and instead saw an expression.
7. line 7, char 595: Missing semicolon.
8. line 7, char 597: Missing semicolon.
9. line 7, char 702: Expected an assignment or function call and instead saw an expression.
10. line 7, char 703: Missing semicolon.
11. line 7, char 770: Expected an assignment or function call and instead saw an expression.
12. line 7, char 801: Missing semicolon.
13. line 7, char 904: Expected an assignment or function call and instead saw an expression.
14. line 7, char 905: Missing semicolon.
15. line 7, char 988: Missing semicolon.
16. line 7, char 991: Expected an assignment or function call and instead saw an expression.
17. line 7, char 992: Missing semicolon.
18. line 7, char 1121: Missing semicolon.
19. line 7, char 1170: Expected an assignment or function call and instead saw an expression.
20. line 7, char 1171: Missing semicolon.
21. line 7, char 1203: Missing semicolon.
22. line 7, char 1353: Missing semicolon.
23. line 7, char 1384: Missing semicolon.
24. line 7, char 1385: Expected an assignment or function call and instead saw an expression.
25. line 7, char 1386: Missing semicolon.
26. line 7, char 1420: Missing semicolon.
27. line 7, char 1469: Missing semicolon.
28. line 7, char 1797: Expected an assignment or function call and instead saw an expression.
29. line 7, char 1798: Missing semicolon.
30. line 7, char 1799: Expected an assignment or function call and instead saw an expression.
31. line 7, char 1915: Missing semicolon.
32. line 7, char 2162: Expected an assignment or function call and instead saw an expression.
33. line 7, char 2163: Missing semicolon.
34. line 7, char 2182: Missing semicolon.
35. line 7, char 2240: Expected an assignment or function call and instead saw an expression.
36. line 7, char 2241: Missing semicolon.
37. line 7, char 2276: Confusing use of &apos;!&apos;.
38. line 7, char 2304: Confusing use of &apos;!&apos;.
39. line 7, char 2429: Expected an assignment or function call and instead saw an expression.
40. line 7, char 2430: Missing semicolon.
41. line 7, char 2499: Expected an assignment or function call and instead saw an expression.
42. line 7, char 2500: Missing semicolon.
43. line 7, char 2503: Expected an assignment or function call and instead saw an expression.
44. line 7, char 2504: Missing semicolon.
45. line 7, char 2714: Missing semicolon.
46. line 7, char 2715: Expected an assignment or function call and instead saw an expression.
47. line 7, char 2716: Missing semicolon.
48. line 7, char 2838: Expected an assignment or function call and instead saw an expression.
49. line 7, char 2839: Missing semicolon.
50. line 7, char 2887: Expected an assignment or function call and instead saw an expression.
51. line 7, char 2887: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/virtualRepeat/virtualRepeat.js">
		<failure message="6 JSHint Failures">
1. line 58, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
2. line 218, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
3. line 226, char 51: Expected an assignment or function call and instead saw an expression.
4. line 539, char 25: Expected an assignment or function call and instead saw an expression.
5. line 749, char 71: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 756, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/virtualRepeat/virtualRepeat.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 231: Missing semicolon.
2. line 7, char 233: Missing semicolon.
3. line 7, char 410: Missing semicolon.
4. line 7, char 439: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
5. line 7, char 457: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
6. line 7, char 471: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
7. line 7, char 487: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
8. line 7, char 501: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
9. line 7, char 513: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
10. line 7, char 531: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
11. line 7, char 551: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
12. line 7, char 567: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
13. line 7, char 616: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
14. line 7, char 635: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
15. line 7, char 651: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
16. line 7, char 694: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
17. line 7, char 722: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
18. line 7, char 757: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
19. line 7, char 780: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
20. line 7, char 805: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
21. line 7, char 837: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
22. line 7, char 862: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
23. line 7, char 886: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
24. line 7, char 906: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
25. line 7, char 930: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
26. line 7, char 944: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
27. line 7, char 962: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
28. line 7, char 987: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
29. line 7, char 1004: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
30. line 7, char 1020: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
31. line 7, char 1045: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
32. line 7, char 1061: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
33. line 7, char 1080: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
34. line 7, char 1105: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
35. line 7, char 1161: Expected an assignment or function call and instead saw an expression.
36. line 7, char 1162: Missing semicolon.
37. line 7, char 1167: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
38. line 7, char 1183: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
39. line 7, char 1258: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
40. line 7, char 1269: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
41. line 7, char 1336: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
42. line 7, char 1351: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
43. line 7, char 1420: Expected an assignment or function call and instead saw an expression.
44. line 7, char 1435: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
45. line 7, char 1440: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
46. line 7, char 1466: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
47. line 7, char 1609: Missing semicolon.
48. line 7, char 1661: Expected an assignment or function call and instead saw an expression.
49. line 7, char 1662: Missing semicolon.
50. line 7, char 1665: Missing semicolon.
51. line 7, char 1665: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-material/modules/js/whiteframe/whiteframe.js" />
	<testcase name="client/bower_components/angular-material/modules/js/whiteframe/whiteframe.min.js">
		<failure message="8 JSHint Failures">
1. line 7, char 252: Expected an assignment or function call and instead saw an expression.
2. line 7, char 314: Expected an assignment or function call and instead saw an expression.
3. line 7, char 315: Missing semicolon.
4. line 7, char 317: Missing semicolon.
5. line 7, char 354: Missing semicolon.
6. line 7, char 461: Expected an assignment or function call and instead saw an expression.
7. line 7, char 462: Missing semicolon.
8. line 7, char 485: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-messages/angular-messages.js">
		<failure message="5 JSHint Failures">
1. line 383, char 30: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 389, char 35: Don&apos;t make functions within a loop.
3. line 676, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
4. line 677, char 19: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
5. line 733, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-messages/angular-messages.min.js">
		<failure message="48 JSHint Failures">
1. line 6, char 312: Missing semicolon.
2. line 6, char 359: Expected an assignment or function call and instead saw an expression.
3. line 6, char 470: Missing semicolon.
4. line 7, char 136: Expected an assignment or function call and instead saw an expression.
5. line 7, char 150: Missing semicolon.
6. line 7, char 152: Missing semicolon.
7. line 7, char 153: Expected an assignment or function call and instead saw an expression.
8. line 7, char 154: Missing semicolon.
9. line 7, char 205: Missing semicolon.
10. line 7, char 209: Missing semicolon.
11. line 7, char 211: Missing semicolon.
12. line 7, char 213: Missing semicolon.
13. line 7, char 310: Missing semicolon.
14. line 7, char 447: Missing semicolon.
15. line 7, char 486: Missing semicolon.
16. line 8, char 319: Expected an assignment or function call and instead saw an expression.
17. line 8, char 320: Missing semicolon.
18. line 8, char 379: Missing semicolon.
19. line 9, char 33: Use &apos;!==&apos; to compare with &apos;null&apos;.
20. line 9, char 134: Expected an assignment or function call and instead saw an expression.
21. line 9, char 135: Missing semicolon.
22. line 9, char 71: Don&apos;t make functions within a loop.
23. line 9, char 136: Expected an assignment or function call and instead saw an expression.
24. line 9, char 153: Expected an assignment or function call and instead saw an expression.
25. line 9, char 163: Missing semicolon.
26. line 9, char 190: Missing semicolon.
27. line 9, char 284: Expected an assignment or function call and instead saw an expression.
28. line 9, char 285: Missing semicolon.
29. line 9, char 400: Missing semicolon.
30. line 9, char 402: Missing semicolon.
31. line 9, char 479: Expected an assignment or function call and instead saw an expression.
32. line 9, char 480: Missing semicolon.
33. line 9, char 482: Expected an assignment or function call and instead saw an expression.
34. line 9, char 483: Missing semicolon.
35. line 10, char 133: Expected an assignment or function call and instead saw an expression.
36. line 10, char 171: Missing semicolon.
37. line 10, char 298: Expected an assignment or function call and instead saw an expression.
38. line 10, char 327: Missing semicolon.
39. line 10, char 328: Missing semicolon.
40. line 10, char 331: Missing semicolon.
41. line 11, char 53: &apos;e&apos; is already defined.
42. line 11, char 81: Missing semicolon.
43. line 11, char 277: Missing semicolon.
44. line 11, char 279: Expected an assignment or function call and instead saw an expression.
45. line 11, char 280: Missing semicolon.
46. line 11, char 282: Missing semicolon.
47. line 11, char 284: Missing semicolon.
48. line 11, char 344: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-messages/index.js" />
	<testcase name="client/bower_components/angular-resource/angular-resource.js">
		<failure message="4 JSHint Failures">
1. line 16, char 16: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 680, char 29: Expected a &apos;break&apos; statement before &apos;case&apos;.
3. line 699, char 17: Expected a &apos;break&apos; statement before &apos;case&apos;.
4. line 757, char 40: Confusing use of &apos;!&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-resource/angular-resource.min.js">
		<failure message="51 JSHint Failures">
1. line 6, char 90: Missing semicolon.
2. line 6, char 178: Expected an assignment or function call and instead saw an expression.
3. line 6, char 188: Missing semicolon.
4. line 7, char 209: Missing semicolon.
5. line 7, char 298: Expected an assignment or function call and instead saw an expression.
6. line 7, char 370: Use &apos;===&apos; to compare with &apos;null&apos;.
7. line 7, char 451: &apos;k&apos; is already defined.
8. line 8, char 28: Missing semicolon.
9. line 8, char 45: Missing semicolon.
10. line 8, char 56: Missing semicolon.
11. line 8, char 88: Missing semicolon.
12. line 8, char 111: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
13. line 8, char 116: Missing semicolon.
14. line 8, char 279: Missing semicolon.
15. line 8, char 305: Confusing use of &apos;!&apos;.
16. line 8, char 321: Confusing use of &apos;!&apos;.
17. line 9, char 24: Expected an assignment or function call and instead saw an expression.
18. line 9, char 86: Missing semicolon.
19. line 9, char 140: Expected an assignment or function call and instead saw an expression.
20. line 9, char 141: Expected a &apos;break&apos; statement before &apos;case&apos;.
21. line 9, char 187: Missing semicolon.
22. line 9, char 195: Missing semicolon.
23. line 9, char 218: Missing semicolon.
24. line 9, char 218: Expected a &apos;break&apos; statement before &apos;case&apos;.
25. line 9, char 243: Expected an assignment or function call and instead saw an expression.
26. line 10, char 5: Expected a &apos;break&apos; statement before &apos;case&apos;.
27. line 10, char 138: Expected an assignment or function call and instead saw an expression.
28. line 10, char 152: Expected an assignment or function call and instead saw an expression.
29. line 10, char 261: Confusing use of &apos;!&apos;.
30. line 10, char 442: Expected an assignment or function call and instead saw an expression.
31. line 10, char 443: Missing semicolon.
32. line 10, char 444: Expected an assignment or function call and instead saw an expression.
33. line 10, char 487: Missing semicolon.
34. line 11, char 9: Missing semicolon.
35. line 11, char 12: &apos;r&apos; is already defined.
36. line 11, char 110: Expected an assignment or function call and instead saw an expression.
37. line 11, char 111: Missing semicolon.
38. line 11, char 114: &apos;r&apos; is already defined.
39. line 11, char 196: Missing semicolon.
40. line 11, char 231: Expected an assignment or function call and instead saw an expression.
41. line 11, char 239: Expected an assignment or function call and instead saw an expression.
42. line 11, char 266: Missing semicolon.
43. line 11, char 342: Missing semicolon.
44. line 11, char 398: Expected an assignment or function call and instead saw an expression.
45. line 11, char 449: Missing semicolon.
46. line 11, char 450: Missing semicolon.
47. line 11, char 501: Missing semicolon.
48. line 12, char 9: Missing semicolon.
49. line 12, char 478: Expected an assignment or function call and instead saw an expression.
50. line 12, char 479: Missing semicolon.
51. line 12, char 479: Too many errors. (75% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-resource/index.js" />
	<testcase name="client/bower_components/angular-ui-router/release/angular-ui-router.js">
		<failure message="9 JSHint Failures">
1. line 649, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 1037, char 21: Use &apos;!==&apos; to compare with &apos;null&apos;.
3. line 1054, char 19: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 1274, char 42: Use &apos;!==&apos; to compare with &apos;null&apos;.
5. line 1275, char 44: Use &apos;!==&apos; to compare with &apos;null&apos;.
6. line 1283, char 38: Use &apos;===&apos; to compare with &apos;null&apos;.
7. line 1639, char 40: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 1782, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 3286, char 33: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-ui-router/release/angular-ui-router.min.js">
		<failure message="51 JSHint Failures">
1. line 7, char 200: Missing &apos;()&apos; invoking a constructor.
2. line 7, char 204: Missing semicolon.
3. line 7, char 303: Expected an assignment or function call and instead saw an expression.
4. line 7, char 304: Missing semicolon.
5. line 7, char 305: Expected an assignment or function call and instead saw an expression.
6. line 7, char 306: Missing semicolon.
7. line 7, char 310: Missing semicolon.
8. line 7, char 405: Missing semicolon.
9. line 7, char 414: Missing semicolon.
10. line 7, char 509: Missing semicolon.
11. line 7, char 513: Missing semicolon.
12. line 7, char 740: Missing semicolon.
13. line 7, char 909: Expected an assignment or function call and instead saw an expression.
14. line 7, char 927: Missing semicolon.
15. line 7, char 982: Missing semicolon.
16. line 7, char 1044: Missing semicolon.
17. line 7, char 1053: Missing semicolon.
18. line 7, char 1111: Missing semicolon.
19. line 7, char 1115: Missing semicolon.
20. line 7, char 1268: Expected an assignment or function call and instead saw an expression.
21. line 7, char 1269: Missing semicolon.
22. line 7, char 1273: Missing semicolon.
23. line 7, char 1422: Expected an assignment or function call and instead saw an expression.
24. line 7, char 1432: Missing semicolon.
25. line 7, char 1521: Expected an assignment or function call and instead saw an expression.
26. line 7, char 1522: Missing semicolon.
27. line 7, char 1526: Missing semicolon.
28. line 7, char 1596: Missing semicolon.
29. line 7, char 1600: Missing semicolon.
30. line 7, char 1647: Missing semicolon.
31. line 7, char 1731: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
32. line 7, char 1829: Missing semicolon.
33. line 7, char 1829: Expected an identifier and instead saw &apos;,&apos;.
34. line 7, char 1830: Expected an operator and instead saw &apos;new&apos;.
35. line 7, char 1830: Expected an assignment or function call and instead saw an expression.
36. line 7, char 1833: Missing semicolon.
37. line 7, char 1929: Missing semicolon.
38. line 7, char 2012: Expected an assignment or function call and instead saw an expression.
39. line 7, char 2013: Missing semicolon.
40. line 7, char 2028: Expected an assignment or function call and instead saw an expression.
41. line 7, char 2029: Missing semicolon.
42. line 7, char 2043: Expected an assignment or function call and instead saw an expression.
43. line 7, char 2044: Missing semicolon.
44. line 7, char 2093: Missing semicolon.
45. line 7, char 2344: Expected an assignment or function call and instead saw an expression.
46. line 7, char 2345: Missing semicolon.
47. line 7, char 2384: Expected an assignment or function call and instead saw an expression.
48. line 7, char 2385: Missing semicolon.
49. line 7, char 2433: Expected an assignment or function call and instead saw an expression.
50. line 7, char 2434: Missing semicolon.
51. line 7, char 2434: Too many errors. (87% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-ui-router/src/common.js" />
	<testcase name="client/bower_components/angular-ui-router/src/resolve.js" />
	<testcase name="client/bower_components/angular-ui-router/src/state.js">
		<failure message="1 JSHINT Failure">
1. line 1096, char 33: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-ui-router/src/stateDirectives.js" />
	<testcase name="client/bower_components/angular-ui-router/src/stateFilters.js" />
	<testcase name="client/bower_components/angular-ui-router/src/templateFactory.js">
		<failure message="1 JSHINT Failure">
1. line 84, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-ui-router/src/urlMatcherFactory.js">
		<failure message="6 JSHint Failures">
1. line 361, char 21: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 378, char 19: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 598, char 42: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 599, char 44: Use &apos;!==&apos; to compare with &apos;null&apos;.
5. line 607, char 38: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 963, char 40: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-ui-router/src/urlRouter.js">
		<failure message="1 JSHINT Failure">
1. line 24, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular-ui-router/src/view.js" />
	<testcase name="client/bower_components/angular-ui-router/src/viewDirective.js" />
	<testcase name="client/bower_components/angular-ui-router/src/viewScroll.js" />
	<testcase name="client/bower_components/angular/angular.js">
		<failure message="51 JSHint Failures">
1. line 281, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
2. line 288, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
3. line 336, char 11: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 868, char 5: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
5. line 1060, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
6. line 1247, char 19: The Function constructor is a form of eval.
7. line 1339, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
8. line 1341, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
9. line 1346, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
10. line 1432, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
11. line 2025, char 47: Use &apos;!==&apos; to compare with &apos;null&apos;.
12. line 2141, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
13. line 4918, char 11: Do not assign to the exception parameter.
14. line 5358, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
15. line 8806, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
16. line 8978, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
17. line 8989, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
18. line 8993, char 22: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
19. line 9412, char 13: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
20. line 9417, char 25: Misleading line break before &apos;||&apos;; readers may interpret this as an expression boundary.
21. line 9493, char 39: Don&apos;t make functions within a loop.
22. line 9511, char 48: Don&apos;t make functions within a loop.
23. line 9523, char 36: Don&apos;t make functions within a loop.
24. line 9550, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
25. line 9607, char 11: Reassignment of &apos;nodeLinkFn&apos;, which is is a function. Use &apos;var&apos; or &apos;let&apos; to declare bindings that may change.
26. line 10073, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
27. line 10834, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
28. line 11417, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
29. line 12030, char 31: Use &apos;!==&apos; to compare with &apos;null&apos;.
30. line 12093, char 11: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
31. line 12297, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
32. line 12326, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
33. line 13905, char 23: Use &apos;===&apos; to compare with &apos;null&apos;.
34. line 14499, char 15: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
35. line 14532, char 26: Use &apos;===&apos; to compare with &apos;null&apos;.
36. line 14709, char 13: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
37. line 15358, char 27: The Function constructor is a form of eval.
38. line 15874, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
39. line 16083, char 56: Use &apos;===&apos; to compare with &apos;null&apos;.
40. line 16099, char 15: Use &apos;!==&apos; to compare with &apos;null&apos;.
41. line 16120, char 31: Use &apos;===&apos; to compare with &apos;null&apos;.
42. line 16124, char 23: Use &apos;!==&apos; to compare with &apos;null&apos;.
43. line 16322, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
44. line 16322, char 47: Use &apos;===&apos; to compare with &apos;null&apos;.
45. line 17160, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
46. line 17993, char 29: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
47. line 19868, char 42: Confusing use of &apos;!&apos;.
48. line 20302, char 7: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
49. line 20740, char 17: Use &apos;===&apos; to compare with &apos;null&apos;.
50. line 20760, char 35: Expected a &apos;break&apos; statement before &apos;case&apos;.
51. line 20760, char 35: Too many errors. (62% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular/angular.min.js">
		<failure message="51 JSHint Failures">
1. line 6, char 417: Missing semicolon.
2. line 6, char 433: Missing semicolon.
3. line 6, char 434: Missing semicolon.
4. line 7, char 21: Expected an assignment or function call and instead saw an expression.
5. line 7, char 37: Missing semicolon.
6. line 7, char 70: Missing semicolon.
7. line 7, char 93: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 7, char 272: Missing semicolon.
9. line 7, char 404: Expected an assignment or function call and instead saw an expression.
10. line 8, char 9: Expected an assignment or function call and instead saw an expression.
11. line 8, char 10: Missing semicolon.
12. line 8, char 199: Expected an assignment or function call and instead saw an expression.
13. line 8, char 248: Expected an assignment or function call and instead saw an expression.
14. line 8, char 258: Missing semicolon.
15. line 8, char 360: Missing semicolon.
16. line 8, char 403: Missing semicolon.
17. line 8, char 404: Missing semicolon.
18. line 8, char 429: Missing semicolon.
19. line 9, char 251: Expected an assignment or function call and instead saw an expression.
20. line 9, char 252: Missing semicolon.
21. line 9, char 279: Expected an assignment or function call and instead saw an expression.
22. line 9, char 297: Missing semicolon.
23. line 9, char 348: Missing semicolon.
24. line 9, char 400: Missing semicolon.
25. line 9, char 436: Missing semicolon.
26. line 9, char 482: Missing semicolon.
27. line 9, char 520: Missing semicolon.
28. line 10, char 42: Missing semicolon.
29. line 10, char 43: Missing semicolon.
30. line 10, char 96: Missing semicolon.
31. line 10, char 139: Missing semicolon.
32. line 10, char 182: Missing semicolon.
33. line 10, char 233: Missing semicolon.
34. line 10, char 293: Missing semicolon.
35. line 10, char 333: Missing semicolon.
36. line 10, char 374: Missing semicolon.
37. line 10, char 424: Missing semicolon.
38. line 10, char 466: Missing semicolon.
39. line 11, char 11: Missing semicolon.
40. line 11, char 49: Missing semicolon.
41. line 11, char 97: Missing semicolon.
42. line 11, char 139: Missing semicolon.
43. line 11, char 198: Missing semicolon.
44. line 11, char 264: Missing semicolon.
45. line 11, char 352: Missing semicolon.
46. line 11, char 409: Missing semicolon.
47. line 11, char 464: Expected an assignment or function call and instead saw an expression.
48. line 11, char 474: Missing semicolon.
49. line 12, char 106: Missing semicolon.
50. line 12, char 242: Expected an assignment or function call and instead saw an expression.
51. line 12, char 242: Too many errors. (3% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/angular/index.js" />
	<testcase name="client/bower_components/jquery/dist/core.js">
		<failure message="9 JSHint Failures">
1. line 69, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 161, char 43: Use &apos;!==&apos; to compare with &apos;null&apos;.
3. line 219, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 270, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
5. line 315, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 324, char 18: Use &apos;!==&apos; to compare with &apos;null&apos;.
7. line 339, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 389, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 399, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/dist/jquery.js">
		<failure message="51 JSHint Failures">
1. line 133, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 225, char 43: Use &apos;!==&apos; to compare with &apos;null&apos;.
3. line 283, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 334, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
5. line 379, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 388, char 18: Use &apos;!==&apos; to compare with &apos;null&apos;.
7. line 403, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 453, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 463, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
10. line 733, char 43: Expected an assignment or function call and instead saw an expression.
11. line 1171, char 20: [&apos;ID&apos;] is better written in dot notation.
12. line 1177, char 18: [&apos;ID&apos;] is better written in dot notation.
13. line 1184, char 20: [&apos;ID&apos;] is better written in dot notation.
14. line 1195, char 18: [&apos;ID&apos;] is better written in dot notation.
15. line 1225, char 14: [&apos;TAG&apos;] is better written in dot notation.
16. line 1257, char 14: [&apos;CLASS&apos;] is better written in dot notation.
17. line 1721, char 27: [&apos;CHILD&apos;] is better written in dot notation.
18. line 1771, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
19. line 2060, char 33: Expected an assignment or function call and instead saw an expression.
20. line 2081, char 33: [&apos;empty&apos;] is better written in dot notation.
21. line 2105, char 54: Use &apos;===&apos; to compare with &apos;null&apos;.
22. line 2155, char 13: [&apos;nth&apos;] is better written in dot notation.
23. line 2155, char 35: [&apos;eq&apos;] is better written in dot notation.
24. line 2339, char 22: Use &apos;!==&apos; to compare with &apos;null&apos;.
25. line 2517, char 55: [&apos;TAG&apos;] is better written in dot notation.
26. line 2519, char 59: Use &apos;===&apos; to compare with &apos;null&apos;.
27. line 2529, char 52: Use &apos;!==&apos; to compare with &apos;null&apos;.
28. line 2672, char 34: [&apos;ID&apos;] is better written in dot notation.
29. line 2685, char 22: [&apos;needsContext&apos;] is better written in dot notation.
30. line 2776, char 40: Use &apos;===&apos; to compare with &apos;null&apos;.
31. line 2846, char 2: Unnecessary semicolon.
32. line 2857, char 20: Confusing use of &apos;!&apos;.
33. line 3151, char 35: Use &apos;===&apos; to compare with &apos;null&apos;.
34. line 3501, char 21: Value of &apos;value&apos; may be overwritten in IE 8 and earlier.
35. line 3735, char 32: Use &apos;!==&apos; to compare with &apos;null&apos;.
36. line 3960, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
37. line 4023, char 60: Confusing use of &apos;!&apos;.
38. line 4664, char 30: Use &apos;!==&apos; to compare with &apos;null&apos;.
39. line 4924, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
40. line 4924, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
41. line 4929, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
42. line 5506, char 26: Use &apos;===&apos; to compare with &apos;null&apos;.
43. line 5507, char 35: Use &apos;!==&apos; to compare with &apos;null&apos;.
44. line 5804, char 35: Use &apos;!==&apos; to compare with &apos;null&apos;.
45. line 5961, char 38: Use &apos;!==&apos; to compare with &apos;null&apos;.
46. line 5976, char 39: Use &apos;===&apos; to compare with &apos;null&apos;.
47. line 5977, char 47: Use &apos;===&apos; to compare with &apos;null&apos;.
48. line 6459, char 24: Use &apos;===&apos; to compare with &apos;null&apos;.
49. line 6711, char 42: Use &apos;!==&apos; to compare with &apos;null&apos;.
50. line 6711, char 84: Use &apos;===&apos; to compare with &apos;null&apos;.
51. line 6711, char 84: Too many errors. (65% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/dist/jquery.min.js">
		<failure message="51 JSHint Failures">
1. line 2, char 218: Missing semicolon.
2. line 2, char 223: Expected an assignment or function call and instead saw an expression.
3. line 2, char 224: Missing semicolon.
4. line 2, char 562: Expected an assignment or function call and instead saw an expression.
5. line 2, char 563: Missing semicolon.
6. line 2, char 619: Missing semicolon.
7. line 2, char 722: Missing semicolon.
8. line 2, char 812: Missing semicolon.
9. line 2, char 841: Use &apos;===&apos; to compare with &apos;null&apos;.
10. line 2, char 889: Missing semicolon.
11. line 2, char 975: Missing semicolon.
12. line 2, char 1015: Missing semicolon.
13. line 2, char 1100: Missing semicolon.
14. line 2, char 1103: Missing semicolon.
15. line 2, char 1168: Missing semicolon.
16. line 2, char 1204: Missing semicolon.
17. line 2, char 1240: Missing semicolon.
18. line 2, char 1335: Missing semicolon.
19. line 2, char 1394: Missing semicolon.
20. line 2, char 1660: Use &apos;!==&apos; to compare with &apos;null&apos;.
21. line 2, char 1869: Expected an assignment or function call and instead saw an expression.
22. line 2, char 1879: Missing semicolon.
23. line 2, char 1991: Missing semicolon.
24. line 2, char 2062: Missing semicolon.
25. line 2, char 2096: Use &apos;!==&apos; to compare with &apos;null&apos;.
26. line 2, char 2113: Missing semicolon.
27. line 2, char 2212: Missing semicolon.
28. line 2, char 2383: Missing semicolon.
29. line 2, char 2445: Missing semicolon.
30. line 2, char 2475: Use &apos;===&apos; to compare with &apos;null&apos;.
31. line 2, char 2556: Missing semicolon.
32. line 2, char 2585: Missing semicolon.
33. line 2, char 2647: Missing semicolon.
34. line 2, char 2735: Confusing use of &apos;!&apos;.
35. line 2, char 2743: Missing semicolon.
36. line 2, char 2785: Confusing use of &apos;!&apos;.
37. line 2, char 2802: Missing semicolon.
38. line 2, char 2832: Use &apos;===&apos; to compare with &apos;null&apos;.
39. line 2, char 2859: Missing semicolon.
40. line 2, char 2908: Use &apos;!==&apos; to compare with &apos;null&apos;.
41. line 2, char 2977: Missing semicolon.
42. line 2, char 3014: Use &apos;===&apos; to compare with &apos;null&apos;.
43. line 2, char 3034: Missing semicolon.
44. line 2, char 3130: Missing semicolon.
45. line 2, char 3227: Expected an assignment or function call and instead saw an expression.
46. line 2, char 3237: Missing semicolon.
47. line 2, char 3325: Use &apos;!==&apos; to compare with &apos;null&apos;.
48. line 2, char 3338: Expected an assignment or function call and instead saw an expression.
49. line 2, char 3374: Use &apos;!==&apos; to compare with &apos;null&apos;.
50. line 2, char 3387: Expected an assignment or function call and instead saw an expression.
51. line 2, char 3387: Too many errors. (40% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/dist/jquery.slim.js">
		<failure message="51 JSHint Failures">
1. line 133, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 225, char 43: Use &apos;!==&apos; to compare with &apos;null&apos;.
3. line 283, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 334, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
5. line 379, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 388, char 18: Use &apos;!==&apos; to compare with &apos;null&apos;.
7. line 403, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 453, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 463, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
10. line 733, char 43: Expected an assignment or function call and instead saw an expression.
11. line 1171, char 20: [&apos;ID&apos;] is better written in dot notation.
12. line 1177, char 18: [&apos;ID&apos;] is better written in dot notation.
13. line 1184, char 20: [&apos;ID&apos;] is better written in dot notation.
14. line 1195, char 18: [&apos;ID&apos;] is better written in dot notation.
15. line 1225, char 14: [&apos;TAG&apos;] is better written in dot notation.
16. line 1257, char 14: [&apos;CLASS&apos;] is better written in dot notation.
17. line 1721, char 27: [&apos;CHILD&apos;] is better written in dot notation.
18. line 1771, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
19. line 2060, char 33: Expected an assignment or function call and instead saw an expression.
20. line 2081, char 33: [&apos;empty&apos;] is better written in dot notation.
21. line 2105, char 54: Use &apos;===&apos; to compare with &apos;null&apos;.
22. line 2155, char 13: [&apos;nth&apos;] is better written in dot notation.
23. line 2155, char 35: [&apos;eq&apos;] is better written in dot notation.
24. line 2339, char 22: Use &apos;!==&apos; to compare with &apos;null&apos;.
25. line 2517, char 55: [&apos;TAG&apos;] is better written in dot notation.
26. line 2519, char 59: Use &apos;===&apos; to compare with &apos;null&apos;.
27. line 2529, char 52: Use &apos;!==&apos; to compare with &apos;null&apos;.
28. line 2672, char 34: [&apos;ID&apos;] is better written in dot notation.
29. line 2685, char 22: [&apos;needsContext&apos;] is better written in dot notation.
30. line 2776, char 40: Use &apos;===&apos; to compare with &apos;null&apos;.
31. line 2846, char 2: Unnecessary semicolon.
32. line 2857, char 20: Confusing use of &apos;!&apos;.
33. line 3151, char 35: Use &apos;===&apos; to compare with &apos;null&apos;.
34. line 3501, char 21: Value of &apos;value&apos; may be overwritten in IE 8 and earlier.
35. line 3735, char 32: Use &apos;!==&apos; to compare with &apos;null&apos;.
36. line 3960, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
37. line 4023, char 60: Confusing use of &apos;!&apos;.
38. line 4664, char 30: Use &apos;!==&apos; to compare with &apos;null&apos;.
39. line 4924, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
40. line 4924, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
41. line 4929, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
42. line 5506, char 26: Use &apos;===&apos; to compare with &apos;null&apos;.
43. line 5507, char 35: Use &apos;!==&apos; to compare with &apos;null&apos;.
44. line 5804, char 35: Use &apos;!==&apos; to compare with &apos;null&apos;.
45. line 5961, char 38: Use &apos;!==&apos; to compare with &apos;null&apos;.
46. line 5976, char 39: Use &apos;===&apos; to compare with &apos;null&apos;.
47. line 5977, char 47: Use &apos;===&apos; to compare with &apos;null&apos;.
48. line 6459, char 24: Use &apos;===&apos; to compare with &apos;null&apos;.
49. line 6750, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
50. line 6811, char 47: Use &apos;!==&apos; to compare with &apos;null&apos;.
51. line 6811, char 47: Too many errors. (83% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/dist/jquery.slim.min.js">
		<failure message="51 JSHint Failures">
1. line 2, char 218: Missing semicolon.
2. line 2, char 223: Expected an assignment or function call and instead saw an expression.
3. line 2, char 224: Missing semicolon.
4. line 2, char 562: Expected an assignment or function call and instead saw an expression.
5. line 2, char 563: Missing semicolon.
6. line 2, char 823: Missing semicolon.
7. line 2, char 926: Missing semicolon.
8. line 2, char 1016: Missing semicolon.
9. line 2, char 1045: Use &apos;===&apos; to compare with &apos;null&apos;.
10. line 2, char 1093: Missing semicolon.
11. line 2, char 1179: Missing semicolon.
12. line 2, char 1219: Missing semicolon.
13. line 2, char 1304: Missing semicolon.
14. line 2, char 1307: Missing semicolon.
15. line 2, char 1372: Missing semicolon.
16. line 2, char 1408: Missing semicolon.
17. line 2, char 1444: Missing semicolon.
18. line 2, char 1539: Missing semicolon.
19. line 2, char 1598: Missing semicolon.
20. line 2, char 1864: Use &apos;!==&apos; to compare with &apos;null&apos;.
21. line 2, char 2073: Expected an assignment or function call and instead saw an expression.
22. line 2, char 2083: Missing semicolon.
23. line 2, char 2195: Missing semicolon.
24. line 2, char 2266: Missing semicolon.
25. line 2, char 2300: Use &apos;!==&apos; to compare with &apos;null&apos;.
26. line 2, char 2317: Missing semicolon.
27. line 2, char 2416: Missing semicolon.
28. line 2, char 2587: Missing semicolon.
29. line 2, char 2649: Missing semicolon.
30. line 2, char 2679: Use &apos;===&apos; to compare with &apos;null&apos;.
31. line 2, char 2760: Missing semicolon.
32. line 2, char 2789: Missing semicolon.
33. line 2, char 2851: Missing semicolon.
34. line 2, char 2939: Confusing use of &apos;!&apos;.
35. line 2, char 2947: Missing semicolon.
36. line 2, char 2989: Confusing use of &apos;!&apos;.
37. line 2, char 3006: Missing semicolon.
38. line 2, char 3036: Use &apos;===&apos; to compare with &apos;null&apos;.
39. line 2, char 3063: Missing semicolon.
40. line 2, char 3112: Use &apos;!==&apos; to compare with &apos;null&apos;.
41. line 2, char 3181: Missing semicolon.
42. line 2, char 3218: Use &apos;===&apos; to compare with &apos;null&apos;.
43. line 2, char 3238: Missing semicolon.
44. line 2, char 3334: Missing semicolon.
45. line 2, char 3431: Expected an assignment or function call and instead saw an expression.
46. line 2, char 3441: Missing semicolon.
47. line 2, char 3529: Use &apos;!==&apos; to compare with &apos;null&apos;.
48. line 2, char 3542: Expected an assignment or function call and instead saw an expression.
49. line 2, char 3578: Use &apos;!==&apos; to compare with &apos;null&apos;.
50. line 2, char 3591: Expected an assignment or function call and instead saw an expression.
51. line 2, char 3591: Too many errors. (40% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/external/sizzle/dist/sizzle.js">
		<failure message="21 JSHint Failures">
1. line 195, char 43: Expected an assignment or function call and instead saw an expression.
2. line 633, char 20: [&apos;ID&apos;] is better written in dot notation.
3. line 639, char 18: [&apos;ID&apos;] is better written in dot notation.
4. line 646, char 20: [&apos;ID&apos;] is better written in dot notation.
5. line 657, char 18: [&apos;ID&apos;] is better written in dot notation.
6. line 687, char 14: [&apos;TAG&apos;] is better written in dot notation.
7. line 719, char 14: [&apos;CLASS&apos;] is better written in dot notation.
8. line 1183, char 27: [&apos;CHILD&apos;] is better written in dot notation.
9. line 1233, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
10. line 1522, char 33: Expected an assignment or function call and instead saw an expression.
11. line 1543, char 33: [&apos;empty&apos;] is better written in dot notation.
12. line 1567, char 54: Use &apos;===&apos; to compare with &apos;null&apos;.
13. line 1617, char 13: [&apos;nth&apos;] is better written in dot notation.
14. line 1617, char 35: [&apos;eq&apos;] is better written in dot notation.
15. line 1801, char 22: Use &apos;!==&apos; to compare with &apos;null&apos;.
16. line 1979, char 55: [&apos;TAG&apos;] is better written in dot notation.
17. line 1981, char 59: Use &apos;===&apos; to compare with &apos;null&apos;.
18. line 1991, char 52: Use &apos;!==&apos; to compare with &apos;null&apos;.
19. line 2134, char 34: [&apos;ID&apos;] is better written in dot notation.
20. line 2147, char 22: [&apos;needsContext&apos;] is better written in dot notation.
21. line 2238, char 40: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/external/sizzle/dist/sizzle.min.js">
		<failure message="51 JSHint Failures">
1. line 2, char 73: Missing &apos;()&apos; invoking a constructor.
2. line 2, char 158: Missing semicolon.
3. line 2, char 297: Missing semicolon.
4. line 2, char 1742: Missing semicolon.
5. line 2, char 1912: Missing semicolon.
6. line 2, char 1931: Missing semicolon.
7. line 2, char 1971: Confusing use of &apos;!&apos;.
8. line 2, char 2000: Missing semicolon.
9. line 2, char 2108: Expected an assignment or function call and instead saw an expression.
10. line 2, char 2116: Missing semicolon.
11. line 2, char 2179: Missing semicolon.
12. line 2, char 2233: Expected a conditional expression and instead saw an assignment.
13. line 2, char 2247: Missing semicolon.
14. line 2, char 2249: Missing semicolon.
15. line 2, char 2480: Expected a conditional expression and instead saw an assignment.
16. line 2, char 2559: Missing semicolon.
17. line 2, char 2631: Missing semicolon.
18. line 2, char 2802: Missing semicolon.
19. line 2, char 2857: Expected an assignment or function call and instead saw an expression.
20. line 2, char 2984: Expected an assignment or function call and instead saw an expression.
21. line 2, char 3070: Expected an assignment or function call and instead saw an expression.
22. line 2, char 3071: Missing semicolon.
23. line 2, char 3122: Missing semicolon.
24. line 2, char 3170: Expected an assignment or function call and instead saw an expression.
25. line 2, char 3171: Missing semicolon.
26. line 2, char 3207: Missing semicolon.
27. line 2, char 3313: Missing semicolon.
28. line 2, char 3322: Missing semicolon.
29. line 2, char 3354: Missing semicolon.
30. line 2, char 3420: Missing semicolon.
31. line 2, char 3438: Missing semicolon.
32. line 2, char 3491: Expected an assignment or function call and instead saw an expression.
33. line 2, char 3495: Missing semicolon.
34. line 2, char 3574: Missing semicolon.
35. line 2, char 3708: Expected a conditional expression and instead saw an assignment.
36. line 2, char 3740: Missing semicolon.
37. line 2, char 3835: Missing semicolon.
38. line 2, char 3836: Missing semicolon.
39. line 2, char 3947: Missing semicolon.
40. line 2, char 3948: Missing semicolon.
41. line 2, char 4027: Confusing use of &apos;!&apos;.
42. line 2, char 4139: Confusing use of &apos;!&apos;.
43. line 2, char 4195: Missing semicolon.
44. line 2, char 4196: Missing semicolon.
45. line 2, char 4338: Expected an assignment or function call and instead saw an expression.
46. line 2, char 4339: Missing semicolon.
47. line 2, char 4341: Missing semicolon.
48. line 2, char 4343: Missing semicolon.
49. line 2, char 4414: Missing semicolon.
50. line 2, char 4530: Missing semicolon.
51. line 2, char 4530: Too many errors. (66% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/ajax.js">
		<failure message="4 JSHint Failures">
1. line 466, char 34: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 476, char 36: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 486, char 36: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 538, char 28: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/ajax/jsonp.js" />
	<testcase name="client/bower_components/jquery/src/ajax/load.js" />
	<testcase name="client/bower_components/jquery/src/ajax/parseXML.js" />
	<testcase name="client/bower_components/jquery/src/ajax/script.js" />
	<testcase name="client/bower_components/jquery/src/ajax/var/location.js" />
	<testcase name="client/bower_components/jquery/src/ajax/var/nonce.js" />
	<testcase name="client/bower_components/jquery/src/ajax/var/rquery.js" />
	<testcase name="client/bower_components/jquery/src/ajax/xhr.js" />
	<testcase name="client/bower_components/jquery/src/attributes.js" />
	<testcase name="client/bower_components/jquery/src/attributes/attr.js">
		<failure message="2 JSHint Failures">
1. line 71, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 132, char 47: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/attributes/classes.js" />
	<testcase name="client/bower_components/jquery/src/attributes/prop.js">
		<failure message="3 JSHint Failures">
1. line 108, char 35: Expected an assignment or function call and instead saw an expression.
2. line 118, char 24: Expected an assignment or function call and instead saw an expression.
3. line 121, char 39: Expected an assignment or function call and instead saw an expression.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/attributes/support.js" />
	<testcase name="client/bower_components/jquery/src/attributes/val.js">
		<failure message="5 JSHint Failures">
1. line 39, char 28: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 61, char 22: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 69, char 34: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 89, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
5. line 157, char 21: Expected a conditional expression and instead saw an assignment.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/callbacks.js" />
	<testcase name="client/bower_components/jquery/src/core.js">
		<failure message="9 JSHint Failures">
1. line 69, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 161, char 43: Use &apos;!==&apos; to compare with &apos;null&apos;.
3. line 219, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 270, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
5. line 315, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 324, char 18: Use &apos;!==&apos; to compare with &apos;null&apos;.
7. line 339, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 389, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 399, char 28: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/core/DOMEval.js" />
	<testcase name="client/bower_components/jquery/src/core/access.js">
		<failure message="1 JSHINT Failure">
1. line 12, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/core/init.js" />
	<testcase name="client/bower_components/jquery/src/core/nodeName.js">
		<failure message="1 JSHINT Failure">
1. line 9, char 2: Unnecessary semicolon.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/core/parseHTML.js" />
	<testcase name="client/bower_components/jquery/src/core/ready-no-deferred.js" />
	<testcase name="client/bower_components/jquery/src/core/ready.js" />
	<testcase name="client/bower_components/jquery/src/core/readyException.js" />
	<testcase name="client/bower_components/jquery/src/core/stripAndCollapse.js" />
	<testcase name="client/bower_components/jquery/src/core/support.js" />
	<testcase name="client/bower_components/jquery/src/core/var/rsingleTag.js" />
	<testcase name="client/bower_components/jquery/src/css.js">
		<failure message="1 JSHINT Failure">
1. line 245, char 24: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/css/addGetHookIf.js" />
	<testcase name="client/bower_components/jquery/src/css/adjustCSS.js" />
	<testcase name="client/bower_components/jquery/src/css/curCSS.js" />
	<testcase name="client/bower_components/jquery/src/css/hiddenVisibleSelectors.js" />
	<testcase name="client/bower_components/jquery/src/css/showHide.js">
		<failure message="1 JSHINT Failure">
1. line 74, char 30: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/css/support.js" />
	<testcase name="client/bower_components/jquery/src/css/var/cssExpand.js" />
	<testcase name="client/bower_components/jquery/src/css/var/getStyles.js" />
	<testcase name="client/bower_components/jquery/src/css/var/isHiddenWithinTree.js" />
	<testcase name="client/bower_components/jquery/src/css/var/rmargin.js" />
	<testcase name="client/bower_components/jquery/src/css/var/rnumnonpx.js" />
	<testcase name="client/bower_components/jquery/src/css/var/swap.js" />
	<testcase name="client/bower_components/jquery/src/data.js" />
	<testcase name="client/bower_components/jquery/src/data/Data.js" />
	<testcase name="client/bower_components/jquery/src/data/var/acceptData.js">
		<failure message="1 JSHINT Failure">
1. line 16, char 60: Confusing use of &apos;!&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/data/var/dataPriv.js" />
	<testcase name="client/bower_components/jquery/src/data/var/dataUser.js" />
	<testcase name="client/bower_components/jquery/src/deferred.js">
		<failure message="2 JSHint Failures">
1. line 41, char 21: Value of &apos;value&apos; may be overwritten in IE 8 and earlier.
2. line 275, char 32: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/deferred/exceptionHook.js" />
	<testcase name="client/bower_components/jquery/src/deprecated.js" />
	<testcase name="client/bower_components/jquery/src/dimensions.js" />
	<testcase name="client/bower_components/jquery/src/effects.js">
		<failure message="10 JSHint Failures">
1. line 88, char 16: If a strict mode function is executed using function invocation, its &apos;this&apos; value will be undefined.
2. line 97, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 158, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 176, char 83: Use &apos;!==&apos; to compare with &apos;null&apos;.
5. line 184, char 41: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 229, char 24: Don&apos;t make functions within a loop.
7. line 482, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 548, char 30: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 566, char 28: Use &apos;===&apos; to compare with &apos;null&apos;.
10. line 628, char 22: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/effects/Tween.js">
		<failure message="3 JSHint Failures">
1. line 67, char 42: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 67, char 84: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 88, char 69: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/effects/animatedSelector.js" />
	<testcase name="client/bower_components/jquery/src/event.js">
		<failure message="5 JSHint Failures">
1. line 56, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 56, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 61, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 638, char 26: Use &apos;===&apos; to compare with &apos;null&apos;.
5. line 639, char 35: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/event/ajax.js" />
	<testcase name="client/bower_components/jquery/src/event/alias.js" />
	<testcase name="client/bower_components/jquery/src/event/focusin.js" />
	<testcase name="client/bower_components/jquery/src/event/support.js" />
	<testcase name="client/bower_components/jquery/src/event/trigger.js">
		<failure message="1 JSHINT Failure">
1. line 64, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/exports/amd.js" />
	<testcase name="client/bower_components/jquery/src/exports/global.js" />
	<testcase name="client/bower_components/jquery/src/jquery.js" />
	<testcase name="client/bower_components/jquery/src/manipulation.js">
		<failure message="4 JSHint Failures">
1. line 222, char 35: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 379, char 38: Use &apos;!==&apos; to compare with &apos;null&apos;.
3. line 394, char 39: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 395, char 47: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/manipulation/_evalUrl.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/buildFragment.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/getAll.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/setGlobalEval.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/support.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/var/rcheckableType.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/var/rscriptType.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/var/rtagName.js" />
	<testcase name="client/bower_components/jquery/src/manipulation/wrapMap.js" />
	<testcase name="client/bower_components/jquery/src/offset.js">
		<failure message="2 JSHint Failures">
1. line 56, char 26: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 59, char 27: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/queue.js" />
	<testcase name="client/bower_components/jquery/src/queue/delay.js" />
	<testcase name="client/bower_components/jquery/src/selector-native.js" />
	<testcase name="client/bower_components/jquery/src/selector-sizzle.js" />
	<testcase name="client/bower_components/jquery/src/selector.js" />
	<testcase name="client/bower_components/jquery/src/serialize.js">
		<failure message="3 JSHint Failures">
1. line 33, char 65: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 68, char 43: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 114, char 22: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/traversing.js">
		<failure message="1 JSHINT Failure">
1. line 101, char 35: Use &apos;===&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/traversing/findFilter.js">
		<failure message="1 JSHINT Failure">
1. line 16, char 20: Confusing use of &apos;!&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/jquery/src/traversing/var/dir.js" />
	<testcase name="client/bower_components/jquery/src/traversing/var/rneedsContext.js" />
	<testcase name="client/bower_components/jquery/src/traversing/var/siblings.js" />
	<testcase name="client/bower_components/jquery/src/var/ObjectFunctionString.js" />
	<testcase name="client/bower_components/jquery/src/var/arr.js" />
	<testcase name="client/bower_components/jquery/src/var/class2type.js" />
	<testcase name="client/bower_components/jquery/src/var/concat.js" />
	<testcase name="client/bower_components/jquery/src/var/document.js" />
	<testcase name="client/bower_components/jquery/src/var/documentElement.js" />
	<testcase name="client/bower_components/jquery/src/var/fnToString.js" />
	<testcase name="client/bower_components/jquery/src/var/getProto.js" />
	<testcase name="client/bower_components/jquery/src/var/hasOwn.js" />
	<testcase name="client/bower_components/jquery/src/var/indexOf.js" />
	<testcase name="client/bower_components/jquery/src/var/pnum.js" />
	<testcase name="client/bower_components/jquery/src/var/push.js" />
	<testcase name="client/bower_components/jquery/src/var/rcssNum.js" />
	<testcase name="client/bower_components/jquery/src/var/rnothtmlwhite.js" />
	<testcase name="client/bower_components/jquery/src/var/slice.js" />
	<testcase name="client/bower_components/jquery/src/var/support.js" />
	<testcase name="client/bower_components/jquery/src/var/toString.js" />
	<testcase name="client/bower_components/jquery/src/wrap.js" />
	<testcase name="client/bower_components/ng-file-upload/FileAPI.js">
		<failure message="51 JSHint Failures">
1. line 122, char 17: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
2. line 124, char 52: Missing &apos;()&apos; invoking a constructor.
3. line 302, char 39: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 307, char 17: Comma warnings can be turned off with &apos;laxcomma&apos;.
5. line 306, char 27: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
6. line 307, char 27: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
7. line 313, char 30: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
8. line 314, char 30: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
9. line 332, char 39: Missing &apos;()&apos; invoking a constructor.
10. line 336, char 21: Misleading line break before &apos;?&apos;; readers may interpret this as an expression boundary.
11. line 380, char 31: Missing &apos;()&apos; invoking a constructor.
12. line 406, char 23: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
13. line 407, char 24: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
14. line 408, char 24: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
15. line 456, char 31: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
16. line 457, char 23: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
17. line 458, char 23: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
18. line 465, char 55: Expected a conditional expression and instead saw an assignment.
19. line 484, char 30: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
20. line 485, char 33: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
21. line 486, char 31: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
22. line 487, char 30: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
23. line 499, char 70: Expected an assignment or function call and instead saw an expression.
24. line 507, char 54: Expected an assignment or function call and instead saw an expression.
25. line 774, char 31: Use &apos;===&apos; to compare with &apos;null&apos;.
26. line 797, char 32: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
27. line 798, char 58: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
28. line 799, char 128: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
29. line 819, char 55: Expected an assignment or function call and instead saw an expression.
30. line 1028, char 30: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
31. line 1029, char 36: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
32. line 1030, char 41: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
33. line 1031, char 35: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
34. line 1032, char 39: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
35. line 1033, char 41: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
36. line 1034, char 41: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
37. line 1035, char 37: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
38. line 1036, char 37: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
39. line 1037, char 34: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
40. line 1038, char 38: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
41. line 1039, char 38: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
42. line 1040, char 45: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
43. line 1051, char 53: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
44. line 1052, char 72: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
45. line 1053, char 31: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
46. line 1054, char 32: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
47. line 1055, char 33: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
48. line 1056, char 23: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
49. line 1083, char 50: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
50. line 1084, char 48: Misleading line break before &apos;,&apos;; readers may interpret this as an expression boundary.
51. line 1084, char 48: Too many errors. (25% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/FileAPI.min.js">
		<failure message="51 JSHint Failures">
1. line 5, char 128: Missing &apos;()&apos; invoking a constructor.
2. line 5, char 133: Missing semicolon.
3. line 5, char 151: Missing semicolon.
4. line 5, char 239: Missing semicolon.
5. line 5, char 257: Missing semicolon.
6. line 5, char 688: Missing &apos;()&apos; invoking a constructor.
7. line 5, char 715: Missing semicolon.
8. line 5, char 861: Missing semicolon.
9. line 5, char 930: Missing semicolon.
10. line 5, char 950: Expected an assignment or function call and instead saw an expression.
11. line 5, char 951: Missing semicolon.
12. line 5, char 1061: Expected an assignment or function call and instead saw an expression.
13. line 5, char 1062: Missing semicolon.
14. line 5, char 1112: Missing semicolon.
15. line 5, char 1165: Missing &apos;()&apos; invoking a constructor.
16. line 5, char 1325: Expected an assignment or function call and instead saw an expression.
17. line 5, char 1326: Missing semicolon.
18. line 5, char 1369: Expected an assignment or function call and instead saw an expression.
19. line 5, char 1370: Missing semicolon.
20. line 5, char 1417: Missing semicolon.
21. line 5, char 1476: Missing semicolon.
22. line 5, char 1556: Missing &apos;()&apos; invoking a constructor.
23. line 5, char 1614: Expected an assignment or function call and instead saw an expression.
24. line 5, char 1615: Missing semicolon.
25. line 5, char 1635: Expected an assignment or function call and instead saw an expression.
26. line 5, char 1636: Missing semicolon.
27. line 5, char 1651: Missing semicolon.
28. line 5, char 1675: Missing semicolon.
29. line 5, char 1779: Missing semicolon.
30. line 5, char 1862: Expected an assignment or function call and instead saw an expression.
31. line 5, char 1863: Missing semicolon.
32. line 5, char 1905: Missing semicolon.
33. line 5, char 2063: Expected an assignment or function call and instead saw an expression.
34. line 5, char 2064: Missing semicolon.
35. line 5, char 2066: Missing semicolon.
36. line 5, char 2068: Missing semicolon.
37. line 5, char 2107: Missing semicolon.
38. line 5, char 2109: Missing semicolon.
39. line 5, char 2148: Missing semicolon.
40. line 5, char 2258: Expected an assignment or function call and instead saw an expression.
41. line 5, char 2259: Missing semicolon.
42. line 5, char 2263: Missing semicolon.
43. line 5, char 2305: Missing semicolon.
44. line 5, char 2367: Missing semicolon.
45. line 5, char 2494: Missing semicolon.
46. line 5, char 2877: Missing &apos;()&apos; invoking a constructor.
47. line 5, char 3156: Missing semicolon.
48. line 5, char 3159: Missing semicolon.
49. line 5, char 3373: Missing semicolon.
50. line 5, char 3462: Expected an assignment or function call and instead saw an expression.
51. line 5, char 3462: Too many errors. (83% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/ng-file-upload-all.js">
		<failure message="43 JSHint Failures">
1. line 62, char 122: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 68, char 129: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 74, char 97: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 183, char 26: Use &apos;!==&apos; to compare with &apos;null&apos;.
5. line 183, char 51: Use &apos;!==&apos; to compare with &apos;null&apos;.
6. line 183, char 76: Use &apos;!==&apos; to compare with &apos;null&apos;.
7. line 183, char 101: Use &apos;!==&apos; to compare with &apos;null&apos;.
8. line 296, char 30: Use &apos;===&apos; to compare with &apos;null&apos;.
9. line 390, char 22: Use &apos;!==&apos; to compare with &apos;null&apos;.
10. line 479, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
11. line 547, char 52: Use &apos;===&apos; to compare with &apos;null&apos;.
12. line 633, char 13: Use &apos;!==&apos; to compare with &apos;null&apos;.
13. line 656, char 17: Use &apos;!==&apos; to compare with &apos;null&apos;.
14. line 663, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
15. line 706, char 52: Use &apos;===&apos; to compare with &apos;null&apos;.
16. line 708, char 49: Use &apos;===&apos; to compare with &apos;null&apos;.
17. line 827, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
18. line 829, char 17: Use &apos;===&apos; to compare with &apos;null&apos;.
19. line 1234, char 13: Use &apos;!==&apos; to compare with &apos;null&apos;.
20. line 1334, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
21. line 1399, char 50: Use &apos;!==&apos; to compare with &apos;null&apos;.
22. line 1399, char 102: Use &apos;!==&apos; to compare with &apos;null&apos;.
23. line 1673, char 26: Use &apos;!==&apos; to compare with &apos;null&apos;.
24. line 1674, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
25. line 1679, char 35: Use &apos;===&apos; to compare with &apos;null&apos;.
26. line 1680, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
27. line 1713, char 15: Use &apos;!==&apos; to compare with &apos;null&apos;.
28. line 1732, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
29. line 1760, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
30. line 1774, char 21: Use &apos;!==&apos; to compare with &apos;null&apos;.
31. line 1851, char 17: Use &apos;!==&apos; to compare with &apos;null&apos;.
32. line 1872, char 34: Use &apos;===&apos; to compare with &apos;null&apos;.
33. line 1876, char 81: Use &apos;!==&apos; to compare with &apos;null&apos;.
34. line 1883, char 84: Use &apos;!==&apos; to compare with &apos;null&apos;.
35. line 2167, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
36. line 2334, char 33: Use &apos;===&apos; to compare with &apos;null&apos;.
37. line 2461, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
38. line 2482, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
39. line 2486, char 24: Use &apos;===&apos; to compare with &apos;null&apos;.
40. line 2494, char 19: Use &apos;!==&apos; to compare with &apos;null&apos;.
41. line 2560, char 23: Use &apos;!==&apos; to compare with &apos;null&apos;.
42. line 2565, char 19: Use &apos;!==&apos; to compare with &apos;null&apos;.
43. line 2574, char 22: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/ng-file-upload-all.min.js">
		<failure message="51 JSHint Failures">
1. line 2, char 101: Missing semicolon.
2. line 2, char 158: Missing semicolon.
3. line 2, char 447: Expected an assignment or function call and instead saw an expression.
4. line 2, char 565: Expected an assignment or function call and instead saw an expression.
5. line 2, char 566: Missing semicolon.
6. line 2, char 567: Missing semicolon.
7. line 2, char 633: Expected an assignment or function call and instead saw an expression.
8. line 2, char 660: Missing semicolon.
9. line 2, char 779: Expected an assignment or function call and instead saw an expression.
10. line 2, char 780: Missing semicolon.
11. line 2, char 782: Missing semicolon.
12. line 2, char 943: Use &apos;===&apos; to compare with &apos;null&apos;.
13. line 2, char 969: Missing semicolon.
14. line 2, char 970: Missing semicolon.
15. line 2, char 1141: Use &apos;===&apos; to compare with &apos;null&apos;.
16. line 2, char 1163: Missing semicolon.
17. line 2, char 1164: Missing semicolon.
18. line 2, char 1287: Use &apos;===&apos; to compare with &apos;null&apos;.
19. line 2, char 1309: Missing semicolon.
20. line 2, char 1310: Missing semicolon.
21. line 2, char 1438: Expected an assignment or function call and instead saw an expression.
22. line 2, char 1439: Missing semicolon.
23. line 2, char 1542: Expected an assignment or function call and instead saw an expression.
24. line 2, char 1543: Missing semicolon.
25. line 2, char 1544: Missing semicolon.
26. line 2, char 2269: Missing semicolon.
27. line 2, char 2342: Missing semicolon.
28. line 2, char 2381: Missing semicolon.
29. line 2, char 2448: Missing semicolon.
30. line 2, char 2449: Expected an assignment or function call and instead saw an expression.
31. line 2, char 2551: Missing semicolon.
32. line 2, char 2588: Missing semicolon.
33. line 2, char 2623: Missing semicolon.
34. line 2, char 2707: Expected an assignment or function call and instead saw an expression.
35. line 2, char 2708: Missing semicolon.
36. line 2, char 2992: Expected an assignment or function call and instead saw an expression.
37. line 2, char 2993: Missing semicolon.
38. line 2, char 3025: Missing semicolon.
39. line 2, char 3075: Expected an assignment or function call and instead saw an expression.
40. line 2, char 3130: Use &apos;!==&apos; to compare with &apos;null&apos;.
41. line 2, char 3143: Use &apos;!==&apos; to compare with &apos;null&apos;.
42. line 2, char 3161: Use &apos;!==&apos; to compare with &apos;null&apos;.
43. line 2, char 3179: Use &apos;!==&apos; to compare with &apos;null&apos;.
44. line 2, char 3229: Expected an assignment or function call and instead saw an expression.
45. line 2, char 3232: Missing semicolon.
46. line 2, char 3394: Missing semicolon.
47. line 2, char 3398: Missing semicolon.
48. line 2, char 3467: Missing semicolon.
49. line 2, char 3469: Missing semicolon.
50. line 2, char 3651: Expected an assignment or function call and instead saw an expression.
51. line 2, char 3651: Too many errors. (66% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/ng-file-upload-shim.js">
		<failure message="9 JSHint Failures">
1. line 62, char 122: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 68, char 129: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 74, char 97: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 183, char 26: Use &apos;!==&apos; to compare with &apos;null&apos;.
5. line 183, char 51: Use &apos;!==&apos; to compare with &apos;null&apos;.
6. line 183, char 76: Use &apos;!==&apos; to compare with &apos;null&apos;.
7. line 183, char 101: Use &apos;!==&apos; to compare with &apos;null&apos;.
8. line 296, char 30: Use &apos;===&apos; to compare with &apos;null&apos;.
9. line 390, char 22: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/ng-file-upload-shim.min.js">
		<failure message="51 JSHint Failures">
1. line 2, char 101: Missing semicolon.
2. line 2, char 158: Missing semicolon.
3. line 2, char 447: Expected an assignment or function call and instead saw an expression.
4. line 2, char 565: Expected an assignment or function call and instead saw an expression.
5. line 2, char 566: Missing semicolon.
6. line 2, char 567: Missing semicolon.
7. line 2, char 633: Expected an assignment or function call and instead saw an expression.
8. line 2, char 660: Missing semicolon.
9. line 2, char 779: Expected an assignment or function call and instead saw an expression.
10. line 2, char 780: Missing semicolon.
11. line 2, char 782: Missing semicolon.
12. line 2, char 943: Use &apos;===&apos; to compare with &apos;null&apos;.
13. line 2, char 969: Missing semicolon.
14. line 2, char 970: Missing semicolon.
15. line 2, char 1141: Use &apos;===&apos; to compare with &apos;null&apos;.
16. line 2, char 1163: Missing semicolon.
17. line 2, char 1164: Missing semicolon.
18. line 2, char 1287: Use &apos;===&apos; to compare with &apos;null&apos;.
19. line 2, char 1309: Missing semicolon.
20. line 2, char 1310: Missing semicolon.
21. line 2, char 1438: Expected an assignment or function call and instead saw an expression.
22. line 2, char 1439: Missing semicolon.
23. line 2, char 1542: Expected an assignment or function call and instead saw an expression.
24. line 2, char 1543: Missing semicolon.
25. line 2, char 1544: Missing semicolon.
26. line 2, char 2269: Missing semicolon.
27. line 2, char 2342: Missing semicolon.
28. line 2, char 2381: Missing semicolon.
29. line 2, char 2448: Missing semicolon.
30. line 2, char 2449: Expected an assignment or function call and instead saw an expression.
31. line 2, char 2551: Missing semicolon.
32. line 2, char 2588: Missing semicolon.
33. line 2, char 2623: Missing semicolon.
34. line 2, char 2707: Expected an assignment or function call and instead saw an expression.
35. line 2, char 2708: Missing semicolon.
36. line 2, char 2992: Expected an assignment or function call and instead saw an expression.
37. line 2, char 2993: Missing semicolon.
38. line 2, char 3025: Missing semicolon.
39. line 2, char 3075: Expected an assignment or function call and instead saw an expression.
40. line 2, char 3130: Use &apos;!==&apos; to compare with &apos;null&apos;.
41. line 2, char 3143: Use &apos;!==&apos; to compare with &apos;null&apos;.
42. line 2, char 3161: Use &apos;!==&apos; to compare with &apos;null&apos;.
43. line 2, char 3179: Use &apos;!==&apos; to compare with &apos;null&apos;.
44. line 2, char 3229: Expected an assignment or function call and instead saw an expression.
45. line 2, char 3232: Missing semicolon.
46. line 2, char 3394: Missing semicolon.
47. line 2, char 3398: Missing semicolon.
48. line 2, char 3467: Missing semicolon.
49. line 2, char 3469: Missing semicolon.
50. line 2, char 3651: Expected an assignment or function call and instead saw an expression.
51. line 2, char 3651: Too many errors. (100% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/ng-file-upload.js">
		<failure message="34 JSHint Failures">
1. line 57, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
2. line 125, char 52: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 211, char 13: Use &apos;!==&apos; to compare with &apos;null&apos;.
4. line 234, char 17: Use &apos;!==&apos; to compare with &apos;null&apos;.
5. line 241, char 25: Use &apos;!==&apos; to compare with &apos;null&apos;.
6. line 284, char 52: Use &apos;===&apos; to compare with &apos;null&apos;.
7. line 286, char 49: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 405, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 407, char 17: Use &apos;===&apos; to compare with &apos;null&apos;.
10. line 812, char 13: Use &apos;!==&apos; to compare with &apos;null&apos;.
11. line 912, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
12. line 977, char 50: Use &apos;!==&apos; to compare with &apos;null&apos;.
13. line 977, char 102: Use &apos;!==&apos; to compare with &apos;null&apos;.
14. line 1251, char 26: Use &apos;!==&apos; to compare with &apos;null&apos;.
15. line 1252, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
16. line 1257, char 35: Use &apos;===&apos; to compare with &apos;null&apos;.
17. line 1258, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
18. line 1291, char 15: Use &apos;!==&apos; to compare with &apos;null&apos;.
19. line 1310, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
20. line 1338, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
21. line 1352, char 21: Use &apos;!==&apos; to compare with &apos;null&apos;.
22. line 1429, char 17: Use &apos;!==&apos; to compare with &apos;null&apos;.
23. line 1450, char 34: Use &apos;===&apos; to compare with &apos;null&apos;.
24. line 1454, char 81: Use &apos;!==&apos; to compare with &apos;null&apos;.
25. line 1461, char 84: Use &apos;!==&apos; to compare with &apos;null&apos;.
26. line 1745, char 20: Use &apos;!==&apos; to compare with &apos;null&apos;.
27. line 1912, char 33: Use &apos;===&apos; to compare with &apos;null&apos;.
28. line 2039, char 21: Use &apos;===&apos; to compare with &apos;null&apos;.
29. line 2060, char 20: Use &apos;===&apos; to compare with &apos;null&apos;.
30. line 2064, char 24: Use &apos;===&apos; to compare with &apos;null&apos;.
31. line 2072, char 19: Use &apos;!==&apos; to compare with &apos;null&apos;.
32. line 2138, char 23: Use &apos;!==&apos; to compare with &apos;null&apos;.
33. line 2143, char 19: Use &apos;!==&apos; to compare with &apos;null&apos;.
34. line 2152, char 22: Use &apos;!==&apos; to compare with &apos;null&apos;.
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/ng-file-upload.min.js">
		<failure message="51 JSHint Failures">
1. line 2, char 207: Expected an assignment or function call and instead saw an expression.
2. line 2, char 208: Missing semicolon.
3. line 2, char 237: Missing semicolon.
4. line 2, char 238: Missing semicolon.
5. line 2, char 289: Expected an assignment or function call and instead saw an expression.
6. line 2, char 544: Missing semicolon.
7. line 2, char 545: Expected an assignment or function call and instead saw an expression.
8. line 2, char 546: Missing semicolon.
9. line 2, char 572: Use &apos;!==&apos; to compare with &apos;null&apos;.
10. line 2, char 708: Missing semicolon.
11. line 2, char 895: Expected an assignment or function call and instead saw an expression.
12. line 2, char 896: Missing semicolon.
13. line 2, char 945: Expected an assignment or function call and instead saw an expression.
14. line 2, char 946: Missing semicolon.
15. line 2, char 971: Missing semicolon.
16. line 2, char 996: Missing semicolon.
17. line 2, char 998: Missing semicolon.
18. line 2, char 1047: Expected an assignment or function call and instead saw an expression.
19. line 2, char 1316: Expected an assignment or function call and instead saw an expression.
20. line 2, char 1317: Missing semicolon.
21. line 2, char 1407: Expected an assignment or function call and instead saw an expression.
22. line 2, char 1408: Missing semicolon.
23. line 2, char 1413: Expected an assignment or function call and instead saw an expression.
24. line 2, char 1414: Missing semicolon.
25. line 2, char 1415: Missing semicolon.
26. line 2, char 1639: Use &apos;===&apos; to compare with &apos;null&apos;.
27. line 2, char 1732: Expected an assignment or function call and instead saw an expression.
28. line 2, char 1733: Missing semicolon.
29. line 2, char 1754: Missing semicolon.
30. line 2, char 1860: Expected an assignment or function call and instead saw an expression.
31. line 2, char 1861: Missing semicolon.
32. line 2, char 1882: Missing semicolon.
33. line 2, char 2029: Missing semicolon.
34. line 2, char 2033: Missing semicolon.
35. line 2, char 2116: Missing semicolon.
36. line 2, char 2120: Missing semicolon.
37. line 2, char 2202: Missing semicolon.
38. line 2, char 2206: Missing semicolon.
39. line 2, char 2279: Missing semicolon.
40. line 2, char 2283: Missing semicolon.
41. line 2, char 2391: Expected an assignment or function call and instead saw an expression.
42. line 2, char 2392: Missing semicolon.
43. line 2, char 2393: Missing semicolon.
44. line 2, char 2405: Missing semicolon.
45. line 2, char 2513: Missing semicolon.
46. line 2, char 2517: Missing semicolon.
47. line 2, char 2587: Expected an assignment or function call and instead saw an expression.
48. line 2, char 2597: Missing semicolon.
49. line 2, char 2708: Missing semicolon.
50. line 2, char 2708: Expected an assignment or function call and instead saw an expression.
51. line 2, char 2708: Too many errors. (66% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/ng-file-upload/package.js" />
	<testcase name="client/bower_components/underscore/underscore-min.js">
		<failure message="51 JSHint Failures">
1. line 5, char 102: Missing semicolon.
2. line 5, char 111: Missing semicolon.
3. line 5, char 261: Missing semicolon.
4. line 5, char 262: Missing semicolon.
5. line 5, char 383: Missing semicolon.
6. line 5, char 384: Missing semicolon.
7. line 5, char 519: Expected an assignment or function call and instead saw an expression.
8. line 5, char 682: Missing semicolon.
9. line 5, char 683: Missing semicolon.
10. line 5, char 884: Expected an assignment or function call and instead saw an expression.
11. line 5, char 885: Missing semicolon.
12. line 5, char 1168: Missing semicolon.
13. line 5, char 1299: Expected an assignment or function call and instead saw an expression.
14. line 5, char 1363: Use &apos;===&apos; to compare with &apos;null&apos;.
15. line 5, char 1416: Missing semicolon.
16. line 5, char 1466: Missing semicolon.
17. line 5, char 1520: Missing semicolon.
18. line 5, char 1578: Missing semicolon.
19. line 5, char 1579: Missing semicolon.
20. line 5, char 1625: Missing semicolon.
21. line 5, char 1626: Missing semicolon.
22. line 5, char 1657: Use &apos;===&apos; to compare with &apos;null&apos;.
23. line 5, char 1737: Missing semicolon.
24. line 5, char 1781: Missing semicolon.
25. line 5, char 1857: Use &apos;===&apos; to compare with &apos;null&apos;.
26. line 5, char 1983: Expected an assignment or function call and instead saw an expression.
27. line 5, char 1984: Missing semicolon.
28. line 5, char 1993: Missing semicolon.
29. line 5, char 1994: Missing semicolon.
30. line 5, char 2078: Missing &apos;()&apos; invoking a constructor.
31. line 5, char 2105: Missing semicolon.
32. line 5, char 2151: Use &apos;===&apos; to compare with &apos;null&apos;.
33. line 5, char 2166: Missing semicolon.
34. line 5, char 2167: Missing semicolon.
35. line 5, char 2263: Missing semicolon.
36. line 5, char 2427: Missing semicolon.
37. line 5, char 2436: Missing semicolon.
38. line 5, char 2577: Missing semicolon.
39. line 5, char 2586: Missing semicolon.
40. line 5, char 2765: Missing semicolon.
41. line 5, char 2869: Expected an assignment or function call and instead saw an expression.
42. line 5, char 2870: Missing semicolon.
43. line 5, char 2874: Missing semicolon.
44. line 5, char 2936: Missing semicolon.
45. line 5, char 3072: Missing semicolon.
46. line 5, char 3081: Missing semicolon.
47. line 5, char 3215: Missing semicolon.
48. line 5, char 3224: Missing semicolon.
49. line 5, char 3355: Missing semicolon.
50. line 5, char 3477: Use &apos;===&apos; to compare with &apos;null&apos;.
51. line 5, char 3477: Too many errors. (83% scanned).
		</failure>
	</testcase>
	<testcase name="client/bower_components/underscore/underscore.js">
		<failure message="32 JSHint Failures">
1. line 65, char 22: Use &apos;===&apos; to compare with &apos;null&apos;.
2. line 88, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
3. line 101, char 29: Use &apos;===&apos; to compare with &apos;null&apos;.
4. line 120, char 22: Missing &apos;()&apos; invoking a constructor.
5. line 127, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
6. line 277, char 19: Use &apos;===&apos; to compare with &apos;null&apos;.
7. line 302, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
8. line 302, char 33: Use &apos;!==&apos; to compare with &apos;null&apos;.
9. line 327, char 18: Use &apos;===&apos; to compare with &apos;null&apos;.
10. line 327, char 33: Use &apos;!==&apos; to compare with &apos;null&apos;.
11. line 366, char 11: Use &apos;===&apos; to compare with &apos;null&apos;.
12. line 435, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
13. line 457, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
14. line 458, char 11: Use &apos;===&apos; to compare with &apos;null&apos;.
15. line 466, char 63: Use &apos;===&apos; to compare with &apos;null&apos;.
16. line 472, char 15: Use &apos;===&apos; to compare with &apos;null&apos;.
17. line 473, char 11: Use &apos;===&apos; to compare with &apos;null&apos;.
18. line 481, char 32: Use &apos;===&apos; to compare with &apos;null&apos;.
19. line 528, char 18: Use &apos;!==&apos; to compare with &apos;null&apos;.
20. line 679, char 14: Use &apos;===&apos; to compare with &apos;null&apos;.
21. line 1025, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
22. line 1084, char 16: Use &apos;===&apos; to compare with &apos;null&apos;.
23. line 1100, char 11: Use &apos;===&apos; to compare with &apos;null&apos;.
24. line 1100, char 24: Use &apos;===&apos; to compare with &apos;null&apos;.
25. line 1138, char 27: Misleading line break before &apos;&amp;&amp;&apos;; readers may interpret this as an expression boundary.
26. line 1195, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
27. line 1268, char 16: Use &apos;!==&apos; to compare with &apos;null&apos;.
28. line 1299, char 16: Use &apos;===&apos; to compare with &apos;null&apos;.
29. line 1323, char 13: Use &apos;===&apos; to compare with &apos;null&apos;.
30. line 1356, char 23: Use &apos;===&apos; to compare with &apos;null&apos;.
31. line 1366, char 24: Use &apos;===&apos; to compare with &apos;null&apos;.
32. line 1454, char 32: The Function constructor is a form of eval.
		</failure>
	</testcase>
	<testcase name="client/client.js">
		<failure message="5 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 18, char 3: Missing semicolon.
3. line 25, char 3: Missing semicolon.
4. line 3, char 1: &apos;angular&apos; is not defined.
5. line 20, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_EmployeeReview/mod.EmployeeReview.js" />
	<testcase name="client/mod_EmployeeReview/views/admin/EmployeeReview.adminCtrl.js" />
	<testcase name="client/mod_EmployeeReview/views/dashboard/EmployeeReview.dashboardCtrl.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_EmployeeReview/views/menu/EmployeeReview.headerCtrl.js" />
	<testcase name="client/mod_idn/mod.idn.js">
		<failure message="13 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 168, char 30: Unnecessary semicolon.
3. line 171, char 26: Unnecessary semicolon.
4. line 174, char 22: Unnecessary semicolon.
5. line 201, char 26: Unnecessary semicolon.
6. line 206, char 30: Unnecessary semicolon.
7. line 209, char 26: Unnecessary semicolon.
8. line 212, char 22: Unnecessary semicolon.
9. line 214, char 18: Unnecessary semicolon.
10. line 216, char 14: Unnecessary semicolon.
11. line 11, char 1: &apos;angular&apos; is not defined.
12. line 14, char 1: &apos;angular&apos; is not defined.
13. line 156, char 21: &apos;console&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/controllers/registration/loginCtrl.js">
		<failure message="2 JSHint Failures">
1. line 53, char 22: Unnecessary semicolon.
2. line 98, char 10: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/controllers/registration/registerCtrl.js">
		<failure message="4 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 68, char 10: Missing semicolon.
3. line 2, char 1: &apos;angular&apos; is not defined.
4. line 36, char 13: &apos;console&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/controllers/registration/registerSuccessCtrl.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/idnConstants.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/services/SessionService.js">
		<failure message="3 JSHint Failures">
1. line 57, char 18: Unnecessary semicolon.
2. line 63, char 18: Unnecessary semicolon.
3. line 84, char 14: Unnecessary semicolon.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/services/SessionService_ipCookie.js">
		<failure message="1 JSHINT Failure">
1. line 44, char 14: Unnecessary semicolon.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/services/SubdomainService.js">
		<failure message="5 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 18, char 11: Missing semicolon.
3. line 37, char 15: Missing semicolon.
4. line 41, char 4: Missing semicolon.
5. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/services/registration/loginService.js" />
	<testcase name="client/mod_idn/scripts/services/registration/registerService.js">
		<failure message="4 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 16, char 22: Unnecessary semicolon.
3. line 40, char 19: Missing semicolon.
4. line 2, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/services/shared/alertService.js" />
	<testcase name="client/mod_idn/scripts/services/social/FBService.js">
		<failure message="1 JSHINT Failure">
1. line 66, char 6: Missing semicolon.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/services/social/GoogleService.js">
		<failure message="7 JSHint Failures">
1. line 19, char 6: Missing semicolon.
2. line 21, char 27: [&apos;status&apos;] is better written in dot notation.
3. line 21, char 37: [&apos;signed_in&apos;] is better written in dot notation.
4. line 21, char 68: [&apos;status&apos;] is better written in dot notation.
5. line 21, char 78: [&apos;method&apos;] is better written in dot notation.
6. line 24, char 53: [&apos;access_token&apos;] is better written in dot notation.
7. line 25, char 51: [&apos;expires_in&apos;] is better written in dot notation.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/scripts/services/social/InstaService.js" />
	<testcase name="client/mod_idn/scripts/services/social/LinkedInService.js" />
	<testcase name="client/mod_idn/scripts/services/social/SocialLoginService.js" />
	<testcase name="client/mod_idn/views/dashboard/RolesService.js">
		<failure message="7 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 68, char 15: Missing semicolon.
3. line 81, char 15: Missing semicolon.
4. line 96, char 15: Missing semicolon.
5. line 3, char 1: &apos;angular&apos; is not defined.
6. line 21, char 17: &apos;console&apos; is not defined.
7. line 24, char 17: &apos;console&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/views/dashboard/UserService.js">
		<failure message="7 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 8, char 21: Expected an assignment or function call and instead saw an expression.
3. line 10, char 21: Expected an assignment or function call and instead saw an expression.
4. line 63, char 19: Missing semicolon.
5. line 3, char 1: &apos;angular&apos; is not defined.
6. line 34, char 21: &apos;console&apos; is not defined.
7. line 35, char 21: &apos;console&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/views/dashboard/idn.dashboardCtrl.js">
		<failure message="11 JSHint Failures">
1. line 9, char 1: Use the function form of &quot;use strict&quot;.
2. line 27, char 14: Unnecessary semicolon.
3. line 65, char 26: Unnecessary semicolon.
4. line 68, char 23: Missing semicolon.
5. line 83, char 26: Unnecessary semicolon.
6. line 89, char 23: Missing semicolon.
7. line 90, char 14: Unnecessary semicolon.
8. line 95, char 10: Unnecessary semicolon.
9. line 11, char 1: &apos;angular&apos; is not defined.
10. line 36, char 13: &apos;console&apos; is not defined.
11. line 37, char 13: &apos;console&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/views/header/idn.loginHeaderCtrl.js">
		<failure message="3 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 22, char 8: Missing semicolon.
3. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/views/menu/idn.headerCtrl.js">
		<failure message="3 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 12, char 4: Missing semicolon.
3. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/views/menu/idn.navCtrl.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/views/profile/idn.profileCtrl.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_idn/views/settings/idn.settingsCtrl.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_nbos/alert/alertService.js">
		<failure message="3 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 2, char 1: &apos;angular&apos; is not defined.
3. line 23, char 18: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
	<testcase name="client/mod_nbos/mod.nbos.js">
		<failure message="2 JSHint Failures">
1. line 1, char 1: Use the function form of &quot;use strict&quot;.
2. line 3, char 1: &apos;angular&apos; is not defined.
		</failure>
	</testcase>
</testsuite>
